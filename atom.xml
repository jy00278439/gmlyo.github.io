<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>G加菲</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.gmlyo.com/"/>
  <updated>2018-09-15T13:59:05.991Z</updated>
  <id>http://www.gmlyo.com/</id>
  
  <author>
    <name>G加菲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Python 生成器</title>
    <link href="http://www.gmlyo.com/2018/09/12/Python-%E7%94%9F%E6%88%90%E5%99%A8/"/>
    <id>http://www.gmlyo.com/2018/09/12/Python-生成器/</id>
    <published>2018-09-12T06:53:52.000Z</published>
    <updated>2018-09-15T13:59:05.991Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-生成器"><a href="#Python-生成器" class="headerlink" title="Python 生成器"></a>Python 生成器</h1><a id="more"></a><h2 id="什么是生成器？"><a href="#什么是生成器？" class="headerlink" title="什么是生成器？"></a>什么是生成器？</h2><blockquote><p>在函数体内凡是有 yield 关键字，再调用函数就不会执行函数体代码，得到的返回值就是一个生成器对象。</p></blockquote><h2 id="为什么要用生成器？"><a href="#为什么要用生成器？" class="headerlink" title="为什么要用生成器？"></a>为什么要用生成器？</h2><blockquote><p>为了掌握一种自定义迭代器的方式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'first'</span>)</span><br><span class="line">    print(<span class="string">'second'</span>)</span><br><span class="line">    print(<span class="string">'third'</span>)</span><br><span class="line"></span><br><span class="line">func()</span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">first</span><br><span class="line">second</span><br><span class="line">third</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>在函数体内凡是有 <code>yield</code> 关键字，再调用函数就不会执行函数体代码，得到的返回值是一个生成器对象。<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'first'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    print(<span class="string">'second'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    print(<span class="string">'third'</span>)</span><br><span class="line"></span><br><span class="line">g = func()</span><br><span class="line">print(g)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;generator object func at <span class="number">0x000002C5C3A05EB8</span>&gt;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>用 <code>yield</code> 的目的就是为了使用自定义迭代器<br>为什么要自定义迭代器？<br>优点：更加节省内存，可以生成一个无限大的迭代器</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'first'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span></span><br><span class="line">    print(<span class="string">'second'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span></span><br><span class="line">    print(<span class="string">'third'</span>)</span><br><span class="line"></span><br><span class="line">g = func()</span><br><span class="line">next(g)    <span class="comment"># 等于 g.__next__()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">first</span><br></pre></td></tr></table></figure><blockquote><p><code>next(g)</code> 会去执行一次，才会去执行 g 所对应的函数体内的代码运行<br>过程：会触发生成器 <code>g</code> 所对应函数的执行，直到遇到 <code>yield</code> 才停止，然后把 <code>yield</code> 后的返回值当做本次 <code>next</code> 操作的结果<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'first'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span>    <span class="comment"># 暂停</span></span><br><span class="line">    print(<span class="string">'second'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span>    <span class="comment"># 暂停</span></span><br><span class="line">    print(<span class="string">'third'</span>)</span><br><span class="line"></span><br><span class="line">g = func()</span><br><span class="line">res1 = next(g)    <span class="comment"># g.__next__()</span></span><br><span class="line">print(res1)</span><br><span class="line"></span><br><span class="line">res2 = next(g)    <span class="comment"># g.__next__()</span></span><br><span class="line">print(res2)</span><br><span class="line"></span><br><span class="line">res3 = next(g)    <span class="comment"># g.__next__()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">first</span><br><span class="line"><span class="number">1</span></span><br><span class="line">second</span><br><span class="line"><span class="number">2</span></span><br><span class="line">third</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">    res3 = next(g)</span><br><span class="line">StopIteration</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">func</span><span class="params">()</span>:</span></span><br><span class="line">    print(<span class="string">'first'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">1</span>    <span class="comment"># 暂停</span></span><br><span class="line">    print(<span class="string">'second'</span>)</span><br><span class="line">    <span class="keyword">yield</span> <span class="number">2</span>    <span class="comment"># 暂停</span></span><br><span class="line">    print(<span class="string">'third'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># g = func()</span></span><br><span class="line"><span class="comment"># for item in g:</span></span><br><span class="line"><span class="comment">#    print(item)</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> func():</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">first</span><br><span class="line"><span class="number">1</span></span><br><span class="line">second</span><br><span class="line"><span class="number">2</span></span><br><span class="line">third</span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><blockquote><p>模拟 <code>range()</code> 函数功能<br>自定义一个 <code>range()</code> 函数<br><code>range(1, 100, 2)</code></p></blockquote><blockquote><p>Python2 的做法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_range</span><span class="params">(start, stop, step=<span class="number">1</span>)</span>:</span></span><br><span class="line">    res = []</span><br><span class="line">    <span class="keyword">while</span> start &lt; stop:</span><br><span class="line">        res.append(start)</span><br><span class="line">        start += step</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line">res = my_range(<span class="number">1</span>, <span class="number">100</span>, <span class="number">2</span>)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">1</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">7</span>, <span class="number">9</span>, <span class="number">11</span>, <span class="number">13</span>, <span class="number">15</span>, <span class="number">17</span>, <span class="number">19</span>, <span class="number">21</span>, <span class="number">23</span>, <span class="number">25</span>, <span class="number">27</span>, <span class="number">29</span>, <span class="number">31</span>, <span class="number">33</span>, <span class="number">35</span>, <span class="number">37</span>, <span class="number">39</span>, <span class="number">41</span>, <span class="number">43</span>, <span class="number">45</span>, <span class="number">47</span>, <span class="number">49</span>, <span class="number">51</span>, <span class="number">53</span>, <span class="number">55</span>, <span class="number">57</span>, <span class="number">59</span>, <span class="number">61</span>, <span class="number">63</span>, <span class="number">65</span>, <span class="number">67</span>, <span class="number">69</span>, <span class="number">71</span>, <span class="number">73</span>, <span class="number">75</span>, <span class="number">77</span>, <span class="number">79</span>, <span class="number">81</span>, <span class="number">83</span>, <span class="number">85</span>, <span class="number">87</span>, <span class="number">89</span>, <span class="number">91</span>, <span class="number">93</span>, <span class="number">95</span>, <span class="number">97</span>, <span class="number">99</span>]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Python3 的做法<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_range</span><span class="params">(start, stop, step=<span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> start &lt; stop:</span><br><span class="line">        <span class="keyword">yield</span> start</span><br><span class="line">        start += step</span><br><span class="line"></span><br><span class="line">res = my_range(<span class="number">1</span>, <span class="number">1000</span>, <span class="number">2</span>)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;generator object my_range at <span class="number">0x00000294DBE75EB8</span>&gt;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>只要函数体内出现 <code>yield</code> 再去调函数，就不会运行函数体代码<br>再调用函数会得到一个返回值，这个返回值就是我们所需要的生成器对象（迭代器对象）<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_range</span><span class="params">(start, stop, step=<span class="number">1</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'开始运行'</span>)</span><br><span class="line">    <span class="keyword">while</span> start &lt; stop:</span><br><span class="line">        <span class="keyword">yield</span> start</span><br><span class="line">        start += step</span><br><span class="line">    print(<span class="string">'结束运行'</span>)</span><br><span class="line"></span><br><span class="line">obj = my_range(<span class="number">1</span>, <span class="number">1000</span>, <span class="number">2</span>)</span><br><span class="line">print(obj)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;generator object my_range at <span class="number">0x00000294DBE75EB8</span>&gt;</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_range</span><span class="params">(start, stop, step=<span class="number">1</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'开始运行'</span>)</span><br><span class="line">    <span class="keyword">while</span> start &lt; stop:</span><br><span class="line">        <span class="keyword">yield</span> start</span><br><span class="line">        start += step</span><br><span class="line">    print(<span class="string">'结束运行'</span>)</span><br><span class="line"></span><br><span class="line">obj = my_range(<span class="number">1</span>, <span class="number">1000</span>, <span class="number">2</span>)</span><br><span class="line">res1 = next(obj)</span><br><span class="line">print(res1)</span><br><span class="line"></span><br><span class="line">res2 = next(obj)</span><br><span class="line">print(res2)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">开始运行</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_range</span><span class="params">(start, stop, step=<span class="number">1</span>)</span>:</span></span><br><span class="line">    print(<span class="string">'开始运行'</span>)</span><br><span class="line">    <span class="keyword">while</span> start &lt; stop:</span><br><span class="line">        <span class="keyword">yield</span> start</span><br><span class="line">        start += step</span><br><span class="line">    print(<span class="string">'结束运行'</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> my_range(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>):</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">开始运行</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">9</span></span><br><span class="line">结束运行</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">my_range</span><span class="params">(start, stop, step=<span class="number">1</span>)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> start &lt; stop:</span><br><span class="line">        <span class="keyword">yield</span> start</span><br><span class="line">        start += step</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> my_range(<span class="number">1</span>, <span class="number">10</span>, <span class="number">2</span>):</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">5</span></span><br><span class="line"><span class="number">7</span></span><br><span class="line"><span class="number">9</span></span><br></pre></td></tr></table></figure><h2 id="总结"><a href="#总结" class="headerlink" title="总结"></a>总结</h2><blockquote><p><code>yield</code> 提供了一种自定义迭代器的方式。<br>与 <code>return</code> 对比，都能返回值，都能返回多个值，都没有类型限制。<br><code>return</code> 只能返回一次值，<code>yield</code> 能暂停住函数，把函数体暂停在某一个位置，可以返回多次值。<code>yield</code> 可以帮我们保存函数的执行状态。</p></blockquote><h2 id="yield-表达式形式应用"><a href="#yield-表达式形式应用" class="headerlink" title="yield 表达式形式应用"></a>yield 表达式形式应用</h2><p><strong>示例1</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开吃'</span> % name)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span></span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % (name, food))</span><br><span class="line"></span><br><span class="line">g = dog(<span class="string">'来福'</span>)</span><br><span class="line">print(g)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;generator object dog at <span class="number">0x000001A607255F68</span>&gt;</span><br></pre></td></tr></table></figure><p><strong>示例2</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开吃'</span> % name)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span></span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % (name, food))</span><br><span class="line"></span><br><span class="line">g = dog(<span class="string">'来福'</span>)</span><br><span class="line">next(g)    <span class="comment"># 让来福准备好，即让生成器对象先暂停到一个位置，准备接收</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">来福 准备开吃</span><br></pre></td></tr></table></figure><p><strong>示例3</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开吃'</span> % name)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span>    <span class="comment"># 暂停 food = yield = None</span></span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % (name, food))</span><br><span class="line"></span><br><span class="line">g = dog(<span class="string">'来福'</span>)</span><br><span class="line">next(g)    <span class="comment"># 让来福准备好，即让生成器对象先暂停到一个位置，准备接收</span></span><br><span class="line">next(g)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">来福 准备开吃</span><br><span class="line">来福 吃了 <span class="keyword">None</span></span><br></pre></td></tr></table></figure><p><strong>示例4</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开吃'</span> % name)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span>    <span class="comment"># 暂停 food = yield = '骨头'</span></span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % (name, food))</span><br><span class="line"></span><br><span class="line">g = dog(<span class="string">'来福'</span>)</span><br><span class="line">next(g)    <span class="comment"># 让来福准备好，即让生成器对象先暂停到一个位置，准备接收</span></span><br><span class="line">g.send(<span class="string">'骨头'</span>)</span><br><span class="line">g.send(<span class="string">'肉'</span>)</span><br><span class="line">g.send(<span class="string">'包子'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">来福 准备开吃</span><br><span class="line">来福 吃了 骨头</span><br><span class="line">来福 吃了 肉</span><br><span class="line">来福 吃了 包子</span><br></pre></td></tr></table></figure><blockquote><p>上面方式是只调用了一次函数</p></blockquote><blockquote><p>下面方式是每次都要调用一次函数<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(food)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 吃了 %s'</span> % (food))</span><br><span class="line"></span><br><span class="line">dog(<span class="string">'来福1'</span>)</span><br><span class="line">dog(<span class="string">'来福2'</span>)</span><br><span class="line">dog(<span class="string">'来福3'</span>)</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>两者的区别<br>执行函数体代码，会产生一个内存空间<br>每调用一次函数，就要申请一次内存空间</p></blockquote><p><strong>示例5</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开吃'</span> % name)</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span> <span class="number">123123</span>   <span class="comment"># 暂停 food = yield = None</span></span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % (name, food))</span><br><span class="line"></span><br><span class="line">g = dog(<span class="string">'来福'</span>)</span><br><span class="line">res1 = next(g)</span><br><span class="line">print(res1)</span><br><span class="line"></span><br><span class="line">res2 = g.send(<span class="string">'骨头'</span>)    <span class="comment"># food = yield 123123 &lt;== 暂停 food = yield = '骨头'</span></span><br><span class="line">print(res2)</span><br><span class="line"></span><br><span class="line">res3 = g.send(<span class="string">'骨头1'</span>)    <span class="comment"># food = yield 123123 &lt;== 暂停 food = yield = '骨头1'</span></span><br><span class="line">print(res3)</span><br><span class="line"></span><br><span class="line">res4 = next(g)    <span class="comment"># food = yield 123123 &lt;== 暂停 food = yield = None</span></span><br><span class="line">print(res4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">来福 准备开吃</span><br><span class="line"><span class="number">123123</span></span><br><span class="line">来福 吃了 骨头</span><br><span class="line"><span class="number">123123</span></span><br><span class="line">来福 吃了 骨头<span class="number">1</span></span><br><span class="line"><span class="number">123123</span></span><br><span class="line">来福 吃了 <span class="keyword">None</span></span><br><span class="line"><span class="number">123123</span></span><br></pre></td></tr></table></figure></p><p><strong>示例7</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开吃'</span> % name)</span><br><span class="line">    food_list = []</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span> food_list</span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % (name, food))</span><br><span class="line">        food_list.append(food)</span><br><span class="line"></span><br><span class="line">g = dog(<span class="string">'来福'</span>)</span><br><span class="line">res1 = next(g)</span><br><span class="line">print(res1)</span><br><span class="line"></span><br><span class="line">res2 = g.send(<span class="string">'骨头'</span>)</span><br><span class="line">print(res2)</span><br><span class="line"></span><br><span class="line">res3 = g.send(<span class="string">'骨头1'</span>)</span><br><span class="line">print(res3)</span><br><span class="line"></span><br><span class="line">res4 = g.send(<span class="string">'骨头2'</span>)</span><br><span class="line">print(res4)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">来福 准备开吃</span><br><span class="line">[]</span><br><span class="line">来福 吃了 骨头</span><br><span class="line">[<span class="string">'骨头'</span>]</span><br><span class="line">来福 吃了 骨头<span class="number">1</span></span><br><span class="line">[<span class="string">'骨头'</span>, <span class="string">'骨头1'</span>]</span><br><span class="line">来福 吃了 骨头<span class="number">2</span></span><br><span class="line">[<span class="string">'骨头'</span>, <span class="string">'骨头1'</span>, <span class="string">'骨头2'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">dog</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开吃'</span> % name)</span><br><span class="line">    food_list = []</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span> food_list</span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % name)</span><br><span class="line">        food_list.append(food)</span><br><span class="line"></span><br><span class="line">g = dog(<span class="string">'来福'</span>)</span><br><span class="line">g.send(<span class="string">'abc'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">    g.send(<span class="string">'abc'</span>)</span><br><span class="line">TypeError: can<span class="string">'t send non-None value to a just-started generator</span></span><br></pre></td></tr></table></figure><h2 id="案例"><a href="#案例" class="headerlink" title="案例"></a>案例</h2><blockquote><p>编写装饰器，实现初始化协程函数的功能<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args, **kwargs)</span>:</span></span><br><span class="line">        g = func(*args, **kwargs)</span><br><span class="line">        next(g)</span><br><span class="line">        <span class="keyword">return</span> g</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@init</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">eater</span><span class="params">(name)</span>:</span></span><br><span class="line">    print(<span class="string">'%s 准备开始吃饭啦'</span> % name)</span><br><span class="line">    food_list = []</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        food = <span class="keyword">yield</span> food_list</span><br><span class="line">        print(<span class="string">'%s 吃了 %s'</span> % (name, food))</span><br><span class="line">        food_list.append(food)</span><br><span class="line"></span><br><span class="line">g = eater(<span class="string">'张三'</span>)</span><br><span class="line">g.send(<span class="string">'蒸羊羔'</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">张三 准备开始吃饭啦</span><br><span class="line">张三 吃了 蒸羊羔</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>实现功能：<code>grep  -rl  &#39;python&#39;  /etc</code><br>注意：<code>target.send(...)</code> 在拿到 target 的返回值后才算执行结束</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">init</span><span class="params">(func)</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">wrapper</span><span class="params">(*args,**kwargs)</span>:</span></span><br><span class="line">        g=func(*args,**kwargs)</span><br><span class="line">        next(g)</span><br><span class="line">        <span class="keyword">return</span> g</span><br><span class="line">    <span class="keyword">return</span> wrapper</span><br><span class="line"></span><br><span class="line"><span class="meta">@init</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">search</span><span class="params">(target)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        filepath=<span class="keyword">yield</span></span><br><span class="line">        g=os.walk(filepath)</span><br><span class="line">        <span class="keyword">for</span> dirname,_,files <span class="keyword">in</span> g:</span><br><span class="line">            <span class="keyword">for</span> file <span class="keyword">in</span> files:</span><br><span class="line">                abs_path=<span class="string">r'%s\%s'</span> %(dirname,file)</span><br><span class="line">                target.send(abs_path)</span><br><span class="line"><span class="meta">@init</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">opener</span><span class="params">(target)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        abs_path=<span class="keyword">yield</span></span><br><span class="line">        <span class="keyword">with</span> open(abs_path,<span class="string">'rb'</span>) <span class="keyword">as</span> f:</span><br><span class="line">            target.send((f,abs_path))</span><br><span class="line"><span class="meta">@init</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">cat</span><span class="params">(target)</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        f,abs_path=<span class="keyword">yield</span></span><br><span class="line">        <span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">            res=target.send((line,abs_path))</span><br><span class="line">            <span class="keyword">if</span> res:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"><span class="meta">@init</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">grep</span><span class="params">(pattern,target)</span>:</span></span><br><span class="line">    tag=<span class="keyword">False</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        line,abs_path=<span class="keyword">yield</span> tag</span><br><span class="line">        tag=<span class="keyword">False</span></span><br><span class="line">        <span class="keyword">if</span> pattern.encode(<span class="string">'utf-8'</span>) <span class="keyword">in</span> line:</span><br><span class="line">            target.send(abs_path)</span><br><span class="line">            tag=<span class="keyword">True</span></span><br><span class="line"><span class="meta">@init</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">printer</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">        abs_path=<span class="keyword">yield</span></span><br><span class="line">        print(abs_path)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">g=search(opener(cat(grep(<span class="string">'你好'</span>,printer()))))</span><br><span class="line"><span class="comment"># g.send(r'E:\CMS\aaa\db')</span></span><br><span class="line">g=search(opener(cat(grep(<span class="string">'python'</span>,printer()))))</span><br><span class="line">g.send(<span class="string">r'E:\CMS\aaa\db'</span>)</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-生成器&quot;&gt;&lt;a href=&quot;#Python-生成器&quot; class=&quot;headerlink&quot; title=&quot;Python 生成器&quot;&gt;&lt;/a&gt;Python 生成器&lt;/h1&gt;
    
    </summary>
    
      <category term="Python笔记" scheme="http://www.gmlyo.com/categories/Python%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python 生成器" scheme="http://www.gmlyo.com/tags/Python-%E7%94%9F%E6%88%90%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Prometheus Operator</title>
    <link href="http://www.gmlyo.com/2018/09/10/Prometheus-Operator/"/>
    <id>http://www.gmlyo.com/2018/09/10/Prometheus-Operator/</id>
    <published>2018-09-10T09:55:41.000Z</published>
    <updated>2018-09-10T10:21:08.122Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Prometheus-Operator"><a href="#Prometheus-Operator" class="headerlink" title="Prometheus Operator"></a>Prometheus Operator</h1><a id="more"></a><h2 id="Prometheus介绍"><a href="#Prometheus介绍" class="headerlink" title="Prometheus介绍"></a>Prometheus介绍</h2><p>Prometheus是继Kubernetes之后CNCF基金会的第二个项目，最早也是孵化于Google内部的Brogmon监控系统，后来由前Google工程师在SoundCloud开源，现在已经成为云原生生态的标准监控系统。</p><p>Prometheus是一个开源的完整监控解决方案，涵盖数据采集、查询、告警、展示整个监控流程，下图是Prometheus的架构图：<br><a href="http://pacnmwckn.bkt.clouddn.com/prometheus1.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/prometheus1.png" alt="prometheus"></a></p><p><strong>Prometheus Server</strong><br>Prometheus server是整个方案的核心组件，负责监控数据的获取、存储和查询，它本身就是一个时序数据库，将采集到的监控数据按照时间序列的方式存储在本地，Prometheus Server对外提供了自定义的PromQL语言，实现对数据的查询以及分析。</p><p>Prometheus server可以通过静态配置监控目标，也可以通过服务发现的方式动态监控目标，Prometheus server采用pull的方式到target暴露出的对应http接口获取监控数据。</p><p><strong>Exporters</strong><br>Exporters将数据采集的target通过http的形式暴露给Prometheus server，Prometheus server通过访问该exporter提供的endpoints端点，获取到需要采集的监控数据。</p><p>Exporters分为两类：</p><ol><li>直接采集：这类的exporters内置在了相应的应用中，能够直接提供target端点，比如etcd、kubernetes组件，都直接内置了用于向Prometheus暴露监控数据的端点。</li><li>间接采集：原有的监控目标不支持prometheus，需要通过prometheus提供的Client Library编写该监控目标的监控采集程序，比如redis、tomcat、mysql等应用，需要有外置的exporters先采集应用的监控项，再通过exporters的http接口把metrics暴露给prometheus server</li></ol><p><strong>PushGateway</strong><br>因为prometheus数据采集采用pull模式，需要prometheus server能直接访问到exporters，当网络环境无法满足时，需要通过PushGateway中转，内部网络的监控数据主动pushl到Gateway当中，而Prometheus Server则可以采用同样Pull的方式从PushGateway中获取到监控数据。</p><p><strong>AlertManager</strong><br>在prometheus server的配置文件中可以配置相应的告警规则，一旦达到告警规则，就会触发AlertManager，至于之后的操作由AlertManager自定义，可以是邮箱、微信、钉钉或webhook等。</p><p>promethus的告警被分成两个部分：</p><ol><li>通过在Prometheus中定义告警触发条件规则，并向Alertmanager发送告警信息</li><li>Alertmanager作为一个独立的组件，负责接收并处理来自Prometheus Server(也可以是其它的客户端程序)的告警信息</li></ol><p>在Prometheus全局配置文件中<code>prometheus.yml</code>通过<code>rule_files</code>指定一组告警规则文件的访问路径。Prometheus启动后会自动扫描这些路径下规则文件中定义的内容，并且根据这些规则计算是否向外部发送通知</p><p>在<code>prometheus.yml</code>中添加监控告警文件</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">rule_files:</span></span><br><span class="line">  - <span class="meta-keyword">/etc/</span>prometheus<span class="meta-keyword">/rules/</span>*.rules</span><br></pre></td></tr></table></figure><p>在目录<code>/etc/prometheus/rules/</code>下创建告警文件<code>hoststats-alert.rules</code>，重启promethus后这个告警文件就能被promethus读取。</p><p>在<code>promethus.yml</code>中添加关联alertmanager配置：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">alerting</span>:</span><br><span class="line">  <span class="attribute">alertmanagers</span>:</span><br><span class="line">    - <span class="attribute">static_configs</span>:</span><br><span class="line">        <span class="attribute">targets</span>: [<span class="string">'localhost:9093'</span>]</span><br></pre></td></tr></table></figure><p>成功后就可以在alertmanager中查看promethus中触发的告警，之后的操作可以由alertmanager自定义</p><p>alertmanager是独立的服务，配置文件默认在<code>/etc/prometheus/alertmanager.yml</code>，配置文件中目前只写入基础配置：</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">route:</span></span><br><span class="line"><span class="symbol">  receiver:</span> <span class="string">'default-receiver'</span></span><br><span class="line"><span class="string">receivers:</span></span><br><span class="line">  - <span class="string">name:</span> <span class="keyword">default</span>-receiver</span><br></pre></td></tr></table></figure><ol><li>route：所有的告警信息都会从配置中的顶级路由(route)进入路由树，根据路由规则将告警信息发送给相应的接收器</li><li>receivers：告警信息会根据路由发送给对应receivers，接收器可以关联邮件，Slack以及其它方式接收告警信息</li></ol><hr><h2 id="Prometheus-Operator-1"><a href="#Prometheus-Operator-1" class="headerlink" title="Prometheus Operator"></a>Prometheus Operator</h2><p>对于云原生基础的Kubernetes，Prometheus对其有着代码级别的支持，Kubernetes中的组件原生支持Prometheus的metrics路径，而且能够通过服务发现的形式自动监控集群。在Kubernetes中部署Prometheus可以通过operator的框架，下图是prometheus-operator的架构：<br><a href="http://pacnmwckn.bkt.clouddn.com/prometheus-operator1.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/prometheus-operator1.png" alt="prometheus-operator"></a></p><p>其中operator是其核心，作为一个控制器，operator首先会创建Prometheus、ServiceMonitor、AlertManager三个CRD资源对象，并且监控并维持这三种资源对象的状态。</p><p>创建的Prometheus资源对象就是作为Prometheus server，ServiceMonitor就是exporters的抽象，通过ServiceMonitor，Prometheus server能够pull到对应target的监控metrics。</p><p>在prometheus的yaml文件中会指定需要采集的ServiceMonitor：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">serviceMonitorSelector</span>:</span><br><span class="line">  <span class="selector-tag">matchExpressions</span>:</span><br><span class="line">  <span class="selector-tag">-</span> &#123;<span class="attribute">key</span>: k8s-app, operator: Exists&#125;</span><br></pre></td></tr></table></figure><p>只有在ServiceMonitor的yaml文件中匹配上了<code>k8s-app</code>的ServiceMonitor才能被Prometheus server采集：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">monitoring.coreos.com/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceMonitor</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-controller-manager</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kube-controller-manager</span>    <span class="comment">##Prometheus中的ServiceMonitor选择器</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  jobLabel:</span> <span class="string">k8s-app</span></span><br><span class="line"><span class="attr">  endpoints:</span></span><br><span class="line"><span class="attr">  - port:</span> <span class="string">http-metrics</span>    <span class="comment">##对应service的端口名</span></span><br><span class="line"><span class="attr">    interval:</span> <span class="number">30</span><span class="string">s</span></span><br><span class="line"><span class="attr">  selector:</span></span><br><span class="line"><span class="attr">    matchLabels:</span></span><br><span class="line"><span class="attr">      k8s-app:</span> <span class="string">kube-controller-manager</span>    <span class="comment">##选择对应label的service</span></span><br><span class="line"><span class="attr">  namespaceSelector:</span></span><br><span class="line"><span class="attr">    matchNames:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">kube-system</span>     <span class="comment">##选择对应namespace</span></span><br></pre></td></tr></table></figure><p>也就是Prometheus server选取对应的ServiceMonitor进行监控，而ServiceMonitor会对应到相应的service，service会对应到endpoints，Prometheus server通过选择ServiceMonitor就能访问到最终的监控目标。</p><hr><h2 id="在Kubernetes中部署Prometheus-Operator"><a href="#在Kubernetes中部署Prometheus-Operator" class="headerlink" title="在Kubernetes中部署Prometheus Operator"></a>在Kubernetes中部署Prometheus Operator</h2><p>因为这是部署在非原生的k8s集群，所以需要做一些额外操作才能监控整个集群</p><h3 id="下载源码"><a href="#下载源码" class="headerlink" title="下载源码"></a>下载源码</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget https://codeload.github.com/coreos/prometheus-operator/tar.gz/v0.16.0 -O prometheus-operator-0.16.0.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> tar -zxvf prometheus-operator-0.16.0.tar.gz</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> <span class="built_in">cd</span> prometheus-operator-0.16.0/contrib/kube-prometheus</span></span><br></pre></td></tr></table></figure><p>创建单独的namespace：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl create ns monitoring</span></span><br></pre></td></tr></table></figure><h3 id="安装-Prometheus-Operator"><a href="#安装-Prometheus-Operator" class="headerlink" title="安装 Prometheus Operator"></a>安装 Prometheus Operator</h3><p>删除RBAC相关配置：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ tree manifests/prometheus-<span class="keyword">operator</span></span><br><span class="line">manifests/prometheus-<span class="keyword">operator</span></span><br><span class="line">├── prometheus-<span class="keyword">operator</span>-cluster-role-binding.yaml</span><br><span class="line">├── prometheus-<span class="keyword">operator</span>-cluster-role.yaml</span><br><span class="line">├── prometheus-<span class="keyword">operator</span>-service-account.yaml</span><br><span class="line">├── prometheus-<span class="keyword">operator</span>-service.yaml</span><br><span class="line">└── prometheus-<span class="keyword">operator</span>.yaml</span><br><span class="line"><span class="number">0</span> directories, <span class="number">5</span> files</span><br><span class="line">$ rm -rf manifests/prometheus-<span class="keyword">operator</span>/prometheus-<span class="keyword">operator</span>-cluster-role*</span><br><span class="line">$ rm -rf manifests/prometheus-<span class="keyword">operator</span>/prometheus-<span class="keyword">operator</span>-service-account.yaml</span><br></pre></td></tr></table></figure><p>删除 prometheus-operator.yaml 中的 serviceAccountName: prometheus-operator：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> extensions/v1beta1</span><br><span class="line"><span class="symbol">kind:</span> Deployment</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line">...</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  replicas:</span> <span class="number">1</span></span><br><span class="line"><span class="symbol">  template:</span></span><br><span class="line"><span class="symbol">    metadata:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="symbol">    spec:</span></span><br><span class="line"><span class="symbol">      containers:</span></span><br><span class="line">      ...</span><br><span class="line">    <span class="meta"># serviceAccountName: prometheus-operator # 将这一行删除</span></span><br></pre></td></tr></table></figure><p>部署Prometheus Operator</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">$ tree manifests/prometheus-operator/</span><br><span class="line">manifests/prometheus-operator</span><br><span class="line">├── prometheus-operator-service.yaml</span><br><span class="line">└── prometheus-operator.yaml</span><br><span class="line"><span class="number">0</span> directories, <span class="number">2</span> files</span><br><span class="line">$ kubectl apply -f manifests/prometheus-operator/ -n monitoring</span><br><span class="line">prometheus-operator<span class="number">-599487016</span><span class="number">-39</span>w9m   <span class="number">1</span>/<span class="number">1</span>       Running   <span class="number">0</span>          <span class="number">1</span>d</span><br></pre></td></tr></table></figure><p>部署完成后，operator会自动创建三个CRD：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl get crd</span><br><span class="line">NAME                                    KIND</span><br><span class="line">alertmanagers<span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span>     CustomResourceDefinition<span class="selector-class">.v1beta1</span><span class="selector-class">.apiextensions</span><span class="selector-class">.k8s</span><span class="selector-class">.io</span></span><br><span class="line">prometheuses<span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span>      CustomResourceDefinition<span class="selector-class">.v1beta1</span><span class="selector-class">.apiextensions</span><span class="selector-class">.k8s</span><span class="selector-class">.io</span></span><br><span class="line">servicemonitors<span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span>   CustomResourceDefinition<span class="selector-class">.v1beta1</span><span class="selector-class">.apiextensions</span><span class="selector-class">.k8s</span><span class="selector-class">.io</span></span><br></pre></td></tr></table></figure><h3 id="安装Node-Exporter"><a href="#安装Node-Exporter" class="headerlink" title="安装Node Exporter"></a>安装Node Exporter</h3><p>Prometheus监控主机需要Node Exporter提供相应的target<br>删除与 RBAC 相关的 yaml 文件：</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ tree manifests/<span class="keyword">node</span><span class="title">-exporter</span></span><br><span class="line">manifests/<span class="keyword">node</span><span class="title">-exporter</span></span><br><span class="line">├── <span class="keyword">node</span><span class="title">-exporter-cluster-role-binding</span>.yaml</span><br><span class="line">├── <span class="keyword">node</span><span class="title">-exporter-cluster-role</span>.yaml</span><br><span class="line">├── <span class="keyword">node</span><span class="title">-exporter-daemonset</span>.yaml</span><br><span class="line">├── <span class="keyword">node</span><span class="title">-exporter-service-account</span>.yaml</span><br><span class="line">└── <span class="keyword">node</span><span class="title">-exporter-service</span>.yaml</span><br><span class="line"><span class="number">0</span> directories, <span class="number">5</span> files</span><br><span class="line">$ rm -rf manifests/<span class="keyword">node</span><span class="title">-exporter</span>/<span class="keyword">node</span><span class="title">-exporter-cluster-role</span>*</span><br><span class="line">$ rm -rf manifests/<span class="keyword">node</span><span class="title">-exporter</span>/<span class="keyword">node</span><span class="title">-exporter-service-account</span>.yaml</span><br></pre></td></tr></table></figure><p>删除<code>node-exporter-daemonset.yaml</code>中的<code>serviceAccountName: node-exporter</code></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> extensions/v1beta1</span><br><span class="line"><span class="symbol">kind:</span> DaemonSet</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line">...</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line">  ...</span><br><span class="line"><span class="symbol">  template:</span></span><br><span class="line"><span class="symbol">    metadata:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="symbol">    spec:</span></span><br><span class="line">  <span class="meta"># serviceAccountName: node-exporter # 将这一行删除</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>部署 node-exporter</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">$ tree manifests/<span class="keyword">node</span><span class="title">-exporter</span></span><br><span class="line">manifests/<span class="keyword">node</span><span class="title">-exporter</span></span><br><span class="line">├── <span class="keyword">node</span><span class="title">-exporter-daemonset</span>.yaml</span><br><span class="line">└── <span class="keyword">node</span><span class="title">-exporter-service</span>.yaml</span><br><span class="line"><span class="number">0</span> directories, <span class="number">2</span> files</span><br><span class="line">$ kubectl apply -f manifests/<span class="keyword">node</span><span class="title">-exporter</span> -n monitoring</span><br><span class="line">$ kubectl -n monitoring get pods -l <span class="attr">app=</span><span class="keyword">node</span><span class="title">-exporter</span></span><br><span class="line">NAME                  READY     STATUS    RESTARTS   AGE</span><br><span class="line"><span class="keyword">node</span><span class="title">-exporter-3mnvn</span>   <span class="number">2</span>/<span class="number">2</span>       Running   <span class="number">0</span>          <span class="number">1</span>d</span><br><span class="line"><span class="keyword">node</span><span class="title">-exporter-lwbjm</span>   <span class="number">2</span>/<span class="number">2</span>       Running   <span class="number">0</span>          <span class="number">1</span>d</span><br><span class="line"><span class="keyword">node</span><span class="title">-exporter-p2bw5</span>   <span class="number">2</span>/<span class="number">2</span>       Running   <span class="number">0</span>          <span class="number">1</span>d</span><br></pre></td></tr></table></figure><h3 id="安装-Kube-state-metrics"><a href="#安装-Kube-state-metrics" class="headerlink" title="安装 Kube-state-metrics"></a>安装 Kube-state-metrics</h3><p>删除与 RBAC 相关的 yaml 文件：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">$ tree manifests/kube-state-metrics</span><br><span class="line">manifests/kube-state-metrics</span><br><span class="line">├── kube-state-metrics-cluster-role-binding.yaml</span><br><span class="line">├── kube-state-metrics-cluster-role.yaml</span><br><span class="line">├── kube-state-metrics-deployment.yaml</span><br><span class="line">├── kube-state-metrics-role-binding.yaml</span><br><span class="line">├── kube-state-metrics-role.yaml</span><br><span class="line">├── kube-state-metrics-service-account.yaml</span><br><span class="line">└── kube-state-metrics-service.yaml</span><br><span class="line"><span class="number">0</span> directories, <span class="number">7</span> files</span><br><span class="line">$ rm -rf manifests/kube-state-metrics<span class="comment">/*role*</span></span><br><span class="line"><span class="comment">$ rm -rf manifests/kube-state-metrics/kube-state-metrics-service-account.yaml</span></span><br></pre></td></tr></table></figure><p>删除<code>kube-state-metrics-deployment.yaml</code>中的<code>serviceAccountName: kube-state-metrics</code>。</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> extensions/v1beta1</span><br><span class="line"><span class="symbol">kind:</span> Deployment</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line">...</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line">  ...</span><br><span class="line"><span class="symbol">  template:</span></span><br><span class="line"><span class="symbol">    metadata:</span></span><br><span class="line">    ...</span><br><span class="line"><span class="symbol">    spec:</span></span><br><span class="line">  <span class="meta"># serviceAccountName: kube-state-metrics # 将这一行删除</span></span><br><span class="line">    ...</span><br></pre></td></tr></table></figure><p>部署 kube-state-metrics：</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">$ tree manifests/kube-<span class="section">state</span>-metrics</span><br><span class="line">manifests/kube-<span class="section">state</span>-metrics</span><br><span class="line">├── kube-<span class="section">state</span>-metrics-deployment.yaml</span><br><span class="line">└── kube-<span class="section">state</span>-metrics-service.yaml</span><br><span class="line"><span class="number">0</span> directories, <span class="number">2</span> files</span><br><span class="line">$ kubectl apply -f manifests/kube-<span class="section">state</span>-metrics -n monitoring</span><br><span class="line">$ kubectl -n monitoring get pods -l app=kube-<span class="section">state</span>-metrics</span><br><span class="line">NAME                                  READY     STATUS    RESTARTS   AGE</span><br><span class="line">kube-<span class="section">state</span>-metrics<span class="number">-3424261376</span>-hcvd5   <span class="number">4</span>/<span class="number">4</span>       Running   <span class="number">0</span>          <span class="number">1</span>d</span><br></pre></td></tr></table></figure><h3 id="安装-Prometheus-和-ServiceMonitor"><a href="#安装-Prometheus-和-ServiceMonitor" class="headerlink" title="安装 Prometheus 和 ServiceMonitor"></a>安装 Prometheus 和 ServiceMonitor</h3><p>删除与 RBAC 相关的 yaml 文件：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">$ tree manifests/prometheus</span><br><span class="line">manifests/prometheus</span><br><span class="line">├── prometheus-k8s-role-bindings.yaml</span><br><span class="line">├── prometheus-k8s-roles.yaml</span><br><span class="line">├── prometheus-k8s-rules.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-alertmanager.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-apiserver.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-kube-controller-manager.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-kubelet.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-kube-scheduler.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-kube-state-metrics.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-node-exporter.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-prometheus-operator.yaml</span><br><span class="line">├── prometheus-k8s-service-monitor-prometheus.yaml</span><br><span class="line">├── prometheus-k8s-service.yaml</span><br><span class="line">└── prometheus-k8s.yaml</span><br><span class="line"><span class="number">0</span> directories, <span class="number">14</span> files</span><br><span class="line">$ rm -rf manifests/prometheus<span class="comment">/*role*</span></span><br></pre></td></tr></table></figure><p>删除 prometheus-k8s.yaml 中的 serviceAccountName: prometheus-k8s：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> monitoring.coreos.com/v1</span><br><span class="line"><span class="symbol">kind:</span> Prometheus</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> k8s</span><br><span class="line"><span class="symbol">  labels:</span></span><br><span class="line"><span class="symbol">    prometheus:</span> k8s</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">  version:</span> v2<span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="meta"># serviceAccountName: prometheus-k8s # 将这一行删除</span></span><br></pre></td></tr></table></figure><p>部署 Prometheus 和 ServiceMonitor：</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">$ kubectl -n monitoring apply -f manifests/prometheus/</span><br><span class="line"></span><br><span class="line">$ kubectl -n monitoring get prometheuses</span><br><span class="line">NAME      KIND</span><br><span class="line">k8s       Prometheus<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">$ kubectl -n monitoring get servicemonitor</span><br><span class="line">NAME                      KIND</span><br><span class="line">alertmanager              ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">etcd-k8s                  ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">kube-apiserver            ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">kube-controller-manager   ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">kube-scheduler            ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">kube-state-metrics        ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">kubelet                   ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">node-exporter             ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">prometheus                ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br><span class="line">prometheus-operator       ServiceMonitor<span class="selector-class">.v1</span><span class="selector-class">.monitoring</span><span class="selector-class">.coreos</span><span class="selector-class">.com</span></span><br></pre></td></tr></table></figure><h3 id="监控kube-controller-manager-kube-scheduler"><a href="#监控kube-controller-manager-kube-scheduler" class="headerlink" title="监控kube-controller-manager kube-scheduler"></a>监控kube-controller-manager kube-scheduler</h3><p>查看的kube-controller-manager的ServiceMonitor的yaml文件：</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">apiVersion</span>: monitoring.coreos.com/v1</span><br><span class="line"><span class="attribute">kind</span>: ServiceMonitor</span><br><span class="line"><span class="attribute">metadata</span>:</span><br><span class="line">  <span class="attribute">name</span>: kube-controller-manager</span><br><span class="line">  <span class="attribute">labels</span>:</span><br><span class="line">    <span class="attribute">k8s-app</span>: kube-controller-manager</span><br><span class="line"><span class="attribute">spec</span>:</span><br><span class="line">  <span class="attribute">jobLabel</span>: k8s-app</span><br><span class="line">  <span class="attribute">endpoints</span>:</span><br><span class="line">  - <span class="attribute">port</span>: http-metrics</span><br><span class="line">    <span class="attribute">interval</span>: <span class="number">30s</span></span><br><span class="line">  <span class="attribute">selector</span>:</span><br><span class="line">    <span class="attribute">matchLabels</span>:</span><br><span class="line">      <span class="attribute">k8s-app</span>: kube-controller-manager</span><br><span class="line">  <span class="attribute">namespaceSelector</span>:</span><br><span class="line">    <span class="attribute">matchNames</span>:</span><br><span class="line">    - kube-system</span><br></pre></td></tr></table></figure><p>这个ServiceMonitor对应指定的是kube-system命名空间的打了<code>k8s-app: kube-controller-manager</code>标签的service，不是对应的endpoint的标签，对应endpoint端口名是<code>http-metrics</code></p><p>因为kube-controller-manager和kube-scheduler在kube-system的命名空间中没有相应的service和endpoints，所以需要手动创建：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># kube-controller-manager</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-controller-manager-prometheus-discovery</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kube-controller-manager</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="attr">  clusterIP:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">http-metrics</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">10252</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">10252</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-controller-manager-prometheus-discovery</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kube-controller-manager</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line"><span class="attr">- addresses:</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.191</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.194</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.183</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">http-metrics</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">10252</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#kube-scheduler</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-scheduler-prometheus-discovery</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kube-scheduler</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="attr">  clusterIP:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">http-metrics</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">10251</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">10251</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">kube-system</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kube-scheduler-prometheus-discovery</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">kube-scheduler</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line"><span class="attr">- addresses:</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.191</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.194</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.183</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">http-metrics</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">10251</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><h3 id="监控api-server"><a href="#监控api-server" class="headerlink" title="监控api-server"></a>监控api-server</h3><p>在原生的k8s集群中，是可以直接监控api-server的，但是在dce集群中，部署多个控制节点后kubernetes的endpoint对应的ip会一直在各个主机ip中变化，所以新建api-server的service和endpoints。<br>在prometheus的配置文件中，通过label来过滤api-server的target：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">relabel_configs:</span></span><br><span class="line"><span class="attr">- source_labels:</span> <span class="string">[__meta_kubernetes_service_label_component]</span></span><br><span class="line"><span class="attr">  separator:</span> <span class="string">;</span></span><br><span class="line"><span class="attr">  regex:</span> <span class="string">apiserver</span></span><br><span class="line"><span class="attr">  replacement:</span> <span class="string">$1</span></span><br><span class="line"><span class="attr">  action:</span> <span class="string">keep</span></span><br><span class="line"><span class="attr">- source_labels:</span> <span class="string">[__meta_kubernetes_service_label_provider]</span></span><br><span class="line"><span class="attr">  separator:</span> <span class="string">;</span></span><br><span class="line"><span class="attr">  regex:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">  replacement:</span> <span class="string">$1</span></span><br><span class="line"><span class="attr">  action:</span> <span class="string">keep</span></span><br></pre></td></tr></table></figure><p>能看到service的label的值只能是apiserver和kubernetes，所以新建api-server的service和endpoint如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    component:</span> <span class="string">apiserver</span></span><br><span class="line"><span class="attr">    provider:</span> <span class="string">kubernetes</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dce</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  clusterIP:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">443</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="attr">    targetPort:</span> <span class="number">16443</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">kubernetes-dce</span></span><br><span class="line"><span class="attr">  namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line"><span class="attr">- addresses:</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.191</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.194</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.183</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">https</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">16443</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><h3 id="监控ETCD"><a href="#监控ETCD" class="headerlink" title="监控ETCD"></a>监控ETCD</h3><p>ETCD作为kubernetes集群的数据持久化的后端，是集群所有数据的存储点，也需要对其有相应监控。CoreOS给出了监控ETCD的方法<a href="https://github.com/coreos/prometheus-operator/blob/master/contrib/kube-prometheus/docs/monitoring-external-etcd.md" target="_blank" rel="noopener">监控ETCD</a></p><p><strong>创建ETCD对应访问证书</strong><br>因为监控ETCD不像监控kubernetes组件是通过api-server或直接使用http访问组件的target，需要使用https双向证书验证，所以要先创建可访问ETCD的secret，供prometheus server使用：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl -n monitoring create<span class="built_in"> secret </span>generic etcd-certs <span class="attribute">--from-file</span>=/etc/cni/net.d/calico-tls/etcd-cert <span class="attribute">--from-file</span>=/etc/cni/net.d/calico-tls/etcd-key <span class="attribute">--from-file</span>=/etc/cni/net.d/calico-tls/etcd-ca</span><br></pre></td></tr></table></figure><p>证书、私钥及ca证书是可访问ETCD的，路径是主机本地存储证书的目录。<br>在prometheus的yaml文件中挂载证书：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> monitoring.coreos.com/v1</span><br><span class="line"><span class="symbol">kind:</span> Prometheus</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> k8s</span><br><span class="line"><span class="symbol">  labels:</span></span><br><span class="line"><span class="symbol">    prometheus:</span> k8s</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  replicas:</span> <span class="number">2</span></span><br><span class="line"><span class="symbol">  secrets:</span> </span><br><span class="line">  - etcd-certs</span><br><span class="line"><span class="symbol">  version:</span> v1<span class="number">.7</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p>如果已创建，可以直接edit该对象.</p><p><strong>创建ETCD的ServiceMonitor</strong></p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">apiVersion:</span> monitoring.coreos.com/v1</span><br><span class="line"><span class="symbol">kind:</span> ServiceMonitor</span><br><span class="line"><span class="symbol">metadata:</span></span><br><span class="line"><span class="symbol">  name:</span> etcd-k8s</span><br><span class="line"><span class="symbol">  labels:</span></span><br><span class="line">    k8s-app: etcd-k8s</span><br><span class="line"><span class="symbol">spec:</span></span><br><span class="line"><span class="symbol">  jobLabel:</span> k8s-app</span><br><span class="line"><span class="symbol">  endpoints:</span></span><br><span class="line">  - port: api</span><br><span class="line"><span class="symbol">    interval:</span> <span class="number">30</span>s</span><br><span class="line"><span class="symbol">    scheme:</span> https</span><br><span class="line"><span class="symbol">    tlsConfig:</span></span><br><span class="line"><span class="symbol">      caFile:</span> <span class="meta-keyword">/etc/</span>prometheus<span class="meta-keyword">/secrets/</span>etcd-certs/etcd-ca</span><br><span class="line"><span class="symbol">      certFile:</span> <span class="meta-keyword">/etc/</span>prometheus<span class="meta-keyword">/secrets/</span>etcd-certs/etcd-cert</span><br><span class="line"><span class="symbol">      keyFile:</span> <span class="meta-keyword">/etc/</span>prometheus<span class="meta-keyword">/secrets/</span>etcd-certs/etcd-key</span><br><span class="line">      <span class="meta">#use insecureSkipVerify only <span class="meta-keyword">if</span> you cannot use a Subject Alternative Name</span></span><br><span class="line"><span class="symbol">      insecureSkipVerify:</span> true</span><br><span class="line">      <span class="meta">#serverName: ETCD_DNS_OR_ALTERNAME_</span></span><br><span class="line"><span class="symbol">  selector:</span></span><br><span class="line"><span class="symbol">    matchLabels:</span></span><br><span class="line">      k8s-app: etcd</span><br><span class="line"><span class="symbol">  namespaceSelector:</span></span><br><span class="line"><span class="symbol">    matchNames:</span></span><br><span class="line">    - monitoring</span><br></pre></td></tr></table></figure><p>其中<code>tlsConfig</code>的文件位置是prometheus容器里面挂载证书的位置，不确定的话可以进入容器内部验证一下<br>当证书<code>serverName</code>和etcd中签发的不匹配可以使用<code>insecureSkipVerify: true</code></p><p><strong>创建ETCD对应的service和endpoints</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">etcd-k8s</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">etcd</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line"><span class="attr">  type:</span> <span class="string">ClusterIP</span></span><br><span class="line"><span class="attr">  clusterIP:</span> <span class="string">None</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">api</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">12379</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Endpoints</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line"><span class="attr">  name:</span> <span class="string">etcd-k8s</span></span><br><span class="line"><span class="attr">  labels:</span></span><br><span class="line"><span class="attr">    k8s-app:</span> <span class="string">etcd</span></span><br><span class="line"><span class="attr">subsets:</span></span><br><span class="line"><span class="attr">- addresses:</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.191</span></span><br><span class="line"><span class="attr">    nodeName:</span> <span class="string">dcemaster1</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.194</span></span><br><span class="line"><span class="attr">    nodeName:</span> <span class="string">dcemaster2</span></span><br><span class="line"><span class="attr">  - ip:</span> <span class="number">192.168</span><span class="number">.2</span><span class="number">.183</span></span><br><span class="line"><span class="attr">    nodeName:</span> <span class="string">dcemaster3</span></span><br><span class="line"><span class="attr">  ports:</span></span><br><span class="line"><span class="attr">  - name:</span> <span class="string">api</span></span><br><span class="line"><span class="attr">    port:</span> <span class="number">12379</span></span><br><span class="line"><span class="attr">    protocol:</span> <span class="string">TCP</span></span><br></pre></td></tr></table></figure><p>登录prometheus的UI查看对应target是不是都是up状态，up状态说明数据pull正常<br><a href="http://pacnmwckn.bkt.clouddn.com/target1.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/target1.png" alt="target1"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/target2.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/target2.png" alt="target2"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/target3.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/target3.png" alt="target3"></a></p><h3 id="安装Grafana"><a href="#安装Grafana" class="headerlink" title="安装Grafana"></a>安装Grafana</h3><p>作为prometheus前端展示页面，Grafana提供了强大的数据聚合和展示的功能，可以通过自定义前端配置修改dashboard，官方社区有很多<a href="https://grafana.com/dashboards?search=kubernetes" target="_blank" rel="noopener">kubernetes的前端json文件</a>供使用</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ls manifests/grafana/</span><br><span class="line">grafana-credentials<span class="selector-class">.yaml</span>  grafana-dashboards<span class="selector-class">.yaml</span>  grafana-deployment<span class="selector-class">.yaml</span>  grafana-service.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl -n monitoring apply -f manifests/grafana/</span><br></pre></td></tr></table></figure><p>部署后就能通过Grafana监控整个kubernetes集群<br><a href="http://pacnmwckn.bkt.clouddn.com/grafana1.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/grafana1.png" alt="grafana1"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/grafana2.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/grafana2.png" alt="grafana2"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/grafana3.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/grafana3.png" alt="grafana3"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/grafana4.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/grafana4.png" alt="grafana4"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/grafana5.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/grafana5.png" alt="grafana5"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/grafana6.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/grafana6.png" alt="grafana6"></a><br><a href="http://pacnmwckn.bkt.clouddn.com/grafana7.png" target="_blank" rel="noopener"><img src="http://pacnmwckn.bkt.clouddn.com/grafana7.png" alt="grafana7"></a></p><h3 id="配置AlertManager"><a href="#配置AlertManager" class="headerlink" title="配置AlertManager"></a>配置AlertManager</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">$ ls manifests/alertmanager/</span><br><span class="line">alertmanager-config<span class="selector-class">.yaml</span>  alertmanager-service<span class="selector-class">.yaml</span>  alertmanager.yaml</span><br><span class="line"></span><br><span class="line">$ kubectl -n monitoring apply -f manifests/alertmanager/</span><br></pre></td></tr></table></figure><p>告警接收器可以通过以下形式进行配置：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">receivers:</span></span><br><span class="line">  - <span class="params">&lt;receiver&gt;</span> ...</span><br></pre></td></tr></table></figure><p>每一个receiver具有一个全局唯一的名称，并且对应一个或者多个通知方式：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">name:</span> <span class="params">&lt;string&gt;</span></span><br><span class="line"><span class="symbol">email_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;email_config&gt;</span>, ... ]</span><br><span class="line"><span class="symbol">hipchat_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;hipchat_config&gt;</span>, ... ]</span><br><span class="line"><span class="symbol">pagerduty_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;pagerduty_config&gt;</span>, ... ]</span><br><span class="line"><span class="symbol">pushover_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;pushover_config&gt;</span>, ... ]</span><br><span class="line"><span class="symbol">slack_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;slack_config&gt;</span>, ... ]</span><br><span class="line"><span class="symbol">opsgenie_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;opsgenie_config&gt;</span>, ... ]</span><br><span class="line"><span class="symbol">webhook_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;webhook_config&gt;</span>, ... ]</span><br><span class="line"><span class="symbol">victorops_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;victorops_config&gt;</span>, ... ]</span><br></pre></td></tr></table></figure><p>目前官方内置的第三方通知集成包括：邮件、 即时通讯软件（如Slack、Hipchat）、移动应用消息推送(如Pushover)和自动化运维工具（例如：Pagerduty、Opsgenie、Victorops）。Alertmanager的通知方式中还可以支持Webhook，通过这种方式开发者可以实现更多个性化的扩展支持。</p><p><strong>以下是集成SMTP邮件的示例</strong><br>每一个receiver可以对应一组邮件通知配置email_configs，如下所示：</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">name:</span> <span class="params">&lt;string&gt;</span></span><br><span class="line"><span class="symbol">email_configs:</span></span><br><span class="line">  [ - <span class="params">&lt;email_config&gt;</span>, ... ]</span><br></pre></td></tr></table></figure><p>email_config配置：</p><figure class="highlight pf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Whether or not to notify about resolved alerts.</span></span><br><span class="line">[ send_resolved: <span class="variable">&lt;boolean&gt;</span> | <span class="keyword">default</span> = false ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># The email address to send notifications to.</span></span><br><span class="line"><span class="keyword">to</span>: <span class="variable">&lt;tmpl_string&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># The sender address.</span></span><br><span class="line">[ <span class="keyword">from</span>: <span class="variable">&lt;tmpl_string&gt;</span> | <span class="keyword">default</span> = <span class="keyword">global</span>.smtp_from ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># The SMTP host through which emails are sent.</span></span><br><span class="line">[ smarthost: <span class="variable">&lt;string&gt;</span> | <span class="keyword">default</span> = <span class="keyword">global</span>.smtp_smarthost ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># SMTP authentication information.</span></span><br><span class="line">[ auth_username: <span class="variable">&lt;string&gt;</span> | <span class="keyword">default</span> = <span class="keyword">global</span>.smtp_auth_username ]</span><br><span class="line">[ auth_password: <span class="variable">&lt;secret&gt;</span> | <span class="keyword">default</span> = <span class="keyword">global</span>.smtp_auth_password ]</span><br><span class="line">[ auth_secret: <span class="variable">&lt;secret&gt;</span> | <span class="keyword">default</span> = <span class="keyword">global</span>.smtp_auth_secret ]</span><br><span class="line">[ auth_identity: <span class="variable">&lt;string&gt;</span> | <span class="keyword">default</span> = <span class="keyword">global</span>.smtp_auth_identity ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># The SMTP TLS requirement.</span></span><br><span class="line">[ require_tls: <span class="variable">&lt;bool&gt;</span> | <span class="keyword">default</span> = <span class="keyword">global</span>.smtp_require_tls ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># The HTML body of the email notification.</span></span><br><span class="line">[ html: <span class="variable">&lt;tmpl_string&gt;</span> | <span class="keyword">default</span> = '&#123;&#123; template <span class="string">"email.default.html"</span> . &#125;&#125;' ]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Further headers email header key/value pairs. Overrides any headers</span></span><br><span class="line"><span class="comment"># previously set by the notification implementation.</span></span><br><span class="line">[ headers: &#123; <span class="variable">&lt;string&gt;</span>: <span class="variable">&lt;tmpl_string&gt;</span>, ... &#125; ]</span><br></pre></td></tr></table></figure><p>如果所有的邮件配置使用了相同的SMTP配置，则可以直接定义全局的SMTP配置：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">global:</span><br><span class="line">  [ smtp_from: &lt;tmpl_string&gt; ]</span><br><span class="line">  [ smtp_smarthost: &lt;string&gt; ]</span><br><span class="line">  [ smtp_auth_username: &lt;string&gt; ]</span><br><span class="line">  [ smtp_auth_password: &lt;secret&gt; ]</span><br><span class="line">  [ smtp_auth_secret: &lt;secret&gt; ]</span><br><span class="line">  [ smtp_auth_identity: &lt;string&gt; ]</span><br><span class="line">  [ smtp_require_tls: &lt;bool&gt; |<span class="built_in"> default </span>= <span class="literal">true</span> ]</span><br></pre></td></tr></table></figure><p>以Gmail邮箱为例:</p><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">global:</span></span><br><span class="line"><span class="symbol">  smtp_smarthost:</span> smtp.gmail.com:<span class="number">587</span></span><br><span class="line"><span class="symbol">  smtp_from:</span> <span class="params">&lt;smtp mail from&gt;</span></span><br><span class="line"><span class="symbol">  smtp_auth_username:</span> <span class="params">&lt;usernae&gt;</span></span><br><span class="line"><span class="symbol">  smtp_auth_identity:</span> <span class="params">&lt;username&gt;</span></span><br><span class="line"><span class="symbol">  smtp_auth_password:</span> <span class="params">&lt;password&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="symbol">receivers:</span></span><br><span class="line">  - name: default-receiver</span><br><span class="line"><span class="symbol">    email_configs:</span></span><br><span class="line">      - to: <span class="params">&lt;mail to address&gt;</span></span><br></pre></td></tr></table></figure><p>手动拉高CPU使用量后会触发告警并发送告警邮件：</p><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="regexp">/dev/</span>zero&gt;<span class="regexp">/dev/</span><span class="keyword">null</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.troyying.xyz/index.php/operate/15.html" target="_blank" rel="noopener">https://www.troyying.xyz/index.php/operate/15.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Prometheus-Operator&quot;&gt;&lt;a href=&quot;#Prometheus-Operator&quot; class=&quot;headerlink&quot; title=&quot;Prometheus Operator&quot;&gt;&lt;/a&gt;Prometheus Operator&lt;/h1&gt;
    
    </summary>
    
      <category term="Kubernetes笔记" scheme="http://www.gmlyo.com/categories/Kubernetes%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Prometheus Operator" scheme="http://www.gmlyo.com/tags/Prometheus-Operator/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack 帮助查看</title>
    <link href="http://www.gmlyo.com/2018/09/10/SaltStack-%E6%9F%A5%E7%9C%8B%E5%B8%AE%E5%8A%A9/"/>
    <id>http://www.gmlyo.com/2018/09/10/SaltStack-查看帮助/</id>
    <published>2018-09-10T07:51:15.000Z</published>
    <updated>2018-09-10T12:47:07.667Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-查看帮助"><a href="#SaltStack-查看帮助" class="headerlink" title="SaltStack 查看帮助"></a>SaltStack 查看帮助</h1><a id="more"></a><h2 id="查看所有-module-列表"><a href="#查看所有-module-列表" class="headerlink" title="查看所有 module 列表"></a>查看所有 module 列表</h2><h3 id="查看-Minion端-支持的所有-module-列表"><a href="#查看-Minion端-支持的所有-module-列表" class="headerlink" title="查看 Minion端 支持的所有 module 列表"></a>查看 Minion端 支持的所有 module 列表</h3><figure class="highlight plain"><figcaption><span>&#39;*&#39; sys.list.module</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt &apos;*&apos; sys.list.module</span><br></pre></td></tr></table></figure><h2 id="查看指定-module-的所有-function"><a href="#查看指定-module-的所有-function" class="headerlink" title="查看指定 module 的所有 function"></a>查看指定 module 的所有 function</h2><h3 id="查看-cmd-module-的所有-function-的命令"><a href="#查看-cmd-module-的所有-function-的命令" class="headerlink" title="查看 cmd module 的所有 function 的命令"></a>查看 cmd module 的所有 function 的命令</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt <span class="string">'*'</span> sys.list_functions <span class="keyword">cmd</span><span class="bash"></span></span><br></pre></td></tr></table></figure><h2 id="查看-所有-模块函数帮助信息"><a href="#查看-所有-模块函数帮助信息" class="headerlink" title="查看 所有 模块函数帮助信息"></a>查看 所有 模块函数帮助信息</h2><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt '*' sys.doc <span class="string">| less</span></span><br></pre></td></tr></table></figure><h2 id="查看指定-module-用法"><a href="#查看指定-module-用法" class="headerlink" title="查看指定 module 用法"></a>查看指定 module 用法</h2><h3 id="查看-cmd-module-的详细用法与示例"><a href="#查看-cmd-module-的详细用法与示例" class="headerlink" title="查看 cmd module 的详细用法与示例"></a>查看 cmd module 的详细用法与示例</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt <span class="string">'*'</span> sys.doc <span class="keyword">cmd</span><span class="bash"></span></span><br></pre></td></tr></table></figure><h2 id="查看所有-states-列表"><a href="#查看所有-states-列表" class="headerlink" title="查看所有 states 列表"></a>查看所有 states 列表</h2><h3 id="查看-Minion端-支持的所有-states-列表"><a href="#查看-Minion端-支持的所有-states-列表" class="headerlink" title="查看 Minion端 支持的所有 states 列表"></a>查看 Minion端 支持的所有 states 列表</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">salt</span> <span class="string">'*'</span> sys.list_state_modules</span><br></pre></td></tr></table></figure><h2 id="查看指定-states-的所有-function"><a href="#查看指定-states-的所有-function" class="headerlink" title="查看指定 states 的所有 function"></a>查看指定 states 的所有 function</h2><h3 id="查看-file-states-的所有-function"><a href="#查看-file-states-的所有-function" class="headerlink" title="查看 file.states 的所有 function"></a>查看 file.states 的所有 function</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt <span class="string">'*'</span> sys<span class="selector-class">.list_state_functions</span> file</span><br></pre></td></tr></table></figure><h2 id="查看指定-states-用法"><a href="#查看指定-states-用法" class="headerlink" title="查看指定 states 用法"></a>查看指定 states 用法</h2><h3 id="查看-file-states-的详细用法与示例"><a href="#查看-file-states-的详细用法与示例" class="headerlink" title="查看 file.states 的详细用法与示例"></a>查看 file.states 的详细用法与示例</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt <span class="string">'*'</span> sys<span class="selector-class">.state_doc</span> file</span><br></pre></td></tr></table></figure><h2 id="查看指定-states-指定-function-用法"><a href="#查看指定-states-指定-function-用法" class="headerlink" title="查看指定 states 指定 function 用法"></a>查看指定 states 指定 function 用法</h2><h3 id="查看-file-managed-states-的详细用法与示例"><a href="#查看-file-managed-states-的详细用法与示例" class="headerlink" title="查看 file.managed states 的详细用法与示例"></a>查看 file.managed states 的详细用法与示例</h3><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt <span class="string">'*'</span> sys<span class="selector-class">.state_doc</span> file.managed</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-查看帮助&quot;&gt;&lt;a href=&quot;#SaltStack-查看帮助&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 查看帮助&quot;&gt;&lt;/a&gt;SaltStack 查看帮助&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 帮助查看" scheme="http://www.gmlyo.com/tags/SaltStack-%E5%B8%AE%E5%8A%A9%E6%9F%A5%E7%9C%8B/"/>
    
  </entry>
  
  <entry>
    <title>GitLab持续集成-(.gitlab-ci.yml)</title>
    <link href="http://www.gmlyo.com/2018/09/08/GitLab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90-(.gitlab-ci.yml)/"/>
    <id>http://www.gmlyo.com/2018/09/08/GitLab持续集成-(.gitlab-ci.yml)/</id>
    <published>2018-09-08T03:31:06.000Z</published>
    <updated>2018-09-08T03:31:32.424Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitLab持续集成-gitlab-ci-yml"><a href="#GitLab持续集成-gitlab-ci-yml" class="headerlink" title="GitLab持续集成-(.gitlab-ci.yml)"></a>GitLab持续集成-(.gitlab-ci.yml)</h1><a id="more"></a><blockquote><p>从7.12版本开始，GitLab CI使用YAML文件(.gitlab-ci.yml)来管理项目配置。该文件存放于项目仓库的根目录，它定义该项目如何构建。</p></blockquote><h2 id="stages"><a href="#stages" class="headerlink" title="stages"></a>stages</h2><blockquote><p><code>stages</code>用来定义可以被job调用的stages。stages的规范允许有灵活的多级pipelines。stages中元素的顺序决定了对应job的执行顺序：</p></blockquote><ul><li>相同stage的job是并行执行的；</li><li>下一个stage的job在前一个stage的job成功完成后才开始执行；</li><li>如果.gitlab-ci.yml中没有定义stages，那么stages默认定义为build、test和deploy；</li><li>如果一个job没有指定stage，那么这个任务会分配到test stage。</li></ul><h2 id="variables"><a href="#variables" class="headerlink" title="variables"></a>variables</h2><blockquote><p><code>variables</code>用来定义变量，全局变量作用于所有job，也可以在指定的job中定义变量（优先级高于全局变量）<br>如果在job中想禁用全局定义的变量，可通过<code>variables: {}</code>定义一个空的哈希值。</p></blockquote><h3 id="GitLab-CI-CD内置变量"><a href="#GitLab-CI-CD内置变量" class="headerlink" title="GitLab CI/CD内置变量"></a><a href="https://docs.gitlab.com/ce/ci/variables/README.html" target="_blank" rel="noopener">GitLab CI/CD内置变量</a></h3><table><thead><tr><th>variables</th><th>变量值</th></tr></thead><tbody><tr><td>CI_JOB_NAME</td><td>对应的job_name</td></tr><tr><td>GIT_STRATEGY</td><td>指定git获取代码的方式（clone,fetch,none）</td></tr></tbody></table><h2 id="jobs"><a href="#jobs" class="headerlink" title="jobs"></a>jobs</h2><blockquote><p><code>jobs</code>用来定义了一组作业，其中必须包含<code>script</code>语句。</p></blockquote><h3 id="job-stage（默认：test）"><a href="#job-stage（默认：test）" class="headerlink" title="job.stage（默认：test）"></a>job.stage（默认：<code>test</code>）</h3><blockquote><p>job中指定的stage必须是stages中存在的元素</p></blockquote><h3 id="job-tags"><a href="#job-tags" class="headerlink" title="job.tags"></a>job.tags</h3><blockquote><p>指定该job所允许运行的Runner，必须在注册Runner时设置Runner的tag</p></blockquote><h3 id="job-allow-failure"><a href="#job-allow-failure" class="headerlink" title="job.allow_failure"></a>job.allow_failure</h3><blockquote><p>用于指定该job允许执行失败，则如果执行失败也不会影响下一个stage的执行。</p></blockquote><h3 id="job-script"><a href="#job-script" class="headerlink" title="job.script"></a>job.script</h3><blockquote><p><code>script</code>是job中必须指定的语句，指定Runner所要执行的命令</p></blockquote><h3 id="job-before-script、job-after-script"><a href="#job-before-script、job-after-script" class="headerlink" title="job.before_script、job.after_script"></a>job.before_script、job.after_script</h3><blockquote><p>指定script执行前/后所执行的命令，也可定义在全局模式，则在所有job中的script执行前/后都会执行。</p></blockquote><h3 id="job-artifacts"><a href="#job-artifacts" class="headerlink" title="job.artifacts"></a>job.artifacts</h3><blockquote><p>用于指定job执行成功后，将会被发送到Gitlab中的文件，且默认情况下job之间会根据stage的优先级自动下载之前所有stage中的artifacts。</p></blockquote><ul><li><code>artifacts.paths</code>：必选</li><li><code>artifacts.name</code>：指定artifact的名称，同时Gitlab上下载的文件名即为artifact_name.zip</li><li><code>artifacts.when</code>：指定artifact上传到Gitlab的条件（on_success[默认],on_failure,always）</li><li><code>artifacts.expire_in</code>：指定artifact的过期时间（默认为30天），使用<code>keep</code>可永久保存</li></ul><h3 id="job-dependencies"><a href="#job-dependencies" class="headerlink" title="job.dependencies"></a>job.dependencies</h3><blockquote><p><code>dependencies</code>用于在不同的job之间指定在不同的job之间传递artifacts，<code>dependencies: []</code>可禁止该job下载artifacts</p></blockquote><h3 id="job-only、job-except"><a href="#job-only、job-except" class="headerlink" title="job.only、job.except"></a>job.only、job.except</h3><blockquote><p><code>only</code>和<code>except</code>是两个参数用分支策略来限制jobs构建</p></blockquote><ul><li><code>only</code>和<code>except</code>可同时使用。如果在一个job配置中同时存在，则同时有效；</li><li><code>only</code>和<code>except</code>可以使用正则表达式；</li><li><code>only</code>和<code>except</code>允许使用特殊的关键字：<code>branches</code>，<code>tags</code>和<code>triggers</code>；</li></ul><h3 id="job-environment"><a href="#job-environment" class="headerlink" title="job.environment"></a>job.environment</h3><blockquote><p><code>environment</code>用于定义job部署到指定的运行环境中。</p></blockquote><ul><li>environment.name：必选，指定environment名称</li><li>environment.url：可选，指定environment对应的URL，将在指定的environment页面中添加一个链接按钮指向该URL</li></ul><hr><h2 id="特殊的YAML特性"><a href="#特殊的YAML特性" class="headerlink" title="特殊的YAML特性"></a>特殊的YAML特性</h2><h3 id="Hidden-keys（jobs）"><a href="#Hidden-keys（jobs）" class="headerlink" title=" Hidden keys（jobs）"></a><span id="jump"> Hidden keys（jobs）</span></h3><blockquote><p>如果想临时disable某个job，不必注释整个job定义的行，只需在job name前加一个<code>.</code>即可</p></blockquote><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">.compile_cento<span class="variable">s:</span></span><br><span class="line">  stage: build_centos</span><br><span class="line">  <span class="keyword">tag</span><span class="variable">s:</span></span><br><span class="line">    - centos</span><br><span class="line">  <span class="keyword">scrip</span><span class="variable">t:</span></span><br><span class="line">    - <span class="keyword">echo</span> <span class="string">"##### build library"</span></span><br></pre></td></tr></table></figure><h3 id="Anchors"><a href="#Anchors" class="headerlink" title="Anchors"></a>Anchors</h3><blockquote><p>锚点可用于在文件中复制或继承配置，一般与<a href="http://blog.51cto.com/vnimos/2122951#jump" target="_blank" rel="noopener">Hidden keys（jobs）</a>提供的job模版搭配使用。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">.job_template:</span> <span class="meta">&amp;job_definition</span>  <span class="comment">#job中定义一个anchor:job_definition</span></span><br><span class="line"><span class="attr">  image:</span> <span class="attr">ruby:2.1</span></span><br><span class="line"><span class="attr">  services:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">postgres</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">redis</span></span><br><span class="line"><span class="attr">test1:</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*job_definition</span>           <span class="comment">#合并anchor:job_definition中的模版内容</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test1</span> <span class="string">project</span></span><br><span class="line"><span class="attr">test2:</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*job_definition</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test2</span> <span class="string">project</span></span><br></pre></td></tr></table></figure><p>最终实现的效果如下：</p><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">.job_template:</span><br><span class="line">  image: ruby:2.1</span><br><span class="line">  services:</span><br><span class="line">    -<span class="ruby"> postgres</span></span><br><span class="line"><span class="ruby">    - redis</span></span><br><span class="line"><span class="ruby"><span class="symbol">test1:</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">image:</span> <span class="symbol">ruby:</span><span class="number">2.1</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">services:</span></span></span><br><span class="line"><span class="ruby">    - postgres</span></span><br><span class="line"><span class="ruby">    - redis</span></span><br><span class="line"><span class="ruby">  <span class="symbol">script:</span></span></span><br><span class="line"><span class="ruby">    - test1 project</span></span><br><span class="line"><span class="ruby"><span class="symbol">test2:</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">image:</span> <span class="symbol">ruby:</span><span class="number">2.1</span></span></span><br><span class="line"><span class="ruby">  <span class="symbol">services:</span></span></span><br><span class="line"><span class="ruby">    - postgres</span></span><br><span class="line"><span class="ruby">    - redis</span></span><br><span class="line"><span class="ruby">  <span class="symbol">script:</span></span></span><br><span class="line"><span class="ruby">    - test2 project</span></span><br></pre></td></tr></table></figure><h2 id="Skipping-jobs"><a href="#Skipping-jobs" class="headerlink" title="Skipping jobs"></a>Skipping jobs</h2><blockquote><p>如果你的commit信息中包含<code>[ci skip]</code>或者<code>[skip ci]</code>，不论大小写，那么这个commit将会创建但是jobs也会跳过。</p></blockquote><hr><h3 id="example"><a href="#example" class="headerlink" title="example:"></a>example:</h3><blockquote><p>以下示例为编译nginx的上传模块nginx-upload并测试验证上传功能，验证成功后将自动将编译好的文件打包通过curl上传到指定的文件服务器。其中只有在非master的branches中提交代码才会执行build和test的stage，只有在打tag后才会执行deploy，且需要手动在gitlab上执行。</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">variables:</span></span><br><span class="line"><span class="attr">  DIR:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">  TOPNODE:</span> <span class="string">package</span></span><br><span class="line"></span><br><span class="line"><span class="string">.function:</span> <span class="meta">&amp;function</span> <span class="string">|</span></span><br><span class="line"><span class="string">  function build() &#123;</span></span><br><span class="line"><span class="string">    echo "execute function:build"</span></span><br><span class="line"><span class="string">    chmod +x auto/configure</span></span><br><span class="line"><span class="string">    sh build.sh</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  function changelog() &#123;</span></span><br><span class="line"><span class="string">    echo "execute function:changelog"</span></span><br><span class="line"><span class="string">    git log --graph -n 3  --name-status --pretty="%h -[%cd] - &lt;%an&gt; %s" &gt; CHANGELOG</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  function test() &#123;</span></span><br><span class="line"><span class="string">    echo "execute function:test"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    sudo \cp modules/nginx-upload-module-master/nginx.conf /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="string">    sudo sed -i '/error_log/,/working_directory/d' /etc/nginx/nginx.conf</span></span><br><span class="line"><span class="string">    if [ -f /run/nginx.pid ];then sudo nginx -s reload;else sudo nginx;fi</span></span><br><span class="line"><span class="string">    sudo rm -rf /tmp/&#123;0,1,2,3,4,5,6,7,8,9&#125; &amp;&amp; sudo mkdir /tmp/&#123;0,1,2,3,4,5,6,7,8,9&#125; &amp;&amp; sudo chown -R nginx. /tmp/&#123;0,1,2,3,4,5,6,7,8,9&#125;</span></span><br><span class="line"><span class="string">    sudo echo nginx_upload &gt; test &amp;&amp; curl -F "filename=@test" http://localhost/upload</span></span><br><span class="line"><span class="string">    sudo find /tmp/&#123;0,1,2,3,4,5,6,7,8,9&#125; -type f -exec grep nginx_upload &#123;&#125; \; </span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  function artifacts() &#123;</span></span><br><span class="line"><span class="string">    echo "execute function:artifacts"</span></span><br><span class="line"><span class="string">    URL="https://xxx.com/upload?dir=$&#123;DIR&#125;/$&#123;VERSION&#125;&amp;override=1&amp;topNode=$&#123;TOPNODE&#125;"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    echo "push the artifacts:nginx_$&#123;VERSION&#125;.tar.gz to $URL"</span></span><br><span class="line"><span class="string">    tar zcf /tmp/nginx_$&#123;VERSION&#125;.tar.gz --exclude=".git*" --exclude=build .</span></span><br><span class="line"><span class="string">    curl -F "filename=@/tmp/$&#123;DIR&#125;_$&#123;VERSION&#125;.tar.gz" "$URL"</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    echo "push the CHANGELOG to $URL"</span></span><br><span class="line"><span class="string">    curl -F "filename=@CHANGELOG" "$URL"</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  function deploy() &#123;</span></span><br><span class="line"><span class="string">    echo "execute function:deploy"</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">  function clean() &#123;</span></span><br><span class="line"><span class="string">    echo "execute function:clean"</span></span><br><span class="line"><span class="string">    if [ -f /run/nginx.pid ];then sudo kill `cat /run/nginx.pid`;fi</span></span><br><span class="line"><span class="string">    sudo rm -rf /tmp/&#123;0,1,2,3,4,5,6,7,8,9&#125; /tmp/nginx_$&#123;version&#125;.tar.gz</span></span><br><span class="line"><span class="string">  &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">#########only the section above need to be modify #################</span></span><br><span class="line"><span class="string"></span><span class="attr">before_script:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">VERSION=`head</span> <span class="bullet">-n1</span> <span class="string">version`</span></span><br><span class="line"><span class="bullet">  -</span> <span class="meta">*function</span></span><br><span class="line"></span><br><span class="line"><span class="attr">stages:</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">test</span></span><br><span class="line"><span class="bullet">  -</span> <span class="string">deploy</span></span><br><span class="line"></span><br><span class="line"><span class="attr">build:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">build</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">branches</span></span><br><span class="line"><span class="attr">  except:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">build</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">changelog</span></span><br><span class="line"></span><br><span class="line"><span class="attr">test:</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">test</span></span><br><span class="line"><span class="attr">  variables:</span></span><br><span class="line"><span class="attr">    GIT_STRATEGY:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">branches</span></span><br><span class="line"><span class="attr">  except:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">master</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">test</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">artifacts</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">clean</span></span><br><span class="line"></span><br><span class="line"><span class="string">.job_template:</span> <span class="meta">&amp;deploy_template</span></span><br><span class="line"><span class="attr">  stage:</span> <span class="string">deploy</span></span><br><span class="line"><span class="attr">  variables:</span></span><br><span class="line"><span class="attr">    GIT_STRATEGY:</span> <span class="string">none</span></span><br><span class="line"><span class="attr">  only:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">tags</span></span><br><span class="line"><span class="attr">  script:</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">deploy</span></span><br><span class="line"><span class="bullet">    -</span> <span class="string">delete</span></span><br><span class="line"><span class="attr">  when:</span> <span class="string">manual</span></span><br><span class="line"></span><br><span class="line"><span class="attr">staging:</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*deploy_template</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">staging</span></span><br><span class="line"></span><br><span class="line"><span class="attr">production:</span></span><br><span class="line">  <span class="string">&lt;&lt;:</span> <span class="meta">*deploy_template</span></span><br><span class="line"><span class="attr">  environment:</span></span><br><span class="line"><span class="attr">    name:</span> <span class="string">production</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://blog.51cto.com/vnimos/2122951" target="_blank" rel="noopener">http://blog.51cto.com/vnimos/2122951</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;GitLab持续集成-gitlab-ci-yml&quot;&gt;&lt;a href=&quot;#GitLab持续集成-gitlab-ci-yml&quot; class=&quot;headerlink&quot; title=&quot;GitLab持续集成-(.gitlab-ci.yml)&quot;&gt;&lt;/a&gt;GitLab持续集成-(.gitlab-ci.yml)&lt;/h1&gt;
    
    </summary>
    
      <category term="Git笔记" scheme="http://www.gmlyo.com/categories/Git%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="GitLab持续集成-(.gitlab-ci.yml)" scheme="http://www.gmlyo.com/tags/GitLab%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90-gitlab-ci-yml/"/>
    
  </entry>
  
  <entry>
    <title>GitLab-CI 与 GitLab-Runner</title>
    <link href="http://www.gmlyo.com/2018/09/08/GitLab-CI-%E4%B8%8E-GitLab-Runner/"/>
    <id>http://www.gmlyo.com/2018/09/08/GitLab-CI-与-GitLab-Runner/</id>
    <published>2018-09-08T03:30:05.000Z</published>
    <updated>2018-09-08T03:31:43.406Z</updated>
    
    <content type="html"><![CDATA[<h1 id="GitLab-CI-与-GitLab-Runner"><a href="#GitLab-CI-与-GitLab-Runner" class="headerlink" title="GitLab-CI 与 GitLab-Runner"></a>GitLab-CI 与 GitLab-Runner</h1><a id="more"></a><h2 id="持续集成（Continuous-Integration）"><a href="#持续集成（Continuous-Integration）" class="headerlink" title="持续集成（Continuous Integration）"></a>持续集成（Continuous Integration）</h2><p>要了解 GitLab-CI 与 GitLab Runner，我们得先了解持续集成是什么。</p><blockquote><p>持续集成是一种<strong>软件开发实践</strong>，即团队开发成员经常集成他们的工作，通常每个成员每天至少集成一次，也就意味着每天可能会发生多次集成。每次集成都通过自动化的构建（包括编译，发布，自动化测试)来验证，从而尽快地发现集成错误。许多团队发现这个过程可以大大减少集成的问题，让团队能够更快的开发内聚的软件。</p></blockquote><p>看完这段话，估计还是有点懵。怎么理解呢？我是这样理解的：</p><p><strong>软件集成</strong> 是软件开发过程中的一个环节，这个环节的工作一般会包括以下流程：<em>合并代码 —-&gt; 安装依赖 —-&gt; 编译 —-&gt; 测试 —-&gt; 发布</em>。软件集成的工作一般会比较细碎繁琐，为了不影响开发效率，以前软件集成这个环节一般不会经常进行或者只会等到项目后期再进行。但是有些问题，如果等到后期才发现，解决问题的代价很大，有可能导致项目延期或者失败。因此，为了尽早发现软件集成错误，鼓励团队成员应该经常集成他们的工作，通常每个成员每天应该至少集成一次。这就是所说的 <strong>持续集成</strong>。所以说，持续集成是一种软件开发实践。</p><p>软件集成的工作细碎繁琐，以前是由人工完成的。但是现在鼓励持续集成，那岂不是要累死人，还影响开发效率。所以，应该考虑将软件集成这个工作自动化，这就出现了所谓的 <strong>持续集成系统</strong>。</p><p>持续集成详情见<a href="https://baike.baidu.com/item/%E6%8C%81%E7%BB%AD%E9%9B%86%E6%88%90" target="_blank" rel="noopener">百度百科-持续集成</a></p><h2 id="GitLab-CI"><a href="#GitLab-CI" class="headerlink" title="GitLab-CI"></a>GitLab-CI</h2><p>GitLab-CI 就是一套配合 GitLab 使用的持续集成系统（当然，还有其它的持续集成系统，同样可以配合 GitLab 使用，比如 Jenkins）。而且 GitLab8.0 以后的版本是默认集成了 GitLab-CI 并且默认启用的。</p><h2 id="GitLab-Runner"><a href="#GitLab-Runner" class="headerlink" title="GitLab-Runner"></a>GitLab-Runner</h2><p>那 GitLab-Runner 又是什么？和 GitLab-CI 有什么关系？</p><p>GitLab-Runner 是配合 GitLab-CI 进行使用的。一般地，GitLab 里面的每一个工程都会定义一个属于这个工程的软件集成脚本，用来自动化地完成一些软件集成工作。当这个工程的仓库代码发生变动时，比如有人 push 了代码，GitLab 就会将这个变动通知 GitLab-CI。这时 GitLab-CI 会找出与这个工程相关联的 Runner，并通知这些 Runner 把代码更新到本地并执行预定义好的执行脚本。</p><p>所以，GitLab-Runner 就是一个用来执行软件集成脚本的东西。可以想象一下：Runner 就像一个个的工人，而 GitLab-CI就是这些工人的一个管理中心，所有工人都要在 GitLab-CI 里面登记注册，并且表明自己是为哪个工程服务的。当相应的工程发生变化时，GitLab-CI 就会通知相应的工人执行软件集成脚本。如下图所示：</p><p><img src="https:////upload-images.jianshu.io/upload_images/525728-4339103186d2b1c9.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/550/format/webp" alt="img"></p><center><u>GitLab-CI 与 GitLab-Runner 关系示意图</u></center><p>Runner 可以分布在不同的主机上，同一个主机上也可以有多个Runner。</p><h3 id="Runner类型"><a href="#Runner类型" class="headerlink" title="Runner类型"></a>Runner类型</h3><p>GitLab-Runner 可以分类两种类型：<strong>Shared Runner（共享型）</strong> 和 <strong>Specific Runner（指定型）</strong>。<br><strong>Shared Runner：</strong> 这种 Runner（工人）是所有工程都能够用的。只有系统管理员能够创建Shared Runner。<br><strong>Specific Runner：</strong> 这种 Runner（工人）只能为指定的工程服务。拥有该工程访问权限的人都能够为该工程创建 Shared Runner。</p><h2 id="GitLab-Runner-的安装与使用"><a href="#GitLab-Runner-的安装与使用" class="headerlink" title="GitLab-Runner 的安装与使用"></a>GitLab-Runner 的安装与使用</h2><p>操作系统：Centos 7.0 64位</p><h3 id="安装-gitlab-ci-multi-runner"><a href="#安装-gitlab-ci-multi-runner" class="headerlink" title="安装 gitlab-ci-multi-runner"></a>安装 gitlab-ci-multi-runner</h3><ul><li><p>添加 yum 源</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -L https:<span class="regexp">//</span>packages.gitlab.com<span class="regexp">/install/</span>repositories<span class="regexp">/runner/gi</span>tlab-ci-multi-runner<span class="regexp">/script.rpm.sh | sudo bash</span></span><br></pre></td></tr></table></figure></li><li><p>安装</p><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> gitlab-ci-multi-runner</span><br></pre></td></tr></table></figure></li></ul><p>这里是官网的安装教程，其它操作系统的请参考<br> <a href="https://link.jianshu.com?t=https://gitlab.com/gitlab-org/gitlab-ci-multi-runner" target="_blank" rel="noopener">https://gitlab.com/gitlab-org/gitlab-ci-multi-runner</a></p><h3 id="使用-gitlab-ci-multi-runner-注册-Runner"><a href="#使用-gitlab-ci-multi-runner-注册-Runner" class="headerlink" title="使用 gitlab-ci-multi-runner 注册 Runner"></a>使用 gitlab-ci-multi-runner 注册 Runner</h3><p>安装好 gitlab-ci-multi-runner 这个软件之后，我们就可以用它向 GitLab-CI 注册 Runner 了。</p><p>向 GitLab-CI 注册一个 Runner 需要两样东西：<strong>GitLab-CI的url</strong> 和 <strong>注册token</strong>。<br>其中，token 是为了确定你这个 Runner 是所有工程都能够使用的 Shared Runner 还是具体某一个工程才能使用的Specific Runner。</p><p>如果要注册 Shared Runner，你需要到管理界面的 Runners 页面里面去找注册 token。如下图所示：</p><p><img src="https:////upload-images.jianshu.io/upload_images/525728-e4141cc2a2d4f986.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p><center><u>Shared Runner</u></center><p>如果要注册 Specific Runner，你需要到项目的设置的 Runner 页面里面去找注册 token。如下图所示：</p><p><img src="https:////upload-images.jianshu.io/upload_images/525728-bc5f1e385c2beb45.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p><center><u>Specific Runner</u></center><p>找到 token 之后，运行下面这条命令注册 Runner（当然，除了 url 和 token 之外，还需要其他的信息，比如执行器 <code>executor</code>、构建目录 <code>builds_dir</code> 等）。<br> <code>gitlab-ci-multi-runner register</code><br> 注册完成之后，GitLab-CI 就会多出一条 Runner 记录，如下图所示：</p><p><img src="https:////upload-images.jianshu.io/upload_images/525728-d4b450bb1ea0e31d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1000/format/webp" alt="img"></p><center><u>GitLab-CI Runner</u></center><p>GitLab-CI 会为这个 Runner 生成一个唯一的 token，以后 Runner 就通过这个 token 与 GitLab-CI 进行通信。</p><p>那么，问题来了。注册好了的 Runner 的信息存放在哪儿了呢？<br>原来，Runner 的信息是存放在一个配置文件里面的，配置文件的格式一般是 <code>.toml</code>。这个配置文件的存放位置有以下几种情况：</p><ul><li>在类Unix操作系统下（0.5.0之后版本）</li></ul><ol><li>如果是以 root 用户身份运行 <code>gitlab-ci-multi-runner register</code>，那么配置文件默认是 <code>/etc/gitlab-runner/config.toml</code> </li><li>如果是以非 root 用户身份运行 <code>gitlab-ci-multi-runner register</code>，那么配置文件默认是 <code>~/.gitlab-runner/config.toml</code> </li></ol><ul><li>在其他操作系统下以及 0.5.0 之前版本<br>配置文件默认在当前工作目录下<code>./config.toml</code> </li></ul><p>一般情况下，使用默认的配置文件存放 Runner 的配置信息就可以了。当然，如果你有更细化的分类需求，你也可以在注册的时候通过 <code>-c</code> 或 <code>--config</code> 选项指定配置文件的位置。具体查看register 命令的使用方法：<code>gitlab-ci-multi-runner register --help</code>。</p><p><strong>问题：</strong> 如果不运行 <code>gitlab-ci-multi-runner register</code> 命令，直接在配置文件里面添加 Runner 的配置信息可以吗？<br><strong>回答：</strong> 当然不可以。因为 <code>gitlab-ci-multi-runner register</code> 的作用除了把 Runner 的信息保存到配置文件以外，还有一个很重要的作用，那就是向 GitLab-CI 发出请求，在 GitLab-CI 中登记这个 Runner 的信息并且获取后续通信所需要的 token。</p><h3 id="让注册好的-Runner-运行起来"><a href="#让注册好的-Runner-运行起来" class="headerlink" title="让注册好的 Runner 运行起来"></a>让注册好的 Runner 运行起来</h3><p>Runner 注册完成之后还不行，还必须让它运行起来，否则它无法接收到 GitLab-CI 的通知并且执行软件集成脚本。怎么让 Runner 运行起来呢？<code>gitlab-ci-multi-runner</code> 提供了这样一条命令<code>gitlab-ci-multi-runner run-single</code>，详情如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# gitlab-ci-multi-runner run-single --help</span><br><span class="line">NAME:</span><br><span class="line">   run-single - start single runner</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">   command run-single [command options] [arguments<span class="built_in">..</span>.]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   --name, --description   Runner name [<span class="variable">$RUNNER_NAME</span>]</span><br><span class="line">   --limit     Maximum number of builds processed by this runner [<span class="variable">$RUNNER_LIMIT</span>]</span><br><span class="line">   --ouput-limit    Maximum build trace size [<span class="variable">$RUNNER_OUTPUT_LIMIT</span>]</span><br><span class="line">   -u, --url     Runner URL [<span class="variable">$CI_SERVER_URL</span>]</span><br><span class="line">   -t, --token     Runner token [<span class="variable">$CI_SERVER_TOKEN</span>]</span><br><span class="line">   --tls-ca-file    File containing the certificates <span class="keyword">to</span> verify the<span class="built_in"> peer </span>when using HTTPS [<span class="variable">$CI_SERVER_TLS_CA_FILE</span>]</span><br><span class="line">   --executor     Select executor, eg. shell, docker, etc. [<span class="variable">$RUNNER_EXECUTOR</span>]</span><br><span class="line">   --builds-dir    Directory where builds are stored [<span class="variable">$RUNNER_BUILDS_DIR</span>]</span><br><span class="line">   --cache-dir     Directory where build cache is stored [<span class="variable">$RUNNER_CACHE_DIR</span>]</span><br><span class="line">   --env     Custom environment variables injected <span class="keyword">to</span> build environment [<span class="variable">$RUNNER_ENV</span>]</span><br><span class="line">   --shell     Select bash, cmd <span class="keyword">or</span> powershell [<span class="variable">$RUNNER_SHELL</span>]</span><br><span class="line">   --ssh-user    <span class="built_in"> User </span>name [<span class="variable">$SSH_USER</span>]</span><br><span class="line">   --ssh-password   <span class="built_in"> User </span>password [<span class="variable">$SSH_PASSWORD</span>]</span><br><span class="line">   --ssh-host     Remote host [<span class="variable">$SSH_HOST</span>]</span><br><span class="line">   --ssh-port     Remote host<span class="built_in"> port </span>[<span class="variable">$SSH_PORT</span>]</span><br><span class="line">   --ssh-identity-file   <span class="built_in"> Identity </span>file <span class="keyword">to</span> be used [<span class="variable">$SSH_IDENTITY_FILE</span>]</span><br><span class="line">   --docker-host    Docker daemon<span class="built_in"> address </span>[<span class="variable">$DOCKER_HOST</span>]</span><br><span class="line">   --docker-cert-path    Certificate path [<span class="variable">$DOCKER_CERT_PATH</span>]</span><br><span class="line">   --docker-tlsverify    Use TLS <span class="keyword">and</span> verify the remote [<span class="variable">$DOCKER_TLS_VERIFY</span>]</span><br><span class="line">   --docker-hostname    Custom container hostname [<span class="variable">$DOCKER_HOSTNAME</span>]</span><br><span class="line">   --docker-image    Docker image <span class="keyword">to</span> be used [<span class="variable">$DOCKER_IMAGE</span>]</span><br><span class="line">   --docker-privileged   Give extended privileges <span class="keyword">to</span> container [<span class="variable">$DOCKER_PRIVILEGED</span>]</span><br><span class="line">   --docker-disable-cache   <span class="builtin-name">Disable</span> all container caching [<span class="variable">$DOCKER_DISABLE_CACHE</span>]</span><br><span class="line">   --docker-volumes    Bind mount a volumes [<span class="variable">$DOCKER_VOLUMES</span>]</span><br><span class="line">   --docker-cache-dir    Directory where <span class="keyword">to</span> store caches [<span class="variable">$DOCKER_CACHE_DIR</span>]</span><br><span class="line">   --docker-extra-hosts   <span class="builtin-name">Add</span> a custom host-to-IP mapping [<span class="variable">$DOCKER_EXTRA_HOSTS</span>]</span><br><span class="line">   --docker-links    <span class="builtin-name">Add</span> link <span class="keyword">to</span> another container [<span class="variable">$DOCKER_LINKS</span>]</span><br><span class="line">   --docker-services    <span class="builtin-name">Add</span><span class="built_in"> service </span>that is started with container [<span class="variable">$DOCKER_SERVICES</span>]</span><br><span class="line">   --docker-wait-for-services-timeout  How long <span class="keyword">to</span> wait <span class="keyword">for</span><span class="built_in"> service </span>startup [<span class="variable">$DOCKER_WAIT_FOR_SERVICES_TIMEOUT</span>]</span><br><span class="line">   --docker-allowed-images   Whitelist allowed images [<span class="variable">$DOCKER_ALLOWED_IMAGES</span>]</span><br><span class="line">   --docker-allowed-services   Whitelist allowed services [<span class="variable">$DOCKER_ALLOWED_SERVICES</span>]</span><br><span class="line">   --docker-image-ttl     [<span class="variable">$DOCKER_IMAGE_TTL</span>]</span><br><span class="line">   --parallels-base-name   VM name <span class="keyword">to</span> be used [<span class="variable">$PARALLELS_BASE_NAME</span>]</span><br><span class="line">   --parallels-template-name   VM template <span class="keyword">to</span> be created [<span class="variable">$PARALLELS_TEMPLATE_NAME</span>]</span><br><span class="line">   --parallels-disable-snapshots  <span class="builtin-name">Disable</span> snapshoting <span class="keyword">to</span> speedup VM creation [<span class="variable">$PARALLELS_DISABLE_SNAPSHOTS</span>]</span><br><span class="line">   --virtualbox-base-name   VM name <span class="keyword">to</span> be used [<span class="variable">$VIRTUALBOX_BASE_NAME</span>]</span><br><span class="line">   --virtualbox-disable-snapshots  <span class="builtin-name">Disable</span> snapshoting <span class="keyword">to</span> speedup VM creation [<span class="variable">$VIRTUALBOX_DISABLE_SNAPSHOTS</span>]</span><br></pre></td></tr></table></figure><p>要让一个 Runner 运行起来，<code>--url</code>、<code>--token</code> 和 <code>--executor</code> 选项是必要的。其他选项可根据具体情况和需求进行设置。我们可以看出来，这个命令里面的选项跟配置文件中 Runner 的配置项基本上是一样的。那这个命令的运行和配置文件有没有什么关系呢？从我的试验和思考来看，应该是没有什么关系的。因为：</p><ol><li>这个命令里面并没有指定配置文件位置的选项，如果读取配置文件难道去读取默认位置吗？但是配置文件的位置是可以指定的，不一定在默认位置，这不符合逻辑，所以它应该不会去读配置文件。</li><li>我删掉配置文件，这个命令依然能够运行</li></ol><p>所以，这个命令应该只是一个能让 Runner 运行起来的基础命令。但这个命令运行起来的前提是，GitLab-CI 中必须事先注册有这个 Runner。</p><p>那配置文件有毛用？配置文件的作用在后面，但是从这里我们知道一点：<strong>配置文件里面有 Runner运行时所需要的信息</strong>。</p><p>可能你还有一个问题：我用 root 的用户注册 Runner 时，注册完 Runner 就可以用了，并没有手动地去运行 Runner 啊？这个后面讲。</p><h3 id="批量地运行-Runner"><a href="#批量地运行-Runner" class="headerlink" title="批量地运行 Runner"></a>批量地运行 Runner</h3><p>正常情况下，如果我有多个 Runner，我并不想手动一个个地运行，要是能一次运行多个 Runner 多爽啊！嗯哼，<code>gitlab-ci-multi-runner</code> 就提供了这样一个命令 <code>gitlab-ci-multi-runner run</code>，详情如下：</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost gitlab-runner]# gitlab-ci-multi-runner <span class="builtin-name">run</span> --help</span><br><span class="line">NAME:</span><br><span class="line">   <span class="builtin-name">run</span> - <span class="builtin-name">run</span> multi runner service</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">   command <span class="builtin-name">run</span> [command options] [arguments<span class="built_in">..</span>.]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   -c, --config <span class="string">"/etc/gitlab-runner/config.toml"</span><span class="built_in"> Config </span>file [<span class="variable">$CONFIG_FILE</span>]</span><br><span class="line">   -n, --service <span class="string">"gitlab-runner"</span>   Use different names <span class="keyword">for</span> different services</span><br><span class="line">   -d, --working-directory     Specify custom working directory</span><br><span class="line">   -u, --user       Use specific<span class="built_in"> user </span><span class="keyword">to</span> execute shell scripts</span><br><span class="line">   --syslog      Log <span class="keyword">to</span> syslog</span><br></pre></td></tr></table></figure><p>这个命令总共有 5 个选项，让我们从选项来理解一下这个命令：</p><ul><li><code>-c, --config</code> 选项<br>这个选项是用来指定配置文件路径的。如果你想同时运行多个 Runner，你必须得知道你要运行哪些 Runner 以及这些 Runner 运行时所需要的信息。而前面我们说过，配置文件里面就存放着 Runner 运行时所需要的信息。而且一个配置文件是可以存放多个 Runner 的信息的。如果不指定这个选项，就会使用默认的配置文件。</li><li><code>-n, --service</code> 选项<br>这个选项是用来指定服务的别名的。为什么要有这个选项呢？指定别名有什么意义呢？我们从上一个选项可以看出来，一次只能运行一批 Runner，因为一次只能指定一个配置文件。那如果我有多个配置文件，我要运行多批 Runner，那是不是给每一次批量运行服务取不同的别名来区分更好一点呢。</li><li><code>-d, --working-directory</code> 选项<br>这个选项是用来指定此次批量运行服务的工作目录的。如果自己没有指定 <code>builds_dir</code> 的话，此次运行起来的 Runner 会把 <code>builds_dir</code> 放到这个目录里面。</li><li><code>-u, --user</code> 选项<br>这个选项很重要，它指定了该以什么用户权限来运行 Runner。为了安全，我认为不应该给运行 Runner 的用户过高的权限，更不应该以 root 用户来运行 Runner。</li><li><code>--syslog</code> 选项<br>如果指定了这个选项，则把日志记录到系统日志。</li></ul><h3 id="使用服务"><a href="#使用服务" class="headerlink" title="使用服务"></a>使用服务</h3><p>能够批量地运行 Runner 已经很好了，但是还不够好，为什么呢？</p><p>首先，<code>gitlab-ci-multi-runner run</code> 默认是前台运行的，使用体验不好；<br>其次，当 <code>gitlab-ci-multi-runner run</code> 在后台运行的时候，要查看其运行状态不方便，而且也没有提供停止 <code>gitlab-ci-multi-runner run</code> 的命令。<br> 所以，要是能将批量运行Runner这个功能安装为一项服务，就更爽了！</p><p><code>gitlab-ci-multi-runner</code> 确实就提供了这样的功能。<br><code>install</code>、<code>uninstall</code>、<code>start</code>、<code>stop</code>、<code>restart</code>、<code>status</code> 这 6 个命令就是和服务相关的。<br>我一开始对 <code>gitlab-ci-multi-runner</code> 的服务概念感觉比较懵，让我们来看看安装服务 <code>install</code> 这个命令到底干了一件什么事情。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# gitlab-ci-multi-runner install --help</span><br><span class="line">NAME:</span><br><span class="line">   install - install service</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">   command install [command options] [arguments<span class="built_in">..</span>.]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   --service, -n <span class="string">"gitlab-runner"</span>   Specify<span class="built_in"> service </span>name <span class="keyword">to</span> use</span><br><span class="line">   --working-directory, -d <span class="string">"/root"</span>   Specify custom root directory where all data are stored</span><br><span class="line">   --config, -c <span class="string">"/etc/gitlab-runner/config.toml"</span> Specify custom<span class="built_in"> config </span>file</span><br><span class="line">   --user, -u       Specify user-name <span class="keyword">to</span> secure the runner</span><br></pre></td></tr></table></figure><p>从选项可以看出，一项服务的信息有 4 个：服务名、工作目录、配置文件和用户。这个命令的选项和 <code>gitlab-ci-multi-runner run</code> 的选项基本一样。可见，批量运行 Runner 和服务之间的关系暧昧。至于是什么关系，往下看 <code>gitlab-ci-multi-runner start</code> 这个命令。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~]# gitlab-ci-multi-runner start --help</span><br><span class="line">NAME:</span><br><span class="line">   start - start service</span><br><span class="line"></span><br><span class="line">USAGE:</span><br><span class="line">   command start [command options] [arguments<span class="built_in">..</span>.]</span><br><span class="line"></span><br><span class="line">OPTIONS:</span><br><span class="line">   --service, -n <span class="string">"gitlab-runner"</span> Specify<span class="built_in"> service </span>name <span class="keyword">to</span> use</span><br></pre></td></tr></table></figure><p>启动一项服务，只要指定服务的名称就行了（默认服务名称是 gitlab-runner）。启动服务后，运行命令 <code>ps -aux | grep gitlab-runner</code> 查看后台程序，发现启动服务其实就是在后台执行了一个批量运行Runner的任务，所以服务安装命令的选项才会和批量运行 Runner 命令的选项基本一样。</p><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">root     18219  0.0  0.1 331872  5332 ?        Ssl  00<span class="function">:06</span>   0<span class="function">:00</span> <span class="string">/usr/bin/gitlab-ci-multi-runner</span> run <span class="params">--working-directory</span> <span class="string">/home/gitlab-runner</span> <span class="params">--config</span> <span class="string">/etc/gitlab-runner/config.toml</span> <span class="params">--service</span> gitlab-runner <span class="params">--user</span> gitlab-runner <span class="params">--syslog</span></span><br></pre></td></tr></table></figure><p>还有 <code>stop</code> 命令用于停止服务，<code>restart</code> 命令用于重启服务，<code>status</code> 用于查看服务状态。这三个命令的使用方法和 <code>start</code> 类似，就不一一介绍了。</p><h2 id="其他一些思考"><a href="#其他一些思考" class="headerlink" title="其他一些思考"></a>其他一些思考</h2><ol><li>什么情况下需要注册 Shared Runner？<br>比如，GitLab 上面所有的工程都有可能需要在公司的服务器上进行编译、测试、部署等工作，这个时候注册一个Shared Runner 供所有工程使用就很合适。</li><li>什么情况下需要注册 Specific Runner？<br>比如，我可能需要在我个人的电脑或者服务器上自动构建我参与的某个工程，这个时候注册一个 Specific Runner 就很合适。</li><li>什么情况下需要在同一台机器上注册多个 Runner？<br>比如，我是 GitLab 的普通用户，没有管理员权限，我同时参与多个项目，那我就需要为我的所有项目都注册一个 Specific Runner，这个时候就需要在同一台机器上注册多个 Runner。</li></ol><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="https://www.jianshu.com/p/2b43151fb92e" target="_blank" rel="noopener">https://www.jianshu.com/p/2b43151fb92e</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;GitLab-CI-与-GitLab-Runner&quot;&gt;&lt;a href=&quot;#GitLab-CI-与-GitLab-Runner&quot; class=&quot;headerlink&quot; title=&quot;GitLab-CI 与 GitLab-Runner&quot;&gt;&lt;/a&gt;GitLab-CI 与 GitLab-Runner&lt;/h1&gt;
    
    </summary>
    
      <category term="Git笔记" scheme="http://www.gmlyo.com/categories/Git%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="GitLab-CI 与 GitLab-Runner" scheme="http://www.gmlyo.com/tags/GitLab-CI-%E4%B8%8E-GitLab-Runner/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack 数据系统 Pillar</title>
    <link href="http://www.gmlyo.com/2018/09/06/SaltStack-%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F-Pillar/"/>
    <id>http://www.gmlyo.com/2018/09/06/SaltStack-数据系统-Pillar/</id>
    <published>2018-09-05T17:58:05.000Z</published>
    <updated>2018-09-08T18:24:28.773Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-数据系统-Pillar"><a href="#SaltStack-数据系统-Pillar" class="headerlink" title="SaltStack 数据系统 Pillar"></a>SaltStack 数据系统 Pillar</h1><a id="more"></a><table><thead><tr><th>名称</th><th>存储位置</th><th>数据类型</th><th>数据采集更新方式</th><th>应用</th></tr></thead><tbody><tr><td>Grains</td><td>Minion端</td><td>静态数据</td><td>Minion启动时收集，也可以使用 saltutil.sync_grains 进行刷新</td><td>存储 Minion 基本数据，比如用于匹配 Minion，自身数据可以用来作资产管理等。</td></tr><tr><td>Pillar</td><td>Master端</td><td>动态数据</td><td>在Master端定义，指定给对应的Minion。可以使用 saltutil.refresh_pillar 刷新</td><td>存储 Master 指定的数据，只有指定的 Minion 可以看到。用于敏感数据保存。</td></tr></tbody></table><p>Pillar 是在 Master端 设置的<br>Pillar 给 Minion端 指定它想要的数据<br>安全性比较高</p><blockquote><p>查看 <code>Pillar</code> 信息<br>默认是 <code>False</code> 状态<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]<span class="meta"># salt <span class="string">'*'</span> pillar.items</span></span><br><span class="line"><span class="symbol">dbfw01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">minion01:</span></span><br><span class="line">    ----------</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>开启查看 <code>Pillar</code> 状态，一般不用打开</p></blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# cd /etc/salt/</span><br><span class="line">[root@master01 ~]# vim /etc/salt/master</span><br><span class="line">...省略...</span><br><span class="line">#pillar_opts: <span class="literal">False</span></span><br><span class="line">改成</span><br><span class="line">pillar_opts: <span class="literal">True</span></span><br><span class="line">...省略...</span><br><span class="line">:wq保存退出</span><br><span class="line"></span><br><span class="line"># 重启 salt-master 服务</span><br><span class="line">systemctl restart salt-master</span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@master01</span> <span class="string">salt]#</span> <span class="string">salt</span> <span class="string">'minion01'</span> <span class="string">pillar.items</span></span><br><span class="line"><span class="attr">minion01:</span></span><br><span class="line"><span class="bullet">    -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">    master:</span></span><br><span class="line"><span class="bullet">        -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        __role:</span></span><br><span class="line">            <span class="string">master</span></span><br><span class="line"><span class="attr">        auth_mode:</span></span><br><span class="line">            <span class="number">1</span></span><br><span class="line"><span class="attr">        auto_accept:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        cache_sreqs:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        cachedir:</span></span><br><span class="line">            <span class="string">/var/cache/salt/master</span></span><br><span class="line"><span class="attr">        cli_summary:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        client_acl:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        client_acl_blacklist:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        cluster_masters:</span></span><br><span class="line"><span class="attr">        cluster_mode:</span></span><br><span class="line">            <span class="string">paranoid</span></span><br><span class="line"><span class="attr">        con_cache:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        conf_file:</span></span><br><span class="line">            <span class="string">/etc/salt/master</span></span><br><span class="line"><span class="attr">        config_dir:</span></span><br><span class="line">            <span class="string">/etc/salt</span></span><br><span class="line"><span class="attr">        cython_enable:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        daemon:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        default_include:</span></span><br><span class="line">            <span class="string">master.d/*.conf</span></span><br><span class="line"><span class="attr">        enable_gpu_grains:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        enforce_mine_cache:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        enumerate_proxy_minions:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        environment:</span></span><br><span class="line">            <span class="string">None</span></span><br><span class="line"><span class="attr">        event_return:</span></span><br><span class="line"><span class="attr">        event_return_blacklist:</span></span><br><span class="line"><span class="attr">        event_return_queue:</span></span><br><span class="line">            <span class="number">0</span></span><br><span class="line"><span class="attr">        event_return_whitelist:</span></span><br><span class="line"><span class="attr">        ext_job_cache:</span></span><br><span class="line"><span class="attr">        ext_pillar:</span></span><br><span class="line"><span class="attr">        extension_modules:</span></span><br><span class="line">            <span class="string">/var/cache/salt/extmods</span></span><br><span class="line"><span class="attr">        external_auth:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        failhard:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        file_buffer_size:</span></span><br><span class="line">            <span class="number">1048576</span></span><br><span class="line"><span class="attr">        file_client:</span></span><br><span class="line">            <span class="string">local</span></span><br><span class="line"><span class="attr">        file_ignore_glob:</span></span><br><span class="line">            <span class="string">None</span></span><br><span class="line"><span class="attr">        file_ignore_regex:</span></span><br><span class="line">            <span class="string">None</span></span><br><span class="line"><span class="attr">        file_recv:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        file_recv_max_size:</span></span><br><span class="line">            <span class="number">100</span></span><br><span class="line"><span class="attr">        file_roots:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">            base:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">/srv/salt</span></span><br><span class="line"><span class="attr">        fileserver_backend:</span></span><br><span class="line"><span class="bullet">            -</span> <span class="string">roots</span></span><br><span class="line"><span class="attr">        fileserver_followsymlinks:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        fileserver_ignoresymlinks:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        fileserver_limit_traversal:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        gather_job_timeout:</span></span><br><span class="line">            <span class="number">10</span></span><br><span class="line"><span class="attr">        gitfs_base:</span></span><br><span class="line">            <span class="string">master</span></span><br><span class="line"><span class="attr">        gitfs_env_blacklist:</span></span><br><span class="line"><span class="attr">        gitfs_env_whitelist:</span></span><br><span class="line"><span class="attr">        gitfs_insecure_auth:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        gitfs_mountpoint:</span></span><br><span class="line"><span class="attr">        gitfs_passphrase:</span></span><br><span class="line"><span class="attr">        gitfs_password:</span></span><br><span class="line"><span class="attr">        gitfs_privkey:</span></span><br><span class="line"><span class="attr">        gitfs_pubkey:</span></span><br><span class="line"><span class="attr">        gitfs_remotes:</span></span><br><span class="line"><span class="attr">        gitfs_root:</span></span><br><span class="line"><span class="attr">        gitfs_user:</span></span><br><span class="line"><span class="attr">        hash_type:</span></span><br><span class="line">            <span class="string">md5</span></span><br><span class="line"><span class="attr">        hgfs_base:</span></span><br><span class="line">            <span class="string">default</span></span><br><span class="line"><span class="attr">        hgfs_branch_method:</span></span><br><span class="line">            <span class="string">branches</span></span><br><span class="line"><span class="attr">        hgfs_env_blacklist:</span></span><br><span class="line"><span class="attr">        hgfs_env_whitelist:</span></span><br><span class="line"><span class="attr">        hgfs_mountpoint:</span></span><br><span class="line"><span class="attr">        hgfs_remotes:</span></span><br><span class="line"><span class="attr">        hgfs_root:</span></span><br><span class="line"><span class="attr">        id:</span></span><br><span class="line">            <span class="string">minion01</span></span><br><span class="line"><span class="attr">        interface:</span></span><br><span class="line">            <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line"><span class="attr">        ioflo_console_logdir:</span></span><br><span class="line"><span class="attr">        ioflo_period:</span></span><br><span class="line">            <span class="number">0.01</span></span><br><span class="line"><span class="attr">        ioflo_realtime:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        ioflo_verbose:</span></span><br><span class="line">            <span class="number">0</span></span><br><span class="line"><span class="attr">        ipv6:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        jinja_lstrip_blocks:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        jinja_trim_blocks:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        job_cache:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        keep_jobs:</span></span><br><span class="line">            <span class="number">24</span></span><br><span class="line"><span class="attr">        key_logfile:</span></span><br><span class="line">            <span class="string">/var/log/salt/key</span></span><br><span class="line"><span class="attr">        keysize:</span></span><br><span class="line">            <span class="number">2048</span></span><br><span class="line"><span class="attr">        log_datefmt:</span></span><br><span class="line">            <span class="string">%H:%M:%S</span></span><br><span class="line"><span class="attr">        log_datefmt_logfile:</span></span><br><span class="line">            <span class="string">%Y-%m-%d</span> <span class="string">%H:%M:%S</span></span><br><span class="line"><span class="attr">        log_file:</span></span><br><span class="line">            <span class="string">/var/log/salt/master</span></span><br><span class="line"><span class="attr">        log_fmt_console:</span></span><br><span class="line">            <span class="string">[%(levelname)-8s]</span> <span class="string">%(message)s</span></span><br><span class="line"><span class="attr">        log_fmt_logfile:</span></span><br><span class="line">            <span class="string">%(asctime)s,%(msecs)03.0f</span> <span class="string">[%(name)-17s][%(levelname)-8s][%(process)d]</span> <span class="string">%(message)s</span></span><br><span class="line"><span class="attr">        log_granular_levels:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        log_level:</span></span><br><span class="line">            <span class="string">warning</span></span><br><span class="line"><span class="attr">        loop_interval:</span></span><br><span class="line">            <span class="number">60</span></span><br><span class="line"><span class="attr">        maintenance_floscript:</span></span><br><span class="line">            <span class="string">/usr/lib/python2.7/site-packages/salt/daemons/flo/maint.flo</span></span><br><span class="line"><span class="attr">        master_floscript:</span></span><br><span class="line">            <span class="string">/usr/lib/python2.7/site-packages/salt/daemons/flo/master.flo</span></span><br><span class="line"><span class="attr">        master_job_cache:</span></span><br><span class="line">            <span class="string">local_cache</span></span><br><span class="line"><span class="attr">        master_pubkey_signature:</span></span><br><span class="line">            <span class="string">master_pubkey_signature</span></span><br><span class="line"><span class="attr">        master_roots:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">            base:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">/srv/salt-master</span></span><br><span class="line"><span class="attr">        master_sign_key_name:</span></span><br><span class="line">            <span class="string">master_sign</span></span><br><span class="line"><span class="attr">        master_sign_pubkey:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        master_tops:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        master_use_pubkey_signature:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        max_event_size:</span></span><br><span class="line">            <span class="number">1048576</span></span><br><span class="line"><span class="attr">        max_minions:</span></span><br><span class="line">            <span class="number">0</span></span><br><span class="line"><span class="attr">        max_open_files:</span></span><br><span class="line">            <span class="number">100000</span></span><br><span class="line"><span class="attr">        minion_data_cache:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        minionfs_blacklist:</span></span><br><span class="line"><span class="attr">        minionfs_env:</span></span><br><span class="line">            <span class="string">base</span></span><br><span class="line"><span class="attr">        minionfs_mountpoint:</span></span><br><span class="line"><span class="attr">        minionfs_whitelist:</span></span><br><span class="line"><span class="attr">        nodegroups:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        open_mode:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        order_masters:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        outputter_dirs:</span></span><br><span class="line"><span class="attr">        peer:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">        permissive_pki_access:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        pidfile:</span></span><br><span class="line">            <span class="string">/var/run/salt-master.pid</span></span><br><span class="line"><span class="attr">        pillar_opts:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        pillar_roots:</span></span><br><span class="line"><span class="bullet">            -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">            base:</span></span><br><span class="line"><span class="bullet">                -</span> <span class="string">/srv/pillar</span></span><br><span class="line"><span class="attr">        pillar_safe_render_error:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        pillar_source_merging_strategy:</span></span><br><span class="line">            <span class="string">smart</span></span><br><span class="line"><span class="attr">        pillar_version:</span></span><br><span class="line">            <span class="number">2</span></span><br><span class="line"><span class="attr">        pillarenv:</span></span><br><span class="line">            <span class="string">None</span></span><br><span class="line"><span class="attr">        ping_on_rotate:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        pki_dir:</span></span><br><span class="line">            <span class="string">/etc/salt/pki/master</span></span><br><span class="line"><span class="attr">        preserve_minion_cache:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        pub_hwm:</span></span><br><span class="line">            <span class="number">1000</span></span><br><span class="line"><span class="attr">        publish_port:</span></span><br><span class="line">            <span class="number">4505</span></span><br><span class="line"><span class="attr">        publish_session:</span></span><br><span class="line">            <span class="number">86400</span></span><br><span class="line"><span class="attr">        queue_dirs:</span></span><br><span class="line"><span class="attr">        raet_alt_port:</span></span><br><span class="line">            <span class="number">4511</span></span><br><span class="line"><span class="attr">        raet_clear_remotes:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        raet_main:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        raet_mutable:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        raet_port:</span></span><br><span class="line">            <span class="number">4506</span></span><br><span class="line"><span class="attr">        range_server:</span></span><br><span class="line"><span class="attr">            range:</span><span class="number">80</span></span><br><span class="line"><span class="attr">        reactor:</span></span><br><span class="line"><span class="attr">        reactor_refresh_interval:</span></span><br><span class="line">            <span class="number">60</span></span><br><span class="line"><span class="attr">        reactor_worker_hwm:</span></span><br><span class="line">            <span class="number">10000</span></span><br><span class="line"><span class="attr">        reactor_worker_threads:</span></span><br><span class="line">            <span class="number">10</span></span><br><span class="line"><span class="attr">        renderer:</span></span><br><span class="line">            <span class="string">yaml_jinja</span></span><br><span class="line"><span class="attr">        ret_port:</span></span><br><span class="line">            <span class="number">4506</span></span><br><span class="line"><span class="attr">        root_dir:</span></span><br><span class="line">            <span class="string">/</span></span><br><span class="line"><span class="attr">        rotate_aes_key:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        runner_dirs:</span></span><br><span class="line"><span class="attr">        saltversion:</span></span><br><span class="line">            <span class="number">2015.5</span><span class="number">.10</span></span><br><span class="line"><span class="attr">        search:</span></span><br><span class="line"><span class="attr">        search_index_interval:</span></span><br><span class="line">            <span class="number">3600</span></span><br><span class="line"><span class="attr">        serial:</span></span><br><span class="line">            <span class="string">msgpack</span></span><br><span class="line"><span class="attr">        show_jid:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        show_timeout:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        sign_pub_messages:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        sock_dir:</span></span><br><span class="line">            <span class="string">/var/run/salt/master</span></span><br><span class="line"><span class="attr">        sqlite_queue_dir:</span></span><br><span class="line">            <span class="string">/var/cache/salt/master/queues</span></span><br><span class="line"><span class="attr">        ssh_passwd:</span></span><br><span class="line"><span class="attr">        ssh_port:</span></span><br><span class="line">            <span class="number">22</span></span><br><span class="line"><span class="attr">        ssh_scan_ports:</span></span><br><span class="line">            <span class="number">22</span></span><br><span class="line"><span class="attr">        ssh_scan_timeout:</span></span><br><span class="line">            <span class="number">0.01</span></span><br><span class="line"><span class="attr">        ssh_sudo:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        ssh_timeout:</span></span><br><span class="line">            <span class="number">60</span></span><br><span class="line"><span class="attr">        ssh_user:</span></span><br><span class="line">            <span class="string">root</span></span><br><span class="line"><span class="attr">        state_aggregate:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        state_auto_order:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        state_events:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        state_output:</span></span><br><span class="line">            <span class="string">full</span></span><br><span class="line"><span class="attr">        state_top:</span></span><br><span class="line"><span class="attr">            salt:</span><span class="string">//top.sls</span></span><br><span class="line"><span class="attr">        state_top_saltenv:</span></span><br><span class="line">            <span class="string">None</span></span><br><span class="line"><span class="attr">        state_verbose:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        sudo_acl:</span></span><br><span class="line">            <span class="literal">False</span></span><br><span class="line"><span class="attr">        svnfs_branches:</span></span><br><span class="line">            <span class="string">branches</span></span><br><span class="line"><span class="attr">        svnfs_env_blacklist:</span></span><br><span class="line"><span class="attr">        svnfs_env_whitelist:</span></span><br><span class="line"><span class="attr">        svnfs_mountpoint:</span></span><br><span class="line"><span class="attr">        svnfs_remotes:</span></span><br><span class="line"><span class="attr">        svnfs_root:</span></span><br><span class="line"><span class="attr">        svnfs_tags:</span></span><br><span class="line">            <span class="string">tags</span></span><br><span class="line"><span class="attr">        svnfs_trunk:</span></span><br><span class="line">            <span class="string">trunk</span></span><br><span class="line"><span class="attr">        syndic_dir:</span></span><br><span class="line">            <span class="string">/var/cache/salt/master/syndics</span></span><br><span class="line"><span class="attr">        syndic_event_forward_timeout:</span></span><br><span class="line">            <span class="number">0.5</span></span><br><span class="line"><span class="attr">        syndic_jid_forward_cache_hwm:</span></span><br><span class="line">            <span class="number">100</span></span><br><span class="line"><span class="attr">        syndic_master:</span></span><br><span class="line"><span class="attr">        syndic_max_event_process_time:</span></span><br><span class="line">            <span class="number">0.5</span></span><br><span class="line"><span class="attr">        syndic_wait:</span></span><br><span class="line">            <span class="number">5</span></span><br><span class="line"><span class="attr">        timeout:</span></span><br><span class="line">            <span class="number">5</span></span><br><span class="line"><span class="attr">        token_dir:</span></span><br><span class="line">            <span class="string">/var/cache/salt/master/tokens</span></span><br><span class="line"><span class="attr">        token_expire:</span></span><br><span class="line">            <span class="number">43200</span></span><br><span class="line"><span class="attr">        transport:</span></span><br><span class="line">            <span class="string">zeromq</span></span><br><span class="line"><span class="attr">        user:</span></span><br><span class="line">            <span class="string">root</span></span><br><span class="line"><span class="attr">        verify_env:</span></span><br><span class="line">            <span class="literal">True</span></span><br><span class="line"><span class="attr">        win_gitrepos:</span></span><br><span class="line"><span class="attr">            - https:</span><span class="string">//github.com/saltstack/salt-winrepo.git</span></span><br><span class="line"><span class="attr">        win_repo:</span></span><br><span class="line">            <span class="string">/srv/salt/win/repo</span></span><br><span class="line"><span class="attr">        win_repo_mastercachefile:</span></span><br><span class="line">            <span class="string">/srv/salt/win/repo/winrepo.p</span></span><br><span class="line"><span class="attr">        worker_floscript:</span></span><br><span class="line">            <span class="string">/usr/lib/python2.7/site-packages/salt/daemons/flo/worker.flo</span></span><br><span class="line"><span class="attr">        worker_threads:</span></span><br><span class="line">            <span class="number">5</span></span><br><span class="line"><span class="attr">        zmq_filtering:</span></span><br><span class="line">            <span class="literal">False</span></span><br></pre></td></tr></table></figure><h2 id="Pillar-应用场景"><a href="#Pillar-应用场景" class="headerlink" title="Pillar 应用场景"></a>Pillar 应用场景</h2><p>用于敏感数据，给某一个配置文件设置一个密码，这个密码只希望指定 minion 能看到<br>使用 Pillar 来处理变量差异性</p><h2 id="定义-Pillar-数据"><a href="#定义-Pillar-数据" class="headerlink" title="定义 Pillar 数据"></a>定义 Pillar 数据</h2><blockquote><p>打开 <code>pillar_roots</code> 配置<br><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]<span class="comment"># vim /etc/salt/master</span></span><br><span class="line"><span class="string">...</span>省略<span class="string">...</span></span><br><span class="line">pillar_roots:</span><br><span class="line">  base:</span><br><span class="line">    - <span class="string">/srv/pillar</span></span><br><span class="line"><span class="string">...</span>省略<span class="string">...</span></span><br><span class="line"><span class="function">:wq</span> 保存退出</span><br><span class="line"></span><br><span class="line"><span class="comment"># 重启 salt-master 服务</span></span><br><span class="line">systemctl restart salt-master</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>注意：<code>base</code> 环境是必须有的基础环境，和 <code>topfile</code> 里是对应的<br>可以配置多个环境<br>存放在 <code>/srv/pillar</code> 目录下<br><code>Pillar</code> 也有 <code>topfile</code>，可以指定哪个 <code>Minion</code> 能看到哪一个<br><code>topfile</code> 必须放在 <code>base</code> 环境下</p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># mkdir -pv /srv/pillar</span></span><br><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># cd /srv/pillar/</span></span><br><span class="line">[root<span class="symbol">@master01</span> pillar]<span class="meta"># vim /srv/pillar/apache.sls</span></span><br><span class="line">&#123;% <span class="keyword">if</span> grains[<span class="string">'os'</span>] == <span class="string">'CentOS'</span> %&#125;</span><br><span class="line">apache: httpd</span><br><span class="line">&#123;% elif grains[<span class="string">'os'</span>] == <span class="string">'Debian'</span> %&#125;</span><br><span class="line">apache: apache2</span><br><span class="line">&#123;% <span class="keyword">endif</span> %&#125;</span><br><span class="line">:wq 保存退出</span><br></pre></td></tr></table></figure><blockquote><p>将 apache.sls 指定哪个 Minion 能看到<br><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@master01 ~</span>]<span class="meta"># cd /srv/pillar/</span></span><br><span class="line">[<span class="meta">root@master01 pillar</span>]<span class="meta"># vim /srv/pillar/top.sls</span></span><br><span class="line"><span class="keyword">base</span>:</span><br><span class="line">  <span class="string">'*'</span>:</span><br><span class="line">    - apache</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>让所有机器都能看到这个 apache.sls 的 Pillar</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 pillar]<span class="meta"># salt <span class="string">'*'</span> pillar.items</span></span><br><span class="line"><span class="symbol">dbfw01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    apache:</span></span><br><span class="line">        httpd</span><br><span class="line"><span class="symbol">minion01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    apache:</span></span><br><span class="line">        httpd</span><br></pre></td></tr></table></figure><blockquote><p>获取到了 apache 的 pillar，值都是 httpd，因为都是 CentOS 的机器，如果是 Ubuntu 的机器就会显示 apache2</p></blockquote><p><strong>Pillar 主要用于做配置管理，用来定义一些变量和参数，比如：主机名，IP</strong></p><h2 id="Pillar-定位主机"><a href="#Pillar-定位主机" class="headerlink" title="Pillar 定位主机"></a>Pillar 定位主机</h2><blockquote><p><code>-I, --pillar</code> 表示使用 Pillar 来匹配<br>设置完 Pillar 后，需要刷新 Pillar 数据信息，使其生效<br><code>salt &#39;*&#39; saltutil.refresh_pillar</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@master01</span> <span class="string">pillar]#</span> <span class="string">salt</span> <span class="string">'*'</span> <span class="string">saltutil.refresh_pillar</span></span><br><span class="line"><span class="attr">dbfw01:</span></span><br><span class="line">    <span class="literal">True</span></span><br><span class="line"><span class="attr">minion01:</span></span><br><span class="line">    <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root@master01</span> <span class="string">pillar]#</span> <span class="string">salt</span> <span class="bullet">-I</span> <span class="string">'apache:httpd'</span> <span class="string">test.ping</span></span><br><span class="line"><span class="attr">dbfw01:</span></span><br><span class="line">    <span class="literal">True</span></span><br><span class="line"><span class="attr">minion01:</span></span><br><span class="line">    <span class="literal">True</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-数据系统-Pillar&quot;&gt;&lt;a href=&quot;#SaltStack-数据系统-Pillar&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 数据系统 Pillar&quot;&gt;&lt;/a&gt;SaltStack 数据系统 Pillar&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 数据系统 Pillar" scheme="http://www.gmlyo.com/tags/SaltStack-%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F-Pillar/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack states sls 状态管理</title>
    <link href="http://www.gmlyo.com/2018/09/06/SaltStack-states-sls-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/"/>
    <id>http://www.gmlyo.com/2018/09/06/SaltStack-states-sls-状态管理/</id>
    <published>2018-09-05T17:58:05.000Z</published>
    <updated>2018-09-09T15:29:22.922Z</updated>
    
    <content type="html"><![CDATA[<h2 id="SaltStack-states-sls-状态管理"><a href="#SaltStack-states-sls-状态管理" class="headerlink" title="SaltStack states sls 状态管理"></a>SaltStack states sls 状态管理</h2><a id="more"></a><h3 id="开启-file-roots-状态管理"><a href="#开启-file-roots-状态管理" class="headerlink" title="开启 file_roots 状态管理"></a>开启 file_roots 状态管理</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# cd /etc/salt/</span><br><span class="line">[root@master01 salt]# vim /etc/salt/master</span><br><span class="line">...省略...</span><br><span class="line"><span class="meta">#</span><span class="bash"> file_roots:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   base:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - /srv/salt/</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   dev:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - /srv/salt/dev/services</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - /srv/salt/dev/states</span></span><br><span class="line"><span class="meta">#</span><span class="bash">   prod:</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - /srv/salt/prod/services</span></span><br><span class="line"><span class="meta">#</span><span class="bash">     - /srv/salt/prod/states</span></span><br><span class="line"><span class="meta">#</span><span class="bash"></span></span><br><span class="line">file_roots:        # 打开这段注释</span><br><span class="line">  base:</span><br><span class="line">    - /srv/salt</span><br><span class="line">...省略...</span><br><span class="line">:wq保存退出</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建 mkdir -pv /srv/salt 目录</span></span><br><span class="line">[root@master01 ~]# mkdir -pv /srv/salt</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 重启 Master端服务</span></span><br><span class="line">systemctl restart salt-master</span><br></pre></td></tr></table></figure><blockquote><p>默认必须有一个 base 环境<br>可以指定多个环境：基准环境(base)，开发环境(dev)，生产环境(prod)</p></blockquote><h3 id="编辑-sls-状态配置"><a href="#编辑-sls-状态配置" class="headerlink" title="编辑 sls 状态配置"></a>编辑 sls 状态配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@master01</span> <span class="string">~]#</span> <span class="string">cd</span> <span class="string">/srv/salt/</span></span><br><span class="line"><span class="string">[root@master01</span> <span class="string">salt]#</span> <span class="string">vim</span> <span class="string">/srv/salt/nginx.sls</span></span><br><span class="line"><span class="attr">nginx-install:</span>       <span class="comment"># 自定义名称</span></span><br><span class="line">  <span class="string">pkg.installed:</span>     <span class="comment"># 模块.方法</span></span><br><span class="line"><span class="attr">    - names:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nginx-servcice:</span>      <span class="comment"># 自定义名称</span></span><br><span class="line">  <span class="string">service.running:</span>   <span class="comment"># 模块.方法</span></span><br><span class="line"><span class="attr">    - name:</span> <span class="string">nginx</span>    <span class="comment"># nginx 服务名</span></span><br><span class="line"><span class="attr">    - enable:</span> <span class="literal">True</span>   <span class="comment"># 开机自启</span></span><br><span class="line"><span class="attr">    - reload:</span> <span class="literal">True</span>   <span class="comment"># 开启重新加载</span></span><br></pre></td></tr></table></figure><blockquote><p>执行<br><code>salt &#39;*&#39; 模块.方法 sls文件</code><br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt <span class="string">'*'</span> state.sls nginx</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>salt ‘*’ 意思是在所有机器上执行  nginx 这个状态(sls)</p></blockquote><blockquote><p>如果没有指定 <code>-name: nginx</code> 服务名，会报 Result 失败<br>命名服务 <code>nginx-service</code> 不可用，因为会把 <code>nginx-service</code> 当成服务名<br>另一个办法是把 <code>nginx-service</code> 改成 <code>nginx</code>，<code>-name: nginx</code> 就不用写了<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">----------</span><br><span class="line">          ID: nginx-service</span><br><span class="line">    Function: service.running</span><br><span class="line">      Result: <span class="literal">False</span></span><br><span class="line">     Comment: The named<span class="built_in"> service </span>nginx-service is <span class="keyword">not</span> available</span><br><span class="line">     Started: 01:38:22.609850</span><br><span class="line">    Duration: 108.528 ms</span><br><span class="line">     Changes:</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>salt ‘minion01’ 指定在 minion01 机器上执行  nginx 这个状态(sls)<br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@master01</span> <span class="string">~]#</span> <span class="string">salt</span> <span class="string">'minion01'</span> <span class="string">state.sls</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">minion01:</span></span><br><span class="line"><span class="bullet">-</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">          ID:</span> <span class="string">nginx-install</span></span><br><span class="line"><span class="attr">    Function:</span> <span class="string">pkg.installed</span></span><br><span class="line"><span class="attr">        Name:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">      Result:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">     Comment:</span> <span class="string">The</span> <span class="string">following</span> <span class="string">packages</span> <span class="string">were</span> <span class="string">installed/updated:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">     Started:</span> <span class="number">01</span><span class="string">:40:29.448702</span></span><br><span class="line"><span class="attr">    Duration:</span> <span class="number">8950.813</span> <span class="string">ms</span></span><br><span class="line"><span class="attr">     Changes:</span>   </span><br><span class="line"><span class="bullet">              -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">              nginx:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="attr">              nginx-all-modules:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="attr">              nginx-mod-http-geoip:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="attr">              nginx-mod-http-image-filter:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="attr">              nginx-mod-http-perl:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="attr">              nginx-mod-http-xslt-filter:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="attr">              nginx-mod-mail:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="attr">              nginx-mod-stream:</span></span><br><span class="line"><span class="bullet">                  -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">                  new:</span></span><br><span class="line">                      <span class="number">1</span><span class="string">:1.12.2-2.el7</span></span><br><span class="line"><span class="attr">                  old:</span></span><br><span class="line"><span class="bullet">-</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">          ID:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">    Function:</span> <span class="string">service.running</span></span><br><span class="line"><span class="attr">      Result:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">     Comment:</span> <span class="string">Service</span> <span class="string">nginx</span> <span class="string">has</span> <span class="string">been</span> <span class="string">enabled,</span> <span class="string">and</span> <span class="string">is</span> <span class="string">running</span></span><br><span class="line"><span class="attr">     Started:</span> <span class="number">01</span><span class="string">:40:38.412396</span></span><br><span class="line"><span class="attr">    Duration:</span> <span class="number">732.741</span> <span class="string">ms</span></span><br><span class="line"><span class="attr">     Changes:</span>   </span><br><span class="line"><span class="bullet">              -</span><span class="bullet">---------</span></span><br><span class="line"><span class="attr">              nginx:</span></span><br><span class="line">                  <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="string">Summary</span></span><br><span class="line"><span class="bullet">-</span><span class="bullet">-----------</span></span><br><span class="line"><span class="attr">Succeeded:</span> <span class="number">2</span> <span class="string">(changed=2)</span></span><br><span class="line"><span class="attr">Failed:</span>    <span class="number">0</span></span><br><span class="line"><span class="bullet">-</span><span class="bullet">-----------</span></span><br><span class="line"><span class="string">Total</span> <span class="string">states</span> <span class="attr">run:</span>     <span class="number">2</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>在 Minion 端查看</p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@minion01</span> ~]<span class="meta"># watch <span class="string">'ps -ef | grep yum'</span></span></span><br><span class="line">[root<span class="symbol">@minion01</span> ~]<span class="meta"># lsof -i:80</span></span><br></pre></td></tr></table></figure><blockquote><p>一台机器可能不止一种状态(sls)配置，可能有多个状态(sls)配置<br>可以使用高级状态(sls)配置<br>写一个入口文件 topfile<br>一般入口文件名为 top.sls<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># vim /srv/salt/top.sls</span></span><br><span class="line">base:           <span class="meta"># 在 base 下</span></span><br><span class="line">  <span class="string">'*'</span>:          <span class="meta"># 在 <span class="string">'*'</span> 所有主机上</span></span><br><span class="line">    - nginx     <span class="meta"># 执行 nginx 这个 sls</span></span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight cs"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[<span class="meta">root@master01 ~</span>]<span class="meta"># vim /srv/salt/top.sls</span></span><br><span class="line"><span class="keyword">base</span>:            <span class="meta"># 在 base 下</span></span><br><span class="line">  <span class="string">'minion01'</span>:   <span class="meta"># 在 minion01 主机上</span></span><br><span class="line">    - nginx      <span class="meta"># 执行 nginx 这个 sls</span></span><br></pre></td></tr></table></figure><blockquote><p>执行<br><code>salt &#39;*&#39; 模块.高级状态</code></p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt <span class="string">'*'</span> state.highstate</span></span><br></pre></td></tr></table></figure><blockquote><p>从入口文件开始读，从 topfile 开始读<br>topfile 里包含了哪些普通状态(sls)，就执行哪些状态(sls)<br>远程执行，状态管理</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;SaltStack-states-sls-状态管理&quot;&gt;&lt;a href=&quot;#SaltStack-states-sls-状态管理&quot; class=&quot;headerlink&quot; title=&quot;SaltStack states sls 状态管理&quot;&gt;&lt;/a&gt;SaltStack states sls 状态管理&lt;/h2&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack states sls 状态管理" scheme="http://www.gmlyo.com/tags/SaltStack-states-sls-%E7%8A%B6%E6%80%81%E7%AE%A1%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack 数据系统 Grains</title>
    <link href="http://www.gmlyo.com/2018/09/06/SaltStack-%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F-Grains/"/>
    <id>http://www.gmlyo.com/2018/09/06/SaltStack-数据系统-Grains/</id>
    <published>2018-09-05T17:47:13.000Z</published>
    <updated>2018-09-08T18:20:16.324Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-数据系统-Grains"><a href="#SaltStack-数据系统-Grains" class="headerlink" title="SaltStack 数据系统 Grains"></a>SaltStack 数据系统 Grains</h1><a id="more"></a><table><thead><tr><th>名称</th><th>存储位置</th><th>数据类型</th><th>数据采集更新方式</th><th>应用</th></tr></thead><tbody><tr><td>Grains</td><td>Minion端</td><td>静态数据</td><td>Minion启动时收集，也可以使用 saltutil.sync_grains 进行刷新</td><td>存储 Minion 基本数据，比如用于匹配 Minion，自身数据可以用来作资产管理等。</td></tr><tr><td>Pillar</td><td>Master端</td><td>动态数据</td><td>在Master端定义，指定给对应的Minion。可以使用 saltutil.refresh_pillar 刷新</td><td>存储 Master 指定的数据，只有指定的 Minion 可以看到。用于敏感数据保存。</td></tr></tbody></table><blockquote><p>Grains 存放 minion 启动时收集的系统信息<br>Grains 是存储在 minion 端的<br>只有在 minion 启动时才会进行收集，收集完之后就不变了，等下一次 minion 重启，才会变<br>Grains 收集的数据信息称之为静态数据，重启才会收集，不重启就不变</p></blockquote><blockquote><p>Grains 在做配置部署的过程中会经常使用到它，Grains 是 SaltStack 记录 Minion 的一些静态信息的组件，我们可以简单地理解为 Grains 里面记录着每台 Minion 的一些常用属性，比如 CPU、内存、磁盘、网络信息等，我们可以通过 <code>granis.items</code> 查看某台 Minion 的所有 Grains 信息，Minion 的 Grains 信息是 Minion 启动的时候采集汇报给 Master 的，在实际应用环境中我们需要根据自己的业务需求去自定义一些 Grains，关于自定义 Grains 的常用方法有以下几种：</p><ul><li>通过 Minion 配置文件定义</li><li>通过 Grains 相关模块定义</li><li>通过 Python 脚本定义</li></ul></blockquote><blockquote><p>查看 Grains 方法列表<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# salt 'minion*' sys.list_functions grains</span><br><span class="line">minion01:</span><br><span class="line">    -<span class="ruby"> grains.append</span></span><br><span class="line"><span class="ruby">    - grains.delval</span></span><br><span class="line"><span class="ruby">    - grains.filter_by</span></span><br><span class="line"><span class="ruby">    - grains.get</span></span><br><span class="line"><span class="ruby">    - grains.get_or_set_hash</span></span><br><span class="line"><span class="ruby">    - grains.has_value</span></span><br><span class="line"><span class="ruby">    - grains.item</span></span><br><span class="line"><span class="ruby">    - grains.items</span></span><br><span class="line"><span class="ruby">    - grains.ls</span></span><br><span class="line"><span class="ruby">    - grains.remove</span></span><br><span class="line"><span class="ruby">    - grains.setval</span></span><br><span class="line"><span class="ruby">    - grains.setvals</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>详细用法与例子可以通过以下命令查看</p></blockquote><figure class="highlight vbnet"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]<span class="meta"># salt 'minion*' sys.doc grains</span></span><br><span class="line"><span class="comment">'grains.append:'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">New</span> <span class="keyword">in</span> version <span class="number">0.17</span><span class="number">.0</span></span><br><span class="line"></span><br><span class="line">    Append a value <span class="keyword">to</span> a list <span class="keyword">in</span> the grains config file. <span class="keyword">If</span> the grain doesn<span class="comment">'t</span></span><br><span class="line">    exist, the grain <span class="keyword">key</span> <span class="keyword">is</span> added <span class="keyword">and</span> the value <span class="keyword">is</span> appended <span class="keyword">to</span> the <span class="keyword">new</span> grain</span><br><span class="line">    <span class="keyword">as</span> a list item.</span><br><span class="line"></span><br><span class="line">    <span class="keyword">key</span></span><br><span class="line">        The grain <span class="keyword">key</span> <span class="keyword">to</span> be appended <span class="keyword">to</span></span><br><span class="line"></span><br><span class="line">    val</span><br><span class="line">        The value <span class="keyword">to</span> append <span class="keyword">to</span> the grain <span class="keyword">key</span></span><br><span class="line">...省略...</span><br><span class="line"><span class="comment">'grains.setvals:'</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">Set</span> <span class="keyword">new</span> grains values <span class="keyword">in</span> the grains config file</span><br><span class="line"></span><br><span class="line">    :param Destructive: <span class="keyword">If</span> an operation results <span class="keyword">in</span> a <span class="keyword">key</span> being removed, delete the <span class="keyword">key</span>, too. Defaults <span class="keyword">to</span> <span class="literal">False</span>.</span><br><span class="line"></span><br><span class="line">    CLI Example:</span><br><span class="line"></span><br><span class="line">        salt <span class="comment">'*' grains.setvals "&#123;'key1': 'val1', 'key2': 'val2'&#125;"</span></span><br></pre></td></tr></table></figure><blockquote><p>通过 <code>sys.doc</code> 查看 <code>grains模块.items方法</code> 的使用方法</p></blockquote><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# salt <span class="symbol">'minion</span>*' sys.doc grains.items</span><br><span class="line"><span class="symbol">'grains.items</span>:'</span><br><span class="line"></span><br><span class="line">    <span class="keyword">Return</span> <span class="keyword">all</span> <span class="keyword">of</span> the minion<span class="symbol">'s</span> grains</span><br><span class="line"></span><br><span class="line">    CLI Example:</span><br><span class="line"></span><br><span class="line">        salt <span class="string">'*'</span> grains.items</span><br><span class="line"></span><br><span class="line">    Sanitized CLI Example:</span><br><span class="line"></span><br><span class="line">        salt <span class="string">'*'</span> grains.items sanitize=<span class="literal">True</span></span><br></pre></td></tr></table></figure><h2 id="Grains-应用场景"><a href="#Grains-应用场景" class="headerlink" title="Grains 应用场景"></a>Grains 应用场景</h2><h3 id="信息收集"><a href="#信息收集" class="headerlink" title="信息收集"></a>信息收集</h3><h4 id="列出-Grains-所有的-key"><a href="#列出-Grains-所有的-key" class="headerlink" title="列出 Grains 所有的 key"></a>列出 Grains 所有的 key</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# salt 'minion*' grains.ls</span><br><span class="line">minion01:</span><br><span class="line">    -<span class="ruby"> SSDs</span></span><br><span class="line"><span class="ruby">    - biosreleasedate</span></span><br><span class="line"><span class="ruby">    - biosversion</span></span><br><span class="line"><span class="ruby">    - cpu_flags</span></span><br><span class="line"><span class="ruby">    - cpu_model</span></span><br><span class="line"><span class="ruby">    - cpuarch</span></span><br><span class="line"><span class="ruby">    - domain</span></span><br><span class="line"><span class="ruby">    - fqdn</span></span><br><span class="line"><span class="ruby">    - fqdn_ip4</span></span><br><span class="line"><span class="ruby">    - fqdn_ip6</span></span><br><span class="line"><span class="ruby">    - gpus</span></span><br><span class="line"><span class="ruby">    - host</span></span><br><span class="line"><span class="ruby">    - hwaddr_interfaces</span></span><br><span class="line"><span class="ruby">    - id</span></span><br><span class="line"><span class="ruby">    - init</span></span><br><span class="line"><span class="ruby">    - ip4_interfaces</span></span><br><span class="line"><span class="ruby">    - ip6_interfaces</span></span><br><span class="line"><span class="ruby">    - ip_interfaces</span></span><br><span class="line"><span class="ruby">    - ipv4</span></span><br><span class="line"><span class="ruby">    - ipv6</span></span><br><span class="line"><span class="ruby">    - kernel</span></span><br><span class="line"><span class="ruby">    - kernelrelease</span></span><br><span class="line"><span class="ruby">    - locale_info</span></span><br><span class="line"><span class="ruby">    - localhost</span></span><br><span class="line"><span class="ruby">    - lsb_distrib_id</span></span><br><span class="line"><span class="ruby">    - machine_id</span></span><br><span class="line"><span class="ruby">    - manufacturer</span></span><br><span class="line"><span class="ruby">    - master</span></span><br><span class="line"><span class="ruby">    - mdadm</span></span><br><span class="line"><span class="ruby">    - mem_total</span></span><br><span class="line"><span class="ruby">    - nodename</span></span><br><span class="line"><span class="ruby">    - num_cpus</span></span><br><span class="line"><span class="ruby">    - num_gpus</span></span><br><span class="line"><span class="ruby">    - os</span></span><br><span class="line"><span class="ruby">    - os_family</span></span><br><span class="line"><span class="ruby">    - osarch</span></span><br><span class="line"><span class="ruby">    - oscodename</span></span><br><span class="line"><span class="ruby">    - osfinger</span></span><br><span class="line"><span class="ruby">    - osfullname</span></span><br><span class="line"><span class="ruby">    - osmajorrelease</span></span><br><span class="line"><span class="ruby">    - osrelease</span></span><br><span class="line"><span class="ruby">    - osrelease_info</span></span><br><span class="line"><span class="ruby">    - path</span></span><br><span class="line"><span class="ruby">    - productname</span></span><br><span class="line"><span class="ruby">    - ps</span></span><br><span class="line"><span class="ruby">    - pythonexecutable</span></span><br><span class="line"><span class="ruby">    - pythonpath</span></span><br><span class="line"><span class="ruby">    - pythonversion</span></span><br><span class="line"><span class="ruby">    - saltpath</span></span><br><span class="line"><span class="ruby">    - saltversion</span></span><br><span class="line"><span class="ruby">    - saltversioninfo</span></span><br><span class="line"><span class="ruby">    - selinux</span></span><br><span class="line"><span class="ruby">    - serialnumber</span></span><br><span class="line"><span class="ruby">    - server_id</span></span><br><span class="line"><span class="ruby">    - shell</span></span><br><span class="line"><span class="ruby">    - systemd</span></span><br><span class="line"><span class="ruby">    - virtual</span></span><br><span class="line"><span class="ruby">    - zmqversion</span></span><br></pre></td></tr></table></figure><h4 id="显示-grains-所有内容信息"><a href="#显示-grains-所有内容信息" class="headerlink" title="显示 grains 所有内容信息"></a>显示 grains 所有内容信息</h4><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# salt 'minion*' grains.items</span><br><span class="line">minion01:</span><br><span class="line">    -<span class="ruby">---------</span></span><br><span class="line"><span class="ruby">    <span class="symbol">SSDs:</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">biosreleasedate:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">04</span>/<span class="number">01</span>/<span class="number">2014</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">biosversion:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">1.11</span>.<span class="number">0</span>-<span class="number">2</span>.el7</span></span><br><span class="line"><span class="ruby">    <span class="symbol">cpu_flags:</span></span></span><br><span class="line"><span class="ruby">        - fpu</span></span><br><span class="line"><span class="ruby">        - de</span></span><br><span class="line"><span class="ruby">        - pse</span></span><br><span class="line"><span class="ruby">        - tsc</span></span><br><span class="line"><span class="ruby">        - msr</span></span><br><span class="line"><span class="ruby">        - pae</span></span><br><span class="line"><span class="ruby">        - mce</span></span><br><span class="line"><span class="ruby">        - cx8</span></span><br><span class="line"><span class="ruby">        - apic</span></span><br><span class="line"><span class="ruby">        - sep</span></span><br><span class="line"><span class="ruby">        - mtrr</span></span><br><span class="line"><span class="ruby">        - pge</span></span><br><span class="line"><span class="ruby">        - mca</span></span><br><span class="line"><span class="ruby">        - cmov</span></span><br><span class="line"><span class="ruby">        - pse36</span></span><br><span class="line"><span class="ruby">        - clflush</span></span><br><span class="line"><span class="ruby">        - mmx</span></span><br><span class="line"><span class="ruby">        - fxsr</span></span><br><span class="line"><span class="ruby">        - sse</span></span><br><span class="line"><span class="ruby">        - sse2</span></span><br><span class="line"><span class="ruby">        - ht</span></span><br><span class="line"><span class="ruby">        - syscall</span></span><br><span class="line"><span class="ruby">        - nx</span></span><br><span class="line"><span class="ruby">        - lm</span></span><br><span class="line"><span class="ruby">        - rep_good</span></span><br><span class="line"><span class="ruby">        - nopl</span></span><br><span class="line"><span class="ruby">        - pni</span></span><br><span class="line"><span class="ruby">        - cx16</span></span><br><span class="line"><span class="ruby">        - x2apic</span></span><br><span class="line"><span class="ruby">        - hypervisor</span></span><br><span class="line"><span class="ruby">        - lahf_lm</span></span><br><span class="line"><span class="ruby">    <span class="symbol">cpu_model:</span></span></span><br><span class="line"><span class="ruby">        QEMU Virtual CPU version <span class="number">2.5</span>+</span></span><br><span class="line"><span class="ruby">    <span class="symbol">cpuarch:</span></span></span><br><span class="line"><span class="ruby">        x86_64</span></span><br><span class="line"><span class="ruby">    <span class="symbol">domain:</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">fqdn:</span></span></span><br><span class="line"><span class="ruby">        minion01</span></span><br><span class="line"><span class="ruby">    <span class="symbol">fqdn_ip4:</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">192.168</span>.<span class="number">50.208</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">fqdn_ip6:</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">gpus:</span></span></span><br><span class="line"><span class="ruby">        <span class="params">|_</span></span></span><br><span class="line"><span class="ruby">          ----------</span></span><br><span class="line"><span class="ruby">          <span class="symbol">model:</span></span></span><br><span class="line"><span class="ruby">              GD <span class="number">5446</span></span></span><br><span class="line"><span class="ruby">          <span class="symbol">vendor:</span></span></span><br><span class="line"><span class="ruby">              unknown</span></span><br><span class="line"><span class="ruby">    <span class="symbol">host:</span></span></span><br><span class="line"><span class="ruby">        minion01</span></span><br><span class="line"><span class="ruby">    <span class="symbol">hwaddr_interfaces:</span></span></span><br><span class="line"><span class="ruby">        ----------</span></span><br><span class="line"><span class="ruby">        <span class="symbol">eth0:</span></span></span><br><span class="line"><span class="ruby">            <span class="symbol">fa:</span><span class="number">57</span><span class="symbol">:ad</span><span class="symbol">:</span><span class="number">54</span><span class="symbol">:</span><span class="number">77</span><span class="symbol">:</span><span class="number">00</span></span></span><br><span class="line"><span class="ruby">        <span class="symbol">lo:</span></span></span><br><span class="line"><span class="ruby">            <span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span><span class="symbol">:</span><span class="number">00</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">id:</span></span></span><br><span class="line"><span class="ruby">        minion01</span></span><br><span class="line"><span class="ruby">    <span class="symbol">init:</span></span></span><br><span class="line"><span class="ruby">        systemd</span></span><br><span class="line"><span class="ruby">    <span class="symbol">ip4_interfaces:</span></span></span><br><span class="line"><span class="ruby">        ----------</span></span><br><span class="line"><span class="ruby">        <span class="symbol">eth0:</span></span></span><br><span class="line"><span class="ruby">            - <span class="number">192.168</span>.<span class="number">50.171</span></span></span><br><span class="line"><span class="ruby">        <span class="symbol">lo:</span></span></span><br><span class="line"><span class="ruby">            - <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">ip6_interfaces:</span></span></span><br><span class="line"><span class="ruby">        ----------</span></span><br><span class="line"><span class="ruby">        <span class="symbol">eth0:</span></span></span><br><span class="line"><span class="ruby">        <span class="symbol">lo:</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">ip_interfaces:</span></span></span><br><span class="line"><span class="ruby">        ----------</span></span><br><span class="line"><span class="ruby">        <span class="symbol">eth0:</span></span></span><br><span class="line"><span class="ruby">            - <span class="number">192.168</span>.<span class="number">50.171</span></span></span><br><span class="line"><span class="ruby">        <span class="symbol">lo:</span></span></span><br><span class="line"><span class="ruby">            - <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">ipv4:</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">127.0</span>.<span class="number">0</span>.<span class="number">1</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">192.168</span>.<span class="number">50.171</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">ipv6:</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">kernel:</span></span></span><br><span class="line"><span class="ruby">        Linux</span></span><br><span class="line"><span class="ruby">    <span class="symbol">kernelrelease:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">3.10</span>.<span class="number">0</span>-<span class="number">862</span>.el7.x86_64</span></span><br><span class="line"><span class="ruby">    <span class="symbol">locale_info:</span></span></span><br><span class="line"><span class="ruby">        ----------</span></span><br><span class="line"><span class="ruby">        <span class="symbol">defaultencoding:</span></span></span><br><span class="line"><span class="ruby">            UTF-<span class="number">8</span></span></span><br><span class="line"><span class="ruby">        <span class="symbol">defaultlanguage:</span></span></span><br><span class="line"><span class="ruby">            en_US</span></span><br><span class="line"><span class="ruby">        <span class="symbol">detectedencoding:</span></span></span><br><span class="line"><span class="ruby">            UTF-<span class="number">8</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">localhost:</span></span></span><br><span class="line"><span class="ruby">        minion01</span></span><br><span class="line"><span class="ruby">    <span class="symbol">lsb_distrib_id:</span></span></span><br><span class="line"><span class="ruby">        CentOS Linux</span></span><br><span class="line"><span class="ruby">    <span class="symbol">machine_id:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">2</span>e1eda950cd34bdd9dc04c8df9294ae<span class="number">0</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">manufacturer:</span></span></span><br><span class="line"><span class="ruby">        Red Hat</span></span><br><span class="line"><span class="ruby">    <span class="symbol">master:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">192.168</span>.<span class="number">35.223</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">mdadm:</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">mem_total:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">3772</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">nodename:</span></span></span><br><span class="line"><span class="ruby">        minion01</span></span><br><span class="line"><span class="ruby">    <span class="symbol">num_cpus:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">2</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">num_gpus:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">1</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">os:</span></span></span><br><span class="line"><span class="ruby">        CentOS</span></span><br><span class="line"><span class="ruby">    <span class="symbol">os_family:</span></span></span><br><span class="line"><span class="ruby">        RedHat</span></span><br><span class="line"><span class="ruby">    <span class="symbol">osarch:</span></span></span><br><span class="line"><span class="ruby">        x86_64</span></span><br><span class="line"><span class="ruby">    <span class="symbol">oscodename:</span></span></span><br><span class="line"><span class="ruby">        Core</span></span><br><span class="line"><span class="ruby">    <span class="symbol">osfinger:</span></span></span><br><span class="line"><span class="ruby">        CentOS Linux-<span class="number">7</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">osfullname:</span></span></span><br><span class="line"><span class="ruby">        CentOS Linux</span></span><br><span class="line"><span class="ruby">    <span class="symbol">osmajorrelease:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">7</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">osrelease:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">7.5</span>.<span class="number">1804</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">osrelease_info:</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">7</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">5</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">1804</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">path:</span></span></span><br><span class="line"><span class="ruby">        /usr/local/<span class="symbol">sbin:</span>/usr/local/<span class="symbol">bin:</span>/usr/<span class="symbol">sbin:</span>/usr/bin</span></span><br><span class="line"><span class="ruby">    <span class="symbol">productname:</span></span></span><br><span class="line"><span class="ruby">        KVM</span></span><br><span class="line"><span class="ruby">    <span class="symbol">ps:</span></span></span><br><span class="line"><span class="ruby">        ps -efH</span></span><br><span class="line"><span class="ruby">    <span class="symbol">pythonexecutable:</span></span></span><br><span class="line"><span class="ruby">        /usr/bin/python</span></span><br><span class="line"><span class="ruby">    <span class="symbol">pythonpath:</span></span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/bin</span></span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span>64/python27.zip</span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span>64/python2.<span class="number">7</span></span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span>64/python2.<span class="number">7</span>/plat-linux2</span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span>64/python2.<span class="number">7</span>/lib-tk</span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span>64/python2.<span class="number">7</span>/lib-old</span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span>64/python2.<span class="number">7</span>/lib-dynload</span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span>64/python2.<span class="number">7</span>/site-packages</span></span><br><span class="line"><span class="ruby">        - <span class="regexp">/usr/lib</span><span class="regexp">/python2.7/site</span>-packages</span></span><br><span class="line"><span class="ruby">    <span class="symbol">pythonversion:</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">2</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">7</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">5</span></span></span><br><span class="line"><span class="ruby">        - final</span></span><br><span class="line"><span class="ruby">        - <span class="number">0</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">saltpath:</span></span></span><br><span class="line"><span class="ruby">        /usr/lib/python2.<span class="number">7</span>/site-packages/salt</span></span><br><span class="line"><span class="ruby">    <span class="symbol">saltversion:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">2015.5</span>.<span class="number">10</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">saltversioninfo:</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">2015</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">5</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">10</span></span></span><br><span class="line"><span class="ruby">        - <span class="number">0</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">selinux:</span></span></span><br><span class="line"><span class="ruby">        ----------</span></span><br><span class="line"><span class="ruby">        <span class="symbol">enabled:</span></span></span><br><span class="line"><span class="ruby">            False</span></span><br><span class="line"><span class="ruby">        <span class="symbol">enforced:</span></span></span><br><span class="line"><span class="ruby">            Disabled</span></span><br><span class="line"><span class="ruby">    <span class="symbol">serialnumber:</span></span></span><br><span class="line"><span class="ruby">        Not Specified</span></span><br><span class="line"><span class="ruby">    <span class="symbol">server_id:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">1223839238</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">shell:</span></span></span><br><span class="line"><span class="ruby">        /bin/sh</span></span><br><span class="line"><span class="ruby">    <span class="symbol">systemd:</span></span></span><br><span class="line"><span class="ruby">        ----------</span></span><br><span class="line"><span class="ruby">        <span class="symbol">features:</span></span></span><br><span class="line"><span class="ruby">            +PAM +AUDIT +SELINUX +IMA -APPARMOR +SMACK +SYSVINIT +UTMP +LIBCRYPTSETUP +GCRYPT +GNUTLS +ACL +XZ +LZ4 -SECCOMP +BLKID +ELFUTILS +KMOD +IDN</span></span><br><span class="line"><span class="ruby">        <span class="symbol">version:</span></span></span><br><span class="line"><span class="ruby">            <span class="number">219</span></span></span><br><span class="line"><span class="ruby">    <span class="symbol">virtual:</span></span></span><br><span class="line"><span class="ruby">        kvm</span></span><br><span class="line"><span class="ruby">    <span class="symbol">zmqversion:</span></span></span><br><span class="line"><span class="ruby">        <span class="number">3.2</span>.<span class="number">5</span></span></span><br></pre></td></tr></table></figure><h4 id="显示某个信息内容"><a href="#显示某个信息内容" class="headerlink" title="显示某个信息内容"></a>显示某个信息内容</h4><blockquote><p>显示 <code>fqdn</code> 信息</p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt <span class="string">'minion*'</span> grains.item fqdn</span></span><br><span class="line">minion01:</span><br><span class="line">    ----------</span><br><span class="line">    fqdn:</span><br><span class="line">        minion01</span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt <span class="string">'minion*'</span> grains.get fqdn</span></span><br><span class="line">minion01:</span><br><span class="line">    minion01</span><br></pre></td></tr></table></figure><blockquote><p>注意：<code>item</code> 和 <code>get</code> 显示的效果不同</p></blockquote><blockquote><p>查询 <code>eth0</code> 网卡信息<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt <span class="string">'minion*'</span> grains.get ip_interfaces:eth0</span></span><br><span class="line">minion01:</span><br><span class="line">    - <span class="number">192.168</span><span class="number">.50</span><span class="number">.171</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="在-远程执行里-匹配-Minion"><a href="#在-远程执行里-匹配-Minion" class="headerlink" title="在 远程执行里 匹配 Minion"></a>在 远程执行里 匹配 Minion</h3><blockquote><p>在所有 CentOS 的机器上执行命令</p></blockquote><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# salt <span class="string">'minion*'</span> grains.item <span class="built_in">os</span></span><br><span class="line"><span class="name">minion01</span>:</span><br><span class="line">    <span class="comment">----------</span></span><br><span class="line">    <span class="name">os</span>:</span><br><span class="line">        CentOS</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# salt <span class="string">'minion*'</span> grains.get <span class="built_in">os</span></span><br><span class="line"><span class="name">minion01</span>:</span><br><span class="line">    CentOS</span><br></pre></td></tr></table></figure><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]<span class="meta"># salt <span class="string">'*'</span> grains.get osfinger</span></span><br><span class="line"><span class="symbol">dbfw01:</span></span><br><span class="line">    CentOS<span class="number">-6</span></span><br><span class="line"><span class="symbol">minion01:</span></span><br><span class="line">    CentOS Linux<span class="number">-7</span></span><br></pre></td></tr></table></figure><blockquote><p><code>-G：</code> 表示使用 Grains 来匹配<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]<span class="comment"># salt -G os:CentOS cmd.run 'w'</span></span><br><span class="line">minion01:</span><br><span class="line">     <span class="number">23</span>:<span class="number">59</span>:<span class="number">26</span> up <span class="number">27</span> days,  <span class="number">3</span>:<span class="number">00</span>,  <span class="number">0</span> users,  load average: <span class="number">0.01</span>, <span class="number">0.03</span>, <span class="number">0.05</span></span><br><span class="line">    <span class="keyword">USER</span>     <span class="title">TTY</span>      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt -G osfinger:<span class="string">'CentOS Linux-7'</span> cmd.run <span class="string">'w'</span></span></span><br><span class="line">minion01:</span><br><span class="line">     <span class="number">00</span>:<span class="number">43</span>:<span class="number">03</span> up <span class="number">27</span> days,  <span class="number">3</span>:<span class="number">44</span>,  <span class="number">0</span> users,  load average: <span class="number">0.00</span>, <span class="number">0.01</span>, <span class="number">0.05</span></span><br><span class="line">    USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br></pre></td></tr></table></figure><blockquote><p>使用 Grains 可以来匹配主机</p></blockquote><h3 id="自定义-Grains"><a href="#自定义-Grains" class="headerlink" title="自定义 Grains"></a>自定义 Grains</h3><blockquote><p>当内置 Grains 满足不了需求时，可以自定义 Grains。<br>SaltStack 支持在 Minion 端通过配置文件的方式来自定义 Grains</p></blockquote><h4 id="通过-Minion-配置文件定义-Grains"><a href="#通过-Minion-配置文件定义-Grains" class="headerlink" title="通过 Minion 配置文件定义 Grains"></a>通过 Minion 配置文件定义 Grains</h4><blockquote><p>在 minion 端，编辑 <code>/etc/salt/minion</code><br>打开 <code>grains: roles:</code>  添加一行自定义 Grains 内容</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;</span><span class="bash"> grains:</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">   roles:</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash">      - minion01-server</span></span><br><span class="line"><span class="meta">&gt;</span><span class="bash"></span></span><br></pre></td></tr></table></figure></blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# vim /etc/salt/minion</span><br><span class="line">...省略...</span><br><span class="line">grains:</span><br><span class="line">  roles:    # 角色</span><br><span class="line">     - minion-server    # 配置一个角色</span><br><span class="line">     - webserver    # 可以配置多个</span><br><span class="line">     - memcache</span><br><span class="line">...省略...</span><br><span class="line">:wq保存退出</span><br><span class="line"></span><br><span class="line"># 重启 salt-minion</span><br><span class="line">[root@master01 ~]# systemctl restart salt-minion</span><br></pre></td></tr></table></figure><blockquote><p>在 Master 端，在 <code>roles</code> 是 <code>minion-server</code> 的机器上，执行 <code>echo hello minion01</code></p></blockquote><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt -G <span class="string">'roles:minion-server'</span> cmd.run <span class="string">'echo hello minion01'</span></span></span><br><span class="line">minion01:</span><br><span class="line">    hello minion01</span><br></pre></td></tr></table></figure><blockquote><p>当配置 <code>/etc/salt/minion</code> 主配置文件，配置信息过多的情况下，可读性就会变差<br>我们可以另做一个配置 /etc/salt/grains 文件，专门来配置自定义 Grains<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@minion01 salt]# vim /etc/salt/grains</span><br><span class="line">roles:</span><br><span class="line">  -<span class="ruby"> minion-server</span></span><br><span class="line"><span class="ruby">  - minion-java</span></span><br><span class="line"><span class="ruby">  - minion-springboot</span></span><br><span class="line"><span class="ruby">  - minion-tomcat</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Salt 默认会读取这个文件</p></blockquote><blockquote><p>推荐使用这种方式 <code>/etc/salt/minion.d/grains.conf</code><br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@minion01 salt]# vim /etc/salt/minion.d/grains.conf</span><br><span class="line">grains:</span><br><span class="line">  Server_business: Java, Web Site</span><br><span class="line">  Soft:</span><br><span class="line">    -<span class="ruby"> Tomcat</span></span><br><span class="line"><span class="ruby">    - Spring Boot</span></span><br><span class="line"><span class="ruby">  <span class="symbol">roles:</span></span></span><br><span class="line"><span class="ruby">    - minion-server</span></span><br><span class="line"><span class="ruby">  <span class="symbol">restful:</span></span></span><br><span class="line"><span class="ruby">    - minion-springboot</span></span><br><span class="line"><span class="ruby">  <span class="symbol">web:</span></span></span><br><span class="line"><span class="ruby">    - minion-tomcat</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>在 master 端执行<br><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]# salt '*' grains.item roles</span><br><span class="line">dbfw01:</span><br><span class="line">    -<span class="ruby">---------</span></span><br><span class="line"><span class="ruby">    <span class="symbol">roles:</span></span></span><br><span class="line"><span class="ruby"><span class="symbol">minion01:</span></span></span><br><span class="line"><span class="ruby">    ----------</span></span><br><span class="line"><span class="ruby">    <span class="symbol">roles:</span></span></span><br><span class="line"><span class="ruby">        - minion-server</span></span><br><span class="line"><span class="ruby">        - minion-java</span></span><br><span class="line"><span class="ruby">        - minion-springboot</span></span><br><span class="line"><span class="ruby">        - minion-tomcat</span></span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 hosts]# salt 'minion01' grains.item roles</span><br><span class="line">minion01:</span><br><span class="line">    -<span class="ruby">---------</span></span><br><span class="line"><span class="ruby">    <span class="symbol">roles:</span></span></span><br><span class="line"><span class="ruby">        - minion-server</span></span><br><span class="line"><span class="ruby">[root@master01 hosts]<span class="comment"># salt 'minion01' grains.item Soft</span></span></span><br><span class="line"><span class="ruby"><span class="symbol">minion01:</span></span></span><br><span class="line"><span class="ruby">    ----------</span></span><br><span class="line"><span class="ruby">    <span class="symbol">Soft:</span></span></span><br><span class="line"><span class="ruby">        - Tomcat</span></span><br><span class="line"><span class="ruby">        - Spring Boot</span></span><br><span class="line"><span class="ruby">[root@master01 hosts]<span class="comment"># salt 'minion01' grains.item Server_business</span></span></span><br><span class="line"><span class="ruby"><span class="symbol">minion01:</span></span></span><br><span class="line"><span class="ruby">    ----------</span></span><br><span class="line"><span class="ruby">    <span class="symbol">Server_business:</span></span></span><br><span class="line"><span class="ruby">        Java, Web Site</span></span><br></pre></td></tr></table></figure><blockquote><p>注意：<br>如果 <code>minion</code> 配置文件开着 <code>roles</code>，这里的 <code>roles</code> 名字就不能开着，否则会冲突<br>我们可以换个名字<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root@minion01 salt]<span class="meta"># vim /etc/salt/grains</span></span><br><span class="line"><span class="symbol">restful:</span></span><br><span class="line">  - minion-springboot</span><br><span class="line"><span class="symbol">web:</span></span><br><span class="line">  - minion-tomcat</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>在 master 端执行<br><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]<span class="meta"># salt <span class="string">'*'</span> grains.item roles</span></span><br><span class="line"><span class="symbol">dbfw01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    roles:</span></span><br><span class="line"><span class="symbol">minion01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    roles:</span></span><br><span class="line">        - minion-server</span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="meta"># salt <span class="string">'*'</span> grains.item restful</span></span><br><span class="line"><span class="symbol">dbfw01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    restful:</span></span><br><span class="line"><span class="symbol">minion01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    restful:</span></span><br><span class="line">        - minion-springboot</span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="meta"># salt <span class="string">'*'</span> grains.item web</span></span><br><span class="line"><span class="symbol">dbfw01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    web:</span></span><br><span class="line"><span class="symbol">minion01:</span></span><br><span class="line">    ----------</span><br><span class="line"><span class="symbol">    web:</span></span><br><span class="line">        - minion-tomcat</span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="meta"># salt -G web:minion-tomcat cmd.run <span class="string">'w'</span></span></span><br><span class="line"><span class="symbol">minion01:</span></span><br><span class="line">     <span class="number">01</span>:<span class="number">22</span>:<span class="number">54</span> up <span class="number">27</span> days,  <span class="number">4</span>:<span class="number">23</span>,  <span class="number">1</span> user,  load average: <span class="number">0.00</span>, <span class="number">0.02</span>, <span class="number">0.05</span></span><br><span class="line">    USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class="line">    luming   pts/<span class="number">0</span>    <span class="number">192.168</span><span class="number">.35</span><span class="number">.219</span>   <span class="number">00</span>:<span class="number">50</span>    <span class="number">1</span>:<span class="number">18</span>   <span class="number">0.10</span>s  <span class="number">0.00</span>s sshd: luming [priv]</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="在-topfile-里匹配-Minion"><a href="#在-topfile-里匹配-Minion" class="headerlink" title="在 topfile 里匹配 Minion"></a>在 topfile 里匹配 Minion</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@master01</span> <span class="string">salt]#</span> <span class="string">vim</span> <span class="string">nginx.sls</span></span><br><span class="line"><span class="attr">nginx-install:</span></span><br><span class="line">  <span class="string">pkg.installed:</span></span><br><span class="line"><span class="attr">    - names:</span></span><br><span class="line"><span class="bullet">      -</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="attr">nginx:</span></span><br><span class="line">  <span class="string">service.running:</span></span><br><span class="line"><span class="attr">    - enable:</span> <span class="literal">True</span></span><br><span class="line"><span class="attr">    - reload:</span> <span class="literal">True</span></span><br></pre></td></tr></table></figure><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># vim /srv/salt/top.sls</span></span><br><span class="line">base:</span><br><span class="line">  <span class="string">'roles:minion-server'</span>:</span><br><span class="line">  <span class="meta"># <span class="string">'restful:minion-springboot'</span>:</span></span><br><span class="line">  <span class="meta"># <span class="string">'web:minion-tomcat'</span>:</span></span><br><span class="line">    - match: grain</span><br><span class="line">    - nginx</span><br><span class="line"></span><br><span class="line">[root<span class="symbol">@master01</span> salt]<span class="meta"># salt <span class="string">'*'</span> state.highstate</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-数据系统-Grains&quot;&gt;&lt;a href=&quot;#SaltStack-数据系统-Grains&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 数据系统 Grains&quot;&gt;&lt;/a&gt;SaltStack 数据系统 Grains&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 数据系统 Grains" scheme="http://www.gmlyo.com/tags/SaltStack-%E6%95%B0%E6%8D%AE%E7%B3%BB%E7%BB%9F-Grains/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack 基本架构</title>
    <link href="http://www.gmlyo.com/2018/09/04/SaltStack-%E5%9F%BA%E6%9C%AC%E6%9E%B6%E6%9E%84/"/>
    <id>http://www.gmlyo.com/2018/09/04/SaltStack-基本架构/</id>
    <published>2018-09-04T13:35:33.000Z</published>
    <updated>2018-09-05T05:21:52.815Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-基本架构"><a href="#SaltStack-基本架构" class="headerlink" title="SaltStack 基本架构"></a>SaltStack 基本架构</h1><a id="more"></a><p>SaltStack 是一种基于 C/S 架构的服务模式。<br>在 SaltStack 架构中服务端叫作 Master，客户端叫作 Minion。<br>客户端发送请求给服务端，服务端接收到请求并且处理完成后再返回给客户端。</p><p>在 Master 和 Minion 端都是以守护进程的模式运行，一直监听配置文件里面定义的 ret_port（接受 minion 请求）和 publish_port（发布消息）的端口。当 Minion 运行时会自动连接到配置文件里面定义的 Master 地址 ret_port 端口进行连接认证。默认客户端请求 id 是 socket.getfqdn() 取到的值，也可以在 Minion 启动之前修改 Minion 的 id 值。关于整个启动通信过程，可以使用 debug 查看详细记录。</p><blockquote><p>Master端<br><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">salt-<span class="keyword">master</span> <span class="title">-l</span> debug</span><br><span class="line">ss -a | egrep '<span class="number">4505</span>|<span class="number">4506</span>'</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Minion端<br><figure class="highlight d"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">salt-minion -l <span class="keyword">debug</span></span><br></pre></td></tr></table></figure></p></blockquote><h2 id="4505-publish-port"><a href="#4505-publish-port" class="headerlink" title="4505(publish_port)"></a>4505(publish_port)</h2><blockquote><p>为 salt 的消息发布专用端口<br>为 Salt Master pub 接口，提供远程执行命令发送功能</p></blockquote><h2 id="4506-ret-port"><a href="#4506-ret-port" class="headerlink" title="4506(ret_port)"></a>4506(ret_port)</h2><blockquote><p>为客户端与服务端通信的端口。监控此端口可以监控哪些 minion 收到的消息，并回复了结果<br>为 Salt Master Ret 接口，支持认证(auth)，文件服务，结果收集等功能<br>要确保 客户端 能跟 服务端 的这 2 个端口通信，需要保证防火墙对于这两个端口是放开的</p></blockquote><p>Salt 架构中最主要的角色是 Salt master 和 Salt minion<br>另外一种角色是 syndic<br>顾名思义<br>master 是中心控制系统<br>minion 是被管理的客户端</p><h2 id="Salt-部署架构可以分为三种"><a href="#Salt-部署架构可以分为三种" class="headerlink" title="Salt 部署架构可以分为三种"></a>Salt 部署架构可以分为三种</h2><h3 id="第一种：master-gt-minion"><a href="#第一种：master-gt-minion" class="headerlink" title="第一种：master -&gt; minion"></a>第一种：master -&gt; minion</h3><p>这种架构中 master 和所有 minion 都直接连接，minion 接收来自 master 的指令，完成命令执行或配置管理</p><p><img src="http://pa2bdkuiw.bkt.clouddn.com/master_minion.png" alt="master_minion.png"></p><h3 id="第二种：master-gt-syndic-gt-minion"><a href="#第二种：master-gt-syndic-gt-minion" class="headerlink" title="第二种：master -&gt; syndic -&gt; minion"></a>第二种：master -&gt; syndic -&gt; minion</h3><p>这种架构中 master 通过 syndic 对 minion 进行管理，同时该架构可以进行多级扩展</p><p><img src="http://pa2bdkuiw.bkt.clouddn.com/master_syndic_minion.png" alt="master_syndic_minion.png"></p><h3 id="第三种：无-master-的-minion"><a href="#第三种：无-master-的-minion" class="headerlink" title="第三种：无 master 的 minion"></a>第三种：无 master 的 minion</h3><p>Masterless 架构，就不需要单独安装一台 SaltStack Master 机器，只需要在每台机器上安装 Minion，然后采用本机只负责对本机的配置管理工作机制服务模式。<br>这种架构中 minion 不受任何 master 控制，通过本地运行即可完成相关功能</p><p><img src="http://pa2bdkuiw.bkt.clouddn.com/minion.png" alt="minion.png"></p><p>Salt 的两个主要设计理念是 远程执行 和 配置管理。<br>Salt 中的 配置管理系统 可以称作 state，也是基于远程执行系统之上，通过 master 的定义可以让对应的 minion 达到想要的系统状态。</p><h2 id="SaltStack-软件依赖"><a href="#SaltStack-软件依赖" class="headerlink" title="SaltStack 软件依赖"></a>SaltStack 软件依赖</h2><p>SaltStack 有两种消息系统，一种是 RAET，另一种是 ZeroMQ，默认使用 ZeroMQ。</p><table><thead><tr><th>组件名</th><th>注释</th></tr></thead><tbody><tr><td>msgpack-python</td><td>SaltStack 消息交换库</td></tr><tr><td>YAML</td><td>SaltStack 配置解析定义语法</td></tr><tr><td>Jinja2</td><td>SaltStack states 配置模板</td></tr><tr><td>MarkupSafe</td><td>Python unicode 转换库</td></tr><tr><td>apache-libcloud</td><td>SaltStack 对云架构编排库</td></tr><tr><td>Requests</td><td>HTTP Python 库</td></tr><tr><td>ZeroMQ</td><td>SaltStack 消息系统</td></tr><tr><td>pyzmq</td><td>ZeroMQ Python 库</td></tr><tr><td>PyCrypto</td><td>Python 密码库</td></tr><tr><td>M2Crypto</td><td>Openssl Python 包装库</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-基本架构&quot;&gt;&lt;a href=&quot;#SaltStack-基本架构&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 基本架构&quot;&gt;&lt;/a&gt;SaltStack 基本架构&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 基本架构" scheme="http://www.gmlyo.com/tags/SaltStack-%E5%9F%BA%E6%9C%AC%E6%9E%B6%E6%9E%84/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack 认证配置</title>
    <link href="http://www.gmlyo.com/2018/09/04/SaltStack-%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.gmlyo.com/2018/09/04/SaltStack-认证配置/</id>
    <published>2018-09-04T10:26:09.000Z</published>
    <updated>2018-09-08T18:17:59.910Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-认证配置"><a href="#SaltStack-认证配置" class="headerlink" title="SaltStack 认证配置"></a>SaltStack 认证配置</h1><a id="more"></a><h2 id="Salt-证书管理"><a href="#Salt-证书管理" class="headerlink" title="Salt 证书管理"></a>Salt 证书管理</h2><blockquote><p>SaltStack 使用 SSL 签发证书的方式进行安全认证。<br>在签发证书之前，可以在 Master 端看到 Minion 的证书签证请求。<br>Salt 和 minion 之间的认证关系是通过 salt-key 在 master 端管理的，生成证书记录在 <code>/etc/salt/pki/master/</code> 目录下</p></blockquote><h2 id="salt-minion-启动后生成秘钥文件"><a href="#salt-minion-启动后生成秘钥文件" class="headerlink" title="salt-minion 启动后生成秘钥文件"></a>salt-minion 启动后生成秘钥文件</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@minion01 ~]<span class="comment"># cd /etc/salt/pki/minion/</span></span><br><span class="line">[root@minion01 minion]<span class="comment"># ll -h</span></span><br><span class="line">-r--------<span class="number"> 1 </span>root root 1.7K Sep <span class="number"> 4 </span>16:19 minion.pem    <span class="comment"># 私钥文件</span></span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root <span class="number"> 451 </span>Sep <span class="number"> 4 </span>16:19 minion.pub    <span class="comment"># 公钥文件</span></span><br></pre></td></tr></table></figure><blockquote><p>然后 salt-minion 会把公钥发送给 salt-master</p></blockquote><h2 id="salt-master-启动后生成秘钥文件"><a href="#salt-master-启动后生成秘钥文件" class="headerlink" title="salt-master 启动后生成秘钥文件"></a>salt-master 启动后生成秘钥文件</h2><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 ~]<span class="comment"># cd /etc/salt/pki/master/</span></span><br><span class="line">[root@master01 master]<span class="comment"># ll -h</span></span><br><span class="line">total 8.0K</span><br><span class="line">-r--------<span class="number"> 1 </span>root root 1.7K Aug<span class="number"> 27 </span>09:03 master.pem    <span class="comment"># 私钥文件</span></span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root <span class="number"> 451 </span>Aug<span class="number"> 27 </span>09:03 master.pub    <span class="comment"># 公钥文件</span></span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root  <span class="number"> 23 </span>Sep <span class="number"> 5 </span>15:59 minions</span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root   <span class="number"> 6 </span>Aug<span class="number"> 27 </span>09:03 minions_autosign</span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root   <span class="number"> 6 </span>Aug<span class="number"> 27 </span>09:03 minions_denied</span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root   <span class="number"> 6 </span>Sep <span class="number"> 5 </span>15:49 minions_pre</span><br><span class="line">drwxr-xr-x<span class="number"> 2 </span>root root   <span class="number"> 6 </span>Aug<span class="number"> 27 </span>09:03 minions_rejected</span><br></pre></td></tr></table></figure><blockquote><p>授权前，在获取到 minion端后，公钥文件会存放在 minions_pre 目录下</p></blockquote><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 <span class="literal">master</span>]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── <span class="literal">master</span>.pem</span><br><span class="line">├── <span class="literal">master</span>.pub</span><br><span class="line">├── minions</span><br><span class="line">├── minions_autosign</span><br><span class="line">├── minions_denied</span><br><span class="line">├── minions_pre</span><br><span class="line">│   └── minion01    <span class="comment"># minion端的公钥文件</span></span><br><span class="line">└── minions_rejected</span><br></pre></td></tr></table></figure><blockquote><p>授权后，minion的公钥文件会被存放在 minions 目录下</p></blockquote><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 <span class="literal">master</span>]<span class="comment"># tree</span></span><br><span class="line">.</span><br><span class="line">├── <span class="literal">master</span>.pem</span><br><span class="line">├── <span class="literal">master</span>.pub</span><br><span class="line">├── minions</span><br><span class="line">│   └── minion01    <span class="comment"># minion端的公钥文件</span></span><br><span class="line">├── minions_autosign</span><br><span class="line">├── minions_denied</span><br><span class="line">├── minions_pre</span><br><span class="line">└── minions_rejected</span><br></pre></td></tr></table></figure><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">[root@master01 master]<span class="comment"># cd minions/</span></span><br><span class="line"></span><br><span class="line">[root@master01 minions]<span class="comment"># ll -h</span></span><br><span class="line">-rw-r--r-- <span class="number">1</span> root root <span class="number">451</span> Sep  <span class="number">5</span> <span class="number">15</span><span class="symbol">:</span><span class="number">46</span> minion01</span><br><span class="line"></span><br><span class="line">[root@master01 minions]<span class="comment"># file minion01</span></span><br><span class="line"><span class="symbol">minion01:</span> ASCII text</span><br><span class="line"></span><br><span class="line">[root@master01 minions]<span class="comment"># cat minion01</span></span><br><span class="line">-----<span class="keyword">BEGIN</span> PUBLIC KEY-----</span><br><span class="line">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0DP70JjbCaGB47qsTxn9</span><br><span class="line">I0M46rRv5HEUcEyaRBRehA+DvuZjjV1ud63WxrvMcRXq/M86EURVyjFDcNaZywi3</span><br><span class="line">SO2K70J+wWxD0HDCV0k8SFR/i83n7nPUVmy+PLlSO+ADl8aWogwUw2wZB4JxZ+OS</span><br><span class="line">gWfwvfFZ41yxIlS+Eteb5SkQtRp/OfZrVyEgY6xp4biURsKzP9kFNvOJHW27fcQ9</span><br><span class="line">/XI4JmX2aKYk4LJRVvudkkLzYBW1NeYRv0kMAVGpMm8SiAkIwi+<span class="number">7</span>CJnEWorqAmc<span class="number">0</span></span><br><span class="line">TNLGhtDyhV51cbG5Wbt/vbg6N/NX5BOmErXibEsh7679Wph0mJ1fq5jKjn1fYu/J</span><br><span class="line">rwIDAQAB</span><br><span class="line">-----<span class="keyword">END</span> PUBLIC KEY-----</span><br></pre></td></tr></table></figure><blockquote><p>minion 端也会保存一份 master的公钥</p></blockquote><figure class="highlight tap"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">[root@minion01 ~]<span class="comment"># cd /etc/salt/pki/minion/</span></span><br><span class="line">[root@minion01 minion]<span class="comment"># ll -h</span></span><br><span class="line">total 12K</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root <span class="number"> 451 </span>Sep <span class="number"> 4 </span>16:19 minion_master.pub    <span class="comment"># master端的公钥文件</span></span><br><span class="line">-r--------<span class="number"> 1 </span>root root 1.7K Sep <span class="number"> 4 </span>16:19 minion.pem</span><br><span class="line">-rw-r--r--<span class="number"> 1 </span>root root <span class="number"> 451 </span>Sep <span class="number"> 4 </span>16:19 minion.pub</span><br></pre></td></tr></table></figure><h2 id="salt-key-命令和参数"><a href="#salt-key-命令和参数" class="headerlink" title="salt-key 命令和参数"></a>salt-key 命令和参数</h2><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：salt-key 参数 [minion端ID(可以是IP，也可以是主机名) [-y]</span><br><span class="line">-<span class="ruby">h, --help   <span class="comment"># 帮助</span></span></span><br><span class="line"><span class="ruby">-y           <span class="comment"># 该参数可免去证书操作的交互（除非对 minion 端很信任，一般不建议使用）</span></span></span><br></pre></td></tr></table></figure><h3 id="显示所有-public-keys"><a href="#显示所有-public-keys" class="headerlink" title="显示所有 public keys"></a>显示所有 public keys</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span><span class="string">l</span> <span class="string">ARG,</span> <span class="bullet">--list=ARG</span>    <span class="comment"># 显示指定状态的 key（支持正则表达式）</span></span><br><span class="line"><span class="bullet">-</span><span class="string">L,</span> <span class="bullet">--list-all</span>        <span class="comment"># 列出当前所有认证，包括Accepted Keys、Denied Keys、Unaccepted Keys、Rejected Keys</span></span><br><span class="line"><span class="string">Accepted</span> <span class="attr">Keys:</span>        <span class="comment"># 已经接受的key</span></span><br><span class="line"><span class="string">Denied</span> <span class="attr">Keys:</span>          <span class="comment"># 未被允许的key</span></span><br><span class="line"><span class="string">Unaccepted</span> <span class="attr">Keys:</span>      <span class="comment"># 未被接受的key</span></span><br><span class="line"><span class="string">Rejected</span> <span class="attr">Keys:</span>        <span class="comment"># 被拒绝的key</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root@master01</span> <span class="string">~]#</span> <span class="string">salt-key</span> <span class="bullet">-L</span></span><br><span class="line"><span class="string">Accepted</span> <span class="attr">Keys:</span></span><br><span class="line"><span class="string">Denied</span> <span class="attr">Keys:</span></span><br><span class="line"><span class="string">Unaccepted</span> <span class="attr">Keys:</span></span><br><span class="line"><span class="string">minion01</span></span><br><span class="line"><span class="string">Rejected</span> <span class="attr">Keys:</span></span><br></pre></td></tr></table></figure><h3 id="接受等待认证的-key"><a href="#接受等待认证的-key" class="headerlink" title="接受等待认证的 key"></a>接受等待认证的 key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-a ACCEPT, --accept=ACCEPT    <span class="comment"># 接受指定等待认证的key（支持正则表达式）</span></span><br><span class="line">                              <span class="comment"># 添加某个或某些个未接受(Unaccepted Keys)认证</span></span><br><span class="line">-A, --accept-all              <span class="comment"># 接受所有等待认证的key(Unaccepted Keys)下所有的minion</span></span><br><span class="line">                              <span class="comment"># 添加所有未接受(Unaccepted Keys)认证</span></span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -a minion01</span></span><br><span class="line">The following keys are going to be accepted:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">minion01</span><br><span class="line">Proceed? [n/Y] y</span><br><span class="line">Key <span class="keyword">for</span> minion minion01 accepted.</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -A -y</span></span><br><span class="line">The following keys are going to be accepted:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">minion01</span><br><span class="line">Key <span class="keyword">for</span> minion minion01 accepted.</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -L</span></span><br><span class="line">Accepted Keys:</span><br><span class="line">minion01</span><br><span class="line">Denied Keys:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">Rejected Keys:</span><br></pre></td></tr></table></figure><h3 id="拒绝等待认证的-key"><a href="#拒绝等待认证的-key" class="headerlink" title="拒绝等待认证的 key"></a>拒绝等待认证的 key</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">r REJECT, --reject=REJECT    <span class="comment"># 拒绝指定等待认证的key（支持正则表达式）</span></span></span><br><span class="line"><span class="ruby">-R, --reject-all              <span class="comment"># 拒绝所有等待认证的key</span></span></span><br><span class="line"><span class="ruby">--<span class="keyword">include</span>-all                 <span class="comment"># 显示所有状态的key（包含non-pending状态）</span></span></span><br></pre></td></tr></table></figure><h3 id="打印-public-key"><a href="#打印-public-key" class="headerlink" title="打印 public key"></a>打印 public key</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-p PRINT, <span class="params">--print=PRINT</span>    <span class="comment"># 打印指定的 public key（支持正则表达式）</span></span><br><span class="line">-P, <span class="params">--print-all</span>            <span class="comment"># 打印所有的 public key</span></span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -p "minion01"</span></span><br><span class="line">Unaccepted Keys:</span><br><span class="line">minion01:  <span class="params">-----BEGIN</span> PUBLIC KEY<span class="params">-----</span></span><br><span class="line">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0DP70JjbCaGB47qsTxn9</span><br><span class="line">I0M46rRv5HEUcEyaRBRehA+DvuZjjV1ud63WxrvMcRXq/M86EURVyjFDcNaZywi3</span><br><span class="line">SO2K70J+wWxD0HDCV0k8SFR/i83n7nPUVmy+PLlSO+ADl8aWogwUw2wZB4JxZ+OS</span><br><span class="line">gWfwvfFZ41yxIlS+Eteb5SkQtRp/OfZrVyEgY6xp4biURsKzP9kFNvOJHW27fcQ9</span><br><span class="line"><span class="string">/XI4JmX2aKYk4LJRVvudkkLzYBW1NeYRv0kMAVGpMm8SiAkIwi</span>+7CJnEWorqAmc0</span><br><span class="line">TNLGhtDyhV51cbG5Wbt/vbg6N/NX5BOmErXibEsh7679Wph0mJ1fq5jKjn1fYu/J</span><br><span class="line">rwIDAQAB</span><br><span class="line"><span class="params">-----END</span> PUBLIC KEY<span class="params">-----</span></span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -P</span></span><br><span class="line">Unaccepted Keys:</span><br><span class="line">minion01:  <span class="params">-----BEGIN</span> PUBLIC KEY<span class="params">-----</span></span><br><span class="line">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0DP70JjbCaGB47qsTxn9</span><br><span class="line">I0M46rRv5HEUcEyaRBRehA+DvuZjjV1ud63WxrvMcRXq/M86EURVyjFDcNaZywi3</span><br><span class="line">SO2K70J+wWxD0HDCV0k8SFR/i83n7nPUVmy+PLlSO+ADl8aWogwUw2wZB4JxZ+OS</span><br><span class="line">gWfwvfFZ41yxIlS+Eteb5SkQtRp/OfZrVyEgY6xp4biURsKzP9kFNvOJHW27fcQ9</span><br><span class="line"><span class="string">/XI4JmX2aKYk4LJRVvudkkLzYBW1NeYRv0kMAVGpMm8SiAkIwi</span>+7CJnEWorqAmc0</span><br><span class="line">TNLGhtDyhV51cbG5Wbt/vbg6N/NX5BOmErXibEsh7679Wph0mJ1fq5jKjn1fYu/J</span><br><span class="line">rwIDAQAB</span><br><span class="line"><span class="params">-----END</span> PUBLIC KEY<span class="params">-----</span></span><br></pre></td></tr></table></figure><h3 id="删除已接受的-key"><a href="#删除已接受的-key" class="headerlink" title="删除已接受的 key"></a>删除已接受的 key</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-d <span class="keyword">DELETE</span>, --<span class="keyword">delete</span>=<span class="keyword">DELETE</span>   # 删除某个或某些个已接受(Accepted <span class="keyword">Keys</span>)认证</span><br><span class="line">-D, --<span class="keyword">delete</span>-<span class="keyword">all</span>             # 删除所有已接受(Accepted <span class="keyword">Keys</span>)认证</span><br><span class="line"></span><br><span class="line">[root@master01 ~]# salt-<span class="keyword">key</span> -d minion01 -y</span><br><span class="line">Deleting the following <span class="keyword">keys</span>:</span><br><span class="line">Accepted <span class="keyword">Keys</span>:</span><br><span class="line">minion01</span><br><span class="line"><span class="keyword">Key</span> <span class="keyword">for</span> minion minion01 deleted.</span><br></pre></td></tr></table></figure><h3 id="显示-key-的指纹信息"><a href="#显示-key-的指纹信息" class="headerlink" title="显示 key 的指纹信息"></a>显示 key 的指纹信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-f FINGER, --finger=FINGER  <span class="comment"># 显示指定 key 的指纹信息（正则表达式）</span></span><br><span class="line">-F, --finger-all            <span class="comment"># 显示所有 key 的指纹信息</span></span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -f "minion01"</span></span><br><span class="line">Unaccepted Keys:</span><br><span class="line">minion01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -F</span></span><br><span class="line">Local Keys:</span><br><span class="line">master.pem:  db:5a:f0:25:13:50:94:b9:e0:61:1d:b9:fe:bc:62:b6</span><br><span class="line">master.pub:  b9:bd:58:90:01:f2:61:7f:03:be:e1:51:f5:0b:4f:08</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">minion01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -f "minion01"</span></span><br><span class="line">Accepted Keys:</span><br><span class="line">minion01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br><span class="line"></span><br><span class="line">[root@master01 ~]<span class="comment"># salt-key -F</span></span><br><span class="line">Local Keys:</span><br><span class="line">master.pem:  db:5a:f0:25:13:50:94:b9:e0:61:1d:b9:fe:bc:62:b6</span><br><span class="line">master.pub:  b9:bd:58:90:01:f2:61:7f:03:be:e1:51:f5:0b:4f:08</span><br><span class="line">Accepted Keys:</span><br><span class="line">minion01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br></pre></td></tr></table></figure><h3 id="检测主机是否存活"><a href="#检测主机是否存活" class="headerlink" title="检测主机是否存活"></a>检测主机是否存活</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@master01</span> ~]<span class="meta"># salt <span class="string">'minion01'</span> test.ping</span></span><br><span class="line">minion01:</span><br><span class="line">    <span class="literal">True</span></span><br></pre></td></tr></table></figure><blockquote><p>我们发送一条消息给一个或所有的 minion，并告诉它们运行 salt 内置的一个模块中的一条命令（也可以说是模块中的一个函数）。该示例中，miniion 返回 true。这个命令能查询有哪些 minion 是存活的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-认证配置&quot;&gt;&lt;a href=&quot;#SaltStack-认证配置&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 认证配置&quot;&gt;&lt;/a&gt;SaltStack 认证配置&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 认证配置" scheme="http://www.gmlyo.com/tags/SaltStack-%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack 安装</title>
    <link href="http://www.gmlyo.com/2018/09/04/SaltStack-%E5%AE%89%E8%A3%85/"/>
    <id>http://www.gmlyo.com/2018/09/04/SaltStack-安装/</id>
    <published>2018-09-04T03:15:08.000Z</published>
    <updated>2018-09-04T09:01:08.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-安装"><a href="#SaltStack-安装" class="headerlink" title="SaltStack 安装"></a>SaltStack 安装</h1><a id="more"></a><h2 id="SaltStack-官网"><a href="#SaltStack-官网" class="headerlink" title="SaltStack 官网"></a>SaltStack 官网</h2><p>官网：<a href="https://repo.saltstack.com/#rhel" target="_blank" rel="noopener">https://repo.saltstack.com/#rhel</a><br>GitHub：<a href="https://github.com/saltstack/salt" target="_blank" rel="noopener">https://github.com/saltstack/salt</a></p><h2 id="最新版本-Pin-to-Latest-Release"><a href="#最新版本-Pin-to-Latest-Release" class="headerlink" title="最新版本(Pin to Latest Release)"></a>最新版本(Pin to Latest Release)</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Redhat/CentOS 7 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-latest-2.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 7 PY3</span></span><br><span class="line"><span class="meta"># Redhat Python3 支持要求先安装EPEL</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/py3/redhat/salt-py3-repo-latest-2.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 6 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-latest-2.el6.noarch.rpm</span></span><br></pre></td></tr></table></figure><h2 id="主版本-Pin-to-Major-Version"><a href="#主版本-Pin-to-Major-Version" class="headerlink" title="主版本(Pin to Major Version)"></a>主版本(Pin to Major Version)</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Redhat/CentOS 7 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-2018.3-1.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 7 PY3</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/py3/redhat/salt-py3-repo-2018.3-1.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 6 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-2018.3-1.el6.noarch.rpm</span></span><br></pre></td></tr></table></figure><h2 id="次版本-Pin-to-Minor-Release"><a href="#次版本-Pin-to-Minor-Release" class="headerlink" title="次版本(Pin to Minor Release)"></a>次版本(Pin to Minor Release)</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装指定 SaltStack yum仓库文件 和 key文件</span></span><br><span class="line">rpm --import <span class="symbol">https:</span>/<span class="regexp">/repo.saltstack.com/yum</span><span class="regexp">/redhat/</span><span class="number">6</span>/x86_64/archive/<span class="number">2018.3</span>.<span class="number">2</span>/SALTSTACK-GPG-KEY.pub</span><br><span class="line"></span><br><span class="line">cat /etc/yum.repos.d/saltstack.repo</span><br><span class="line">[saltstack-repo]</span><br><span class="line">name=SaltStack repo <span class="keyword">for</span> RHEL/CentOS <span class="variable">$releasever</span></span><br><span class="line">baseurl=<span class="symbol">https:</span>/<span class="regexp">/repo.saltstack.com/yum</span><span class="regexp">/redhat/</span><span class="variable">$releasever</span>/<span class="variable">$basearch</span>/archive/<span class="number">2018.3</span>.<span class="number">2</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=<span class="symbol">https:</span>/<span class="regexp">/repo.saltstack.com/yum</span><span class="regexp">/redhat/</span><span class="variable">$releasever</span>/<span class="variable">$basearch</span>/archive/<span class="number">2018.3</span>.<span class="number">2</span>/SALTSTACK-GPG-KEY.pub</span><br></pre></td></tr></table></figure><h2 id="安装-Salt-组件"><a href="#安装-Salt-组件" class="headerlink" title="安装 Salt 组件"></a>安装 Salt 组件</h2><blockquote><p>获取完以上的仓库源后，执行以下命令，开始安装</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum clean expire-<span class="keyword">cache</span></span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-<span class="keyword">master</span></span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-minion</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-ssh</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-syndic</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-cloud</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-api</span><br></pre></td></tr></table></figure><h2 id="启停-salt-master-服务"><a href="#启停-salt-master-服务" class="headerlink" title="启停 salt-master 服务"></a>启停 salt-master 服务</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> salt-<span class="literal">master</span></span><br><span class="line">systemctl -l status salt-<span class="literal">master</span></span><br><span class="line">systemctl enable salt-<span class="literal">master</span></span><br><span class="line">systemctl restart salt-<span class="literal">master</span></span><br><span class="line">systemctl <span class="literal">stop</span> salt-<span class="literal">master</span></span><br><span class="line">journalctl -fu salt-<span class="literal">master</span></span><br><span class="line">ps -ef | grep salt-<span class="literal">master</span></span><br></pre></td></tr></table></figure><h2 id="启停-salt-minion-服务"><a href="#启停-salt-minion-服务" class="headerlink" title="启停 salt-minion 服务"></a>启停 salt-minion 服务</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl -l <span class="keyword">status</span> <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl <span class="keyword">enable</span> <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl restart <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl <span class="keyword">stop</span> <span class="keyword">salt</span>-minion</span><br><span class="line">journalctl -fu <span class="keyword">salt</span>-minion</span><br><span class="line">ps -ef | grep <span class="keyword">salt</span>-minion</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-安装&quot;&gt;&lt;a href=&quot;#SaltStack-安装&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 安装&quot;&gt;&lt;/a&gt;SaltStack 安装&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 安装" scheme="http://www.gmlyo.com/tags/SaltStack-%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Python 可迭代对象与迭代器对象</title>
    <link href="http://www.gmlyo.com/2018/09/03/Python-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1%E4%B8%8E%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%AF%B9%E8%B1%A1/"/>
    <id>http://www.gmlyo.com/2018/09/03/Python-可迭代对象与迭代器对象/</id>
    <published>2018-09-03T10:07:27.000Z</published>
    <updated>2018-09-12T06:51:55.230Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-可迭代对象与迭代器对象"><a href="#Python-可迭代对象与迭代器对象" class="headerlink" title="Python 可迭代对象与迭代器对象"></a>Python 可迭代对象与迭代器对象</h1><a id="more"></a><h3 id="什么是迭代器？"><a href="#什么是迭代器？" class="headerlink" title="什么是迭代器？"></a>什么是迭代器？</h3><blockquote><p>迭代的工具<br>什么是迭代？<br>迭代是一个重复的过程，迭代不是单纯的重复，每一次重复都是基于上一次结果而进行的<br>单纯的重复，并不是迭代</p></blockquote><h3 id="为什么要用迭代器？"><a href="#为什么要用迭代器？" class="headerlink" title="为什么要用迭代器？"></a>为什么要用迭代器？</h3><blockquote><p>找到一种可以不依赖索引的迭代取值方式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; len(i):</span><br><span class="line">    print(l[i])</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>依赖于列表的的索引而进行的<br>索引的取值方式只适用于 字符串，列表，元组 的序列数据类型</p></blockquote><blockquote><p>针对没有索引的数据类型：字典，集合，文件<br>用迭代器，不依赖于索引</p></blockquote><h3 id="怎么用迭代器？"><a href="#怎么用迭代器？" class="headerlink" title="怎么用迭代器？"></a>怎么用迭代器？</h3><blockquote><p>可迭代对象<br>在 Python 中，凡是内置有 <code>__iter__</code> 方法对象，都是可迭代的对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">1.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下都是可迭代的对象</span></span><br><span class="line">c = <span class="string">'hello'</span></span><br><span class="line">l = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">t = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">d = &#123;<span class="string">'a'</span>: <span class="number">1</span>&#125;</span><br><span class="line">g = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">f = open(<span class="string">'aa.py'</span>, <span class="string">'rb'</span>)    <span class="comment"># 文件类型是迭代器对象</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>迭代器对象？<br>执行可迭代对象下 <code>__iter__</code> 方法得到的返回值是一个迭代器对象<br>迭代器对象是内置有 <code>__next__</code> 方法</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">iter_obj = l.__iter__()</span><br><span class="line">print(iter_obj)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;list_iterator object at <span class="number">0x00000252754AD080</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>如何拿到迭代器？<br>执行可迭代对象下的 <code>__iter__()</code> 方法，就能拿到迭代器对象</p></blockquote><blockquote><p>迭代器对象是内置有 <code>__next__</code> 方法<br>列表类型<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">iter_obj = l.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>字典类型<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>这种取值方式，不依赖于索引</p></blockquote><blockquote><p>迭代器拿到了以后，就可以想<br>可以把所有可迭代对象全都变成迭代器对象，然后再按照迭代器的方式，一点一点取值<br>就完全可以脱离索引对我们取值的一种限制<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br><span class="line">StopIteration    <span class="comment"># 结束信号</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>结束信号：<code>StopIteration</code>，一旦这个信号出现后，就应该知道，迭代器里的值已经被取完了<br>按照索引依次排开称为有序，有索引的类型，才是有序的（字符串，列表，元组）<br>字典是无序的，字典取值是按照 key取值的，和顺序没有关系</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vim aa.py</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">f4</span><span class="params">()</span>:</span></span><br><span class="line">                <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'aa.py'</span>, <span class="string">'rt'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">iter_obj = f.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__(), end=<span class="string">''</span>)</span><br><span class="line">print(iter_obj.__next__(), end=<span class="string">''</span>)</span><br><span class="line">print(iter_obj.__next__(), end=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><blockquote><p>对文件来说，特点是什么？<br>也能够按照迭代器的方式，把里面的值，一个个取出来<br>可以完全不依赖于索引，仍然能把一个数据类型里面的值，一次次取出来</p></blockquote><blockquote><p>把字典里的多个值取出来<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:   <span class="comment"># 检测有可能抛异常的代码块</span></span><br><span class="line">        print(iter_obj.__next__())</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure></p></blockquote><p><strong>总结</strong></p><blockquote><p>内置有 <code>__iter__</code> 方法的称为可迭代对象<br>内置同时有  <code>__iter__</code>，<code>__next__</code> 方法的称为迭代器对象</p></blockquote><h3 id="迭代器对象内置"><a href="#迭代器对象内置" class="headerlink" title="迭代器对象内置"></a>迭代器对象内置</h3><blockquote><p><code>__next__</code> 方法<br><code>__iter__</code> 方法，执行该方法得到仍然是迭代器本身</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 基于迭代器的迭代取值方式</span></span><br><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line">print(iter_obj.__iter__() <span class="keyword">is</span> iter_obj)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure><blockquote><p>迭代器对象一定是可迭代的对象<br>可迭代对象不一定是迭代器对象</p></blockquote><h3 id="for-循环的底层运行机制"><a href="#for-循环的底层运行机制" class="headerlink" title="for 循环的底层运行机制"></a>for 循环的底层运行机制</h3><blockquote><p>for循环可以称为迭代器循环</p><ol><li>执行 for 循环 先调用 <code>in</code> 后面那个对象的 <code>dic.__iter__()</code> 方法，拿到它的迭代器对象 <code>iter_obj = dic.__iter__()</code></li><li>执行迭代器对象的 <code>__next__</code> 方法，得到的返回值赋值 <code>in</code> 前面的变量名<code>k</code>，然后执行一次循环体代码 <code>print(k)</code></li><li>循环执行，直到取完迭代器内所有的值，自动捕捉 <code>StopIteration</code> 异常结束循环</li></ol></blockquote><blockquote><p>for 循环字典<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> dic:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>for 循环数字<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> x <span class="keyword">in</span> <span class="number">10</span>:</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">TypeError: <span class="string">'int'</span> object <span class="keyword">is</span> <span class="keyword">not</span> iterable</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>for 循环文件<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">'aa.py'</span>, <span class="string">'rt'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    print(line)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">f4</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>是否能区分出 <code>in</code> 后面跟的是迭代器对象还是可迭代对象，答：不能<br>只能区分出只要能被 <code>for循环</code> 循环的，都称为可迭代对象，并不能确定它是否是迭代器对象<br>迭代器对象最关键的方法是 <code>__next__</code> 方法，也内置了一个 <code>__iter__</code> 方法，为了和 <code>for循环</code> 的标准统一</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()    <span class="comment"># 迭代器对象 = dic.__iter__()</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> iter_obj:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure><blockquote><p>迭代器的优缺点<br>优点：</p><ol><li>提供了一种不依赖与索引的迭代取值方式</li><li>节省内存</li></ol><p>缺点：<br>值一次性取完，取完后无法再次取值，除非重新得到新的迭代器对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line"></span><br><span class="line">print(<span class="string">'第一次迭代iter_obj'</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> iter_obj:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'第二次迭代iter_obj'</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> iter_obj:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">第一次迭代iter_obj</span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br><span class="line">第二次迭代iter_obj</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>需求：两次都取到值<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line">print(<span class="string">'第一次迭代iter_obj'</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> iter_obj:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line">print(<span class="string">'第二次迭代iter_obj'</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> iter_obj:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">第一次迭代iter_obj</span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br><span class="line">第二次迭代iter_obj</span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line"></span><br><span class="line">print(<span class="string">'第一次迭代'</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> dic:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line">print(<span class="string">'第二次迭代'</span>)</span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> dic:</span><br><span class="line">    print(k)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">第一次迭代</span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br><span class="line">第二次迭代</span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure><blockquote><p>迭代器节省内存</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">'aa.py'</span>)</span><br><span class="line">print(f)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;_io.TextIOWrapper name=<span class="string">'aa.py'</span> mode=<span class="string">'r'</span> encoding=<span class="string">'cp936'</span>&gt;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">f = open(<span class="string">'aa.py'</span>)</span><br><span class="line">print(f.__next__())</span><br><span class="line">print(f.__next__())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><blockquote><p>谨慎使用<br><code>f.read()</code> 读取方式是一下子把文件内容全部读出，假设文件过大，就会把内存撑爆了<br><code>f.readlines()</code> 它也是一下子把文件内容全部读出<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">f = open()</span><br><span class="line"><span class="comment"># f.readline()    # 读文件内容最好使用 readline()，一次读一行</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 推荐读文件方式</span></span><br><span class="line"><span class="comment"># 即便文件非常大，也不会影响到内存（只不过for循环的次数会比较多）</span></span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    print(line)</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Python2 中 <code>range()</code> 获取的是一个列表类型<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>range(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">[<span class="number">1</span>, <span class="number">2</span>]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Python3 中 把 <code>range()</code> 做成了一个可迭代对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>range(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line">range(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj = range(<span class="number">1</span>, <span class="number">3</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj.__iter__</span><br><span class="line">&lt;method-wrapper <span class="string">'__iter__'</span> of range object at <span class="number">0x000002A00528B450</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj.__next__</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">'range'</span> object has no attribute <span class="string">'__next__'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj=range(<span class="number">1</span>, <span class="number">100000000000000000000000000000000000000000000000000000000</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj</span><br><span class="line">range(<span class="number">1</span>, <span class="number">100000000000000000000000000000000000000000000000000000000</span>)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>iter_obj = obj.__iter__()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(iter_obj)</span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(iter_obj)</span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>iter_obj.__next__()</span><br><span class="line"><span class="number">3</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>iter_obj.__next__()</span><br><span class="line"><span class="number">4</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Python3 中使用以下方式，不用担心卡死现象<br>Python2 中就有卡死的风险<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">1</span>, <span class="number">10000</span>):</span><br><span class="line">    print(i)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line">...省略...</span><br><span class="line"><span class="number">9999</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>缺点：<br>只能往后取，不能往前取，值一次性取完，值取完后无法再次取值，除非重新得到新的迭代器对象<br>无法预测迭代器的长度</p></blockquote><blockquote><p>Python2<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'a'</span>:<span class="number">1</span>, <span class="string">'b'</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.keys()</span><br><span class="line">[<span class="string">'a'</span>, <span class="string">'b'</span>]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>Python3 做了很多优化机制，在 Python2 中的列表数据类型，在 Python3 中都做成了 <code>可迭代对象</code><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>d = &#123;<span class="string">'a'</span>:<span class="number">1</span>, <span class="string">'b'</span>:<span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d</span><br><span class="line">&#123;<span class="string">'a'</span>: <span class="number">1</span>, <span class="string">'b'</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.__iter__</span><br><span class="line">&lt;method-wrapper <span class="string">'__iter__'</span> of dict object at <span class="number">0x0000019A9FD67828</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>d.__next__</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">'dict'</span> object has no attribute <span class="string">'__next__'</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj = d.keys()</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj</span><br><span class="line">dict_keys([<span class="string">'a'</span>, <span class="string">'b'</span>])</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj.__iter__</span><br><span class="line">&lt;method-wrapper <span class="string">'__iter__'</span> of dict_keys object at <span class="number">0x0000019A9FDAA528</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>obj.__next__</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">"&lt;stdin&gt;"</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">'dict_keys'</span> object has no attribute <span class="string">'__next__'</span></span><br></pre></td></tr></table></figure></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-可迭代对象与迭代器对象&quot;&gt;&lt;a href=&quot;#Python-可迭代对象与迭代器对象&quot; class=&quot;headerlink&quot; title=&quot;Python 可迭代对象与迭代器对象&quot;&gt;&lt;/a&gt;Python 可迭代对象与迭代器对象&lt;/h1&gt;
    
    </summary>
    
      <category term="Python笔记" scheme="http://www.gmlyo.com/categories/Python%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python 可迭代对象与迭代器对象" scheme="http://www.gmlyo.com/tags/Python-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1%E4%B8%8E%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Python 三元表达式、列表生成式、字典生成式</title>
    <link href="http://www.gmlyo.com/2018/09/03/Python-%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F-%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%BC%8F/"/>
    <id>http://www.gmlyo.com/2018/09/03/Python-三元表达式-列表生成式-字典生成式/</id>
    <published>2018-09-03T02:59:11.000Z</published>
    <updated>2018-09-12T07:32:10.430Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-三元表达式、列表生成式、字典生成式"><a href="#Python-三元表达式、列表生成式、字典生成式" class="headerlink" title="Python 三元表达式、列表生成式、字典生成式"></a>Python 三元表达式、列表生成式、字典生成式</h1><a id="more"></a><blockquote><p>都是为了写代码写的简介一点儿，不用它们有点问题都没有<br>这四个东西都是为了将多行代码写到一行去，而且还能兼顾一个简洁性的特点</p></blockquote><h2 id="三元表达式"><a href="#三元表达式" class="headerlink" title="三元表达式"></a>三元表达式</h2><blockquote><p>比较两个值最大值最小值的功能<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max2</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x &gt; y:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line">res = max2(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>三元表达式 其实就是想用一行把上面这些事情搞定</p></blockquote><p><strong>语法</strong></p><blockquote><p>条件成立时的返回值 if 条件 else 条件不成立时的返回值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = x <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> y</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><blockquote><p>条件算一元：<code>if x &gt; y</code><br>条件成立时返回的值算一元：<code>x</code><br>条件不成立时返回的值算一元：<code>else y</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = <span class="keyword">True</span> <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = <span class="keyword">True</span> <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure><h2 id="列表生成式（列表推导式）"><a href="#列表生成式（列表推导式）" class="headerlink" title="列表生成式（列表推导式）"></a>列表生成式（列表推导式）</h2><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    l.append(i)</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p><strong>语法</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[expression <span class="keyword">for</span> item1 <span class="keyword">in</span> iterable1 <span class="keyword">if</span> condition1</span><br><span class="line"><span class="keyword">for</span> item2 <span class="keyword">in</span> iterable2 <span class="keyword">if</span> condition2</span><br><span class="line">...</span><br><span class="line"><span class="keyword">for</span> itemN <span class="keyword">in</span> iterableN <span class="keyword">if</span> conditionN</span><br><span class="line">]</span><br><span class="line">类似于</span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> item1 <span class="keyword">in</span> iterable1:</span><br><span class="line">    <span class="keyword">for</span> item2 <span class="keyword">in</span> iterable2:</span><br><span class="line">        <span class="keyword">if</span> condition2</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">for</span> itemN <span class="keyword">in</span> iterableN:</span><br><span class="line">                <span class="keyword">if</span> conditionN:</span><br><span class="line">                    res.append(expression)</span><br></pre></td></tr></table></figure></p><blockquote><p>列表生成式示例<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">print(l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>获取从4 开始往后的值<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">3</span>:</span><br><span class="line">    l.append(i)</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> i &gt; <span class="number">3</span>]</span><br><span class="line">print(l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p><strong>小练习</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="keyword">if</span> name != <span class="string">'lisi'</span>:</span><br><span class="line">        l.append(name + <span class="string">'py'</span>)</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'zhangsanpy'</span>, <span class="string">'wangwupy'</span>, <span class="string">'zhaoliupy'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan_py'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu_py'</span>, <span class="string">'zhaoliu_py'</span>]</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="keyword">if</span> name.endswith(<span class="string">'sb'</span>):</span><br><span class="line">        l.append(name.upper())</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'ZHANGSAN_PY'</span>, <span class="string">'WANGWU_PY'</span>, <span class="string">'ZHAOLIU_PY'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan_py'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu_py'</span>, <span class="string">'zhaoliu_py'</span>]</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="keyword">if</span> name.endswith(<span class="string">'sb'</span>):</span><br><span class="line">        l.append(name.upper())</span><br><span class="line"></span><br><span class="line">names = l</span><br><span class="line">print(names)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'ZHANGSAN_PY'</span>, <span class="string">'WANGWU_PY'</span>, <span class="string">'ZHAOLIU_PY'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan_py'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu_py'</span>, <span class="string">'zhaoliu_py'</span>]</span><br><span class="line">names = [name.upper() <span class="keyword">for</span> name <span class="keyword">in</span> names <span class="keyword">if</span> name.endswith(<span class="string">'py'</span>)]</span><br><span class="line">print(names)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'ZHANGSAN_PY'</span>, <span class="string">'WANGWU_PY'</span>, <span class="string">'ZHAOLIU_PY'</span>]</span><br></pre></td></tr></table></figure><h3 id="列表生成式转换生成器表达式"><a href="#列表生成式转换生成器表达式" class="headerlink" title="列表生成式转换生成器表达式"></a>列表生成式转换生成器表达式</h3><blockquote><p>把列表推导式的 <code>[]</code> 换成 <code>()</code> 就是生成器表达式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">g = (i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line">print(g)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;generator object &lt;genexpr&gt; at <span class="number">0x000001719E5E3EB8</span>&gt;</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">g = (i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line">print(next(g))</span><br><span class="line">print(next(g))</span><br><span class="line">print(next(g))</span><br><span class="line">print(next(g))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><p><strong>示例</strong></p><blockquote><p>生一筐鸡蛋变成给你一只老母鸡，用的时候就下蛋，这也是生成器的特性<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>chicken = (<span class="string">'鸡蛋%s'</span> % <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chicken</span><br><span class="line">&lt;generator object &lt;genexpr&gt; at <span class="number">0x10143f200</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(chicken)</span><br><span class="line"><span class="string">'鸡蛋0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(chicken)    <span class="comment"># 因 chicken 可迭代，因而可以转成列表</span></span><br><span class="line">[<span class="string">'鸡蛋1'</span>, <span class="string">'鸡蛋2'</span>, <span class="string">'鸡蛋3'</span>, <span class="string">'鸡蛋4'</span>,]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>优点：省内存，一次只产生一个值在内存中</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">chicken = (<span class="string">'egg%s'</span> % <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>))</span><br><span class="line">print(next(chicken))</span><br><span class="line">print(next(chicken))</span><br><span class="line">print(next(chicken))</span><br><span class="line">print(next(chicken))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">egg0</span><br><span class="line">egg1</span><br><span class="line">egg2</span><br><span class="line">StopIteration</span><br></pre></td></tr></table></figure><h2 id="字典生成式"><a href="#字典生成式" class="headerlink" title="字典生成式"></a>字典生成式</h2><blockquote><p>集合生成式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> i &gt; <span class="number">3</span>&#125;</span><br><span class="line">print(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>把符号 <code>[]</code> 换成 <code>{}</code> 就是字典表达式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;i:i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> i &gt; <span class="number">3</span>&#125;</span><br><span class="line">print(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="number">4</span>: <span class="number">4</span>, <span class="number">5</span>: <span class="number">5</span>, <span class="number">6</span>: <span class="number">6</span>, <span class="number">7</span>: <span class="number">7</span>, <span class="number">8</span>: <span class="number">8</span>, <span class="number">9</span>: <span class="number">9</span>&#125;</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">userinfo = [(<span class="string">'egon'</span>, <span class="string">'123'</span>), (<span class="string">'alex'</span>. <span class="string">'456'</span>), (<span class="string">'wxx'</span>, <span class="string">'679'</span>)]</span><br><span class="line">dic = &#123;k: v <span class="keyword">for</span> k, v <span class="keyword">in</span> userinfo&#125;</span><br><span class="line">print(dic)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'egon'</span>: <span class="string">'123'</span>, <span class="string">'alex'</span>, <span class="string">'456'</span>, <span class="string">'wxx'</span>: <span class="string">'679'</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>小练习</strong></p><blockquote><p>将列表转换成字典</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'name'</span>, <span class="string">'egon'</span>]</span><br><span class="line">(<span class="string">'age'</span>, <span class="number">18</span>)</span><br><span class="line">[<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    print(item[<span class="number">0</span>], item[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">name egon</span><br><span class="line">age <span class="number">18</span></span><br><span class="line">sex male</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    d[item[<span class="number">0</span>]] = item[<span class="number">1</span>]</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'egon'</span>, <span class="string">'age'</span>: <span class="number">18</span>, <span class="string">'sex'</span>: <span class="string">'male'</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;item[<span class="number">0</span>]: item[<span class="number">1</span>] <span class="keyword">for</span> item <span class="keyword">in</span> info&#125;</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'egon'</span>, <span class="string">'age'</span>: <span class="number">18</span>, <span class="string">'sex'</span>: <span class="string">'male'</span>&#125;</span><br></pre></td></tr></table></figure><blockquote><p>把 key 变成大写</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'egon'</span>,</span><br><span class="line">    <span class="string">'age'</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">'sex'</span>: <span class="string">'male'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d = &#123;k.upper():v <span class="keyword">for</span> k,v <span class="keyword">in</span> d.items()&#125;</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'NAME'</span>: <span class="string">'egon'</span>, <span class="string">'AGE'</span>: <span class="number">18</span>, <span class="string">'SEX'</span>: <span class="string">'male'</span>&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-三元表达式、列表生成式、字典生成式&quot;&gt;&lt;a href=&quot;#Python-三元表达式、列表生成式、字典生成式&quot; class=&quot;headerlink&quot; title=&quot;Python 三元表达式、列表生成式、字典生成式&quot;&gt;&lt;/a&gt;Python 三元表达式、列表生成式、字典生成式&lt;/h1&gt;
    
    </summary>
    
      <category term="Python笔记" scheme="http://www.gmlyo.com/categories/Python%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python 三元表达式、列表生成式、字典生成式" scheme="http://www.gmlyo.com/tags/Python-%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%81%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F%E3%80%81%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Docker 资源汇总</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-资源汇总/</id>
    <published>2018-09-01T10:26:21.000Z</published>
    <updated>2018-09-01T10:31:28.442Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-资源汇总"><a href="#Docker-资源汇总" class="headerlink" title="Docker 资源汇总"></a>Docker 资源汇总</h1><a id="more"></a><h3 id="Docker官方英文资源"><a href="#Docker官方英文资源" class="headerlink" title="Docker官方英文资源"></a>Docker官方英文资源</h3><p>Docker官网：<a href="http://www.docker.com/" target="_blank" rel="noopener">http://www.docker.com</a><br>Docker windows入门：<a href="https://docs.docker.com/windows/" target="_blank" rel="noopener">https://docs.docker.com/windows/</a><br>Docker Linux 入门：<a href="https://docs.docker.com/linux/" target="_blank" rel="noopener">https://docs.docker.com/linux/</a><br>Docker mac 入门：<a href="https://docs.docker.com/mac/" target="_blank" rel="noopener">https://docs.docker.com/mac/</a><br>Docker 用户指引：<a href="https://docs.docker.com/engine/userguide/" target="_blank" rel="noopener">https://docs.docker.com/engine/userguide/</a><br>Docker 官方博客：<a href="http://blog.docker.com/" target="_blank" rel="noopener">http://blog.docker.com/</a><br>Docker Hub: <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a><br>Docker开源： <a href="https://www.docker.com/open-source" target="_blank" rel="noopener">https://www.docker.com/open-source</a></p><h3 id="Docker中文资源"><a href="#Docker中文资源" class="headerlink" title="Docker中文资源"></a>Docker中文资源</h3><p>Docker中文网站：<a href="https://www.docker-cn.com/" target="_blank" rel="noopener">https://www.docker-cn.com/</a><br>Docker安装手册：<a href="https://docs.docker-cn.com/engine/installation/" target="_blank" rel="noopener">https://docs.docker-cn.com/engine/installation/</a></p><h3 id="Docker-国内镜像"><a href="#Docker-国内镜像" class="headerlink" title="Docker 国内镜像"></a>Docker 国内镜像</h3><p>网易加速器：<a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a><br>官方中国加速器：<a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a><br>ustc的镜像：<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a><br>daocloud：<a href="https://www.daocloud.io/mirror#accelerator-doc（注册后使用）" target="_blank" rel="noopener">https://www.daocloud.io/mirror#accelerator-doc（注册后使用）</a></p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-resources.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-resources.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-资源汇总&quot;&gt;&lt;a href=&quot;#Docker-资源汇总&quot; class=&quot;headerlink&quot; title=&quot;Docker 资源汇总&quot;&gt;&lt;/a&gt;Docker 资源汇总&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker 资源汇总" scheme="http://www.gmlyo.com/tags/Docker-%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>Docker tag 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-tag-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-tag-命令/</id>
    <published>2018-09-01T09:58:14.000Z</published>
    <updated>2018-09-01T09:58:46.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-tag-命令"><a href="#Docker-tag-命令" class="headerlink" title="Docker tag 命令"></a>Docker tag 命令</h1><a id="more"></a><p><strong>docker tag :</strong> 标记本地镜像，将其归入某一仓库。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag [<span class="string">OPTIONS</span>] IMAGE[<span class="string">:TAG</span>] [<span class="string">REGISTRYHOST/</span>][<span class="symbol">USERNAME/</span>]NAME[:TAG]</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将镜像 ubuntu:15.10 标记为 runoob/ubuntu:v3 镜像。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhsot ~] docker <span class="keyword">tag</span> <span class="title">ubuntu</span>:<span class="number">15.10</span> runoob/ubuntu:v3</span><br><span class="line">[root@localhsot ~] docker images runoob/ubuntu:v3</span><br><span class="line">REPOSITORY          <span class="keyword">TAG</span>                 <span class="title">IMAGE</span> ID            CREATED             SIZE</span><br><span class="line">runoob/ubuntu       v3                  <span class="number">4</span>e3b13c8a266        <span class="number">3</span> months ago        <span class="number">136.3</span> MB</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-tag-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-tag-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-tag-命令&quot;&gt;&lt;a href=&quot;#Docker-tag-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker tag 命令&quot;&gt;&lt;/a&gt;Docker tag 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker tag 命令" scheme="http://www.gmlyo.com/tags/Docker-tag-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker search 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-search-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-search-命令/</id>
    <published>2018-09-01T09:56:02.000Z</published>
    <updated>2018-09-01T09:56:24.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-search-命令"><a href="#Docker-search-命令" class="headerlink" title="Docker search 命令"></a>Docker search 命令</h1><a id="more"></a><p><strong>docker search :</strong> 从 Docker Hub 查找镜像</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search <span class="string">[OPTIONS]</span> TERM</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>–automated :</strong> 只列出 automated build 类型的镜像；</li><li><strong>–no-trunc :</strong> 显示完整的镜像描述；</li><li><strong>-s :</strong> 列出收藏数不小于指定值的镜像。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>从 Docker Hub 查找所有镜像名包含 java，并且收藏数大于 10 的镜像</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] docker search -s <span class="number">10</span> java</span><br><span class="line">NAME                  DESCRIPTION                           STARS   OFFICIAL   AUTOMATED</span><br><span class="line">java                  Java is a concurrent, class-based...   <span class="number">1037</span>    [OK]       </span><br><span class="line">anapsix/alpine-java   Oracle Java <span class="number">8</span> (and <span class="number">7</span>) with GLIBC ...   <span class="number">115</span>                [OK]</span><br><span class="line">develar/java                                                 <span class="number">46</span>                 [OK]</span><br><span class="line">isuper/java-oracle    This repository contains all java...   <span class="number">38</span>                 [OK]</span><br><span class="line">lwieske/java<span class="number">-8</span>        Oracle Java <span class="number">8</span> Container - Full + ...   <span class="number">27</span>                 [OK]</span><br><span class="line">nimmis/java-centos    This is docker images of CentOS <span class="number">7.</span>..   <span class="number">13</span>                 [OK]</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-search-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-search-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-search-命令&quot;&gt;&lt;a href=&quot;#Docker-search-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker search 命令&quot;&gt;&lt;/a&gt;Docker search 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker search 命令" scheme="http://www.gmlyo.com/tags/Docker-search-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker push 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-push-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-push-命令/</id>
    <published>2018-09-01T09:54:02.000Z</published>
    <updated>2018-09-01T09:54:24.363Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-push-命令"><a href="#Docker-push-命令" class="headerlink" title="Docker push 命令"></a>Docker push 命令</h1><a id="more"></a><p><strong>docker push :</strong> 将本地的镜像上传到镜像仓库，要先登陆到镜像仓库。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push <span class="string">[OPTIONS]</span> NAME<span class="string">[:TAG]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>–disable-content-trust :</strong> 忽略镜像的校验，默认开启。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>上传本地镜像 <code>myapache:v1</code> 到镜像仓库中。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">push </span>myapache:<span class="built_in">v1</span></span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-push-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-push-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-push-命令&quot;&gt;&lt;a href=&quot;#Docker-push-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker push 命令&quot;&gt;&lt;/a&gt;Docker push 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker push 命令" scheme="http://www.gmlyo.com/tags/Docker-push-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker pull 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-pull-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-pull-命令/</id>
    <published>2018-09-01T09:52:02.000Z</published>
    <updated>2018-09-01T09:52:51.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-pull-命令"><a href="#Docker-pull-命令" class="headerlink" title="Docker pull 命令"></a>Docker pull 命令</h1><a id="more"></a><p><strong>docker pull :</strong> 从镜像仓库中拉取或者更新指定镜像</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull [OPTIONS] NAME[<span class="symbol">:TAG|</span><span class="variable">@DIGEST</span>]</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-a :</strong> 拉取所有 tagged 镜像</li><li><strong>–disable-content-trust :</strong> 忽略镜像的校验，默认开启</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>从 Docker Hub 下载 java 最新版镜像。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker pull java</span></span><br></pre></td></tr></table></figure><p>从 Docker Hub 下载 REPOSITORY 为 java 的所有镜像。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull -<span class="selector-tag">a</span> java</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-pull-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-pull-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-pull-命令&quot;&gt;&lt;a href=&quot;#Docker-pull-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker pull 命令&quot;&gt;&lt;/a&gt;Docker pull 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker pull 命令" scheme="http://www.gmlyo.com/tags/Docker-pull-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker version 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-version-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-version-命令/</id>
    <published>2018-09-01T09:49:02.000Z</published>
    <updated>2018-09-01T09:49:24.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-version-命令"><a href="#Docker-version-命令" class="headerlink" title="Docker version 命令"></a>Docker version 命令</h1><a id="more"></a><p><strong>docker version :</strong> 显示 Docker 版本信息。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version <span class="string">[OPTIONS]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-f :</strong> 指定返回值的模板文件。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>显示 Docker 版本信息。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">version</span></span><br><span class="line"><span class="attr">Client:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.2</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">0</span><span class="string">a8c2e3</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Sep</span> <span class="number">10</span> <span class="number">19</span><span class="string">:19:00</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Server:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.2</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">0</span><span class="string">a8c2e3</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Sep</span> <span class="number">10</span> <span class="number">19</span><span class="string">:19:00</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-version-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-version-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-version-命令&quot;&gt;&lt;a href=&quot;#Docker-version-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker version 命令&quot;&gt;&lt;/a&gt;Docker version 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker version 命令" scheme="http://www.gmlyo.com/tags/Docker-version-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker info 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-info-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-info-命令/</id>
    <published>2018-09-01T09:45:51.000Z</published>
    <updated>2018-09-01T09:46:29.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-info-命令"><a href="#Docker-info-命令" class="headerlink" title="Docker info 命令"></a>Docker info 命令</h1><a id="more"></a><p><strong>docker info :</strong> 显示 Docker 系统信息，包括镜像和容器数。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> <span class="literal">info</span> [OPTIONS]</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查看 docker 系统信息。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br><span class="line"><span class="string">Containers:</span> <span class="number">12</span></span><br><span class="line"><span class="string">Images:</span> <span class="number">41</span></span><br><span class="line">Storage <span class="string">Driver:</span> aufs</span><br><span class="line"> Root <span class="string">Dir:</span> <span class="regexp">/var/</span>lib<span class="regexp">/docker/</span>aufs</span><br><span class="line"> Backing <span class="string">Filesystem:</span> extfs</span><br><span class="line"><span class="symbol"> Dirs:</span> <span class="number">66</span></span><br><span class="line"> Dirperm1 <span class="string">Supported:</span> <span class="literal">false</span></span><br><span class="line">Execution <span class="string">Driver:</span> native<span class="number">-0.2</span></span><br><span class="line">Logging <span class="string">Driver:</span> json-file</span><br><span class="line">Kernel <span class="string">Version:</span> <span class="number">3.13</span><span class="number">.0</span><span class="number">-32</span>-generic</span><br><span class="line">Operating <span class="string">System:</span> Ubuntu <span class="number">14.04</span><span class="number">.1</span> LTS</span><br><span class="line"><span class="string">CPUs:</span> <span class="number">1</span></span><br><span class="line">Total <span class="string">Memory:</span> <span class="number">1.954</span> GiB</span><br><span class="line"><span class="string">Name:</span> iZ23mtq8bs1Z</span><br><span class="line"><span class="string">ID:</span> <span class="string">M5N4:</span><span class="string">K6WN:</span><span class="string">PUNC:</span><span class="number">73</span><span class="string">ZN:</span><span class="string">AONJ:</span><span class="string">AUHL:</span><span class="string">KSYH:</span><span class="number">2</span><span class="string">JPI:</span><span class="string">CH3K:</span><span class="string">O4MK:</span><span class="number">6</span><span class="string">OCX:</span><span class="number">5</span>OYW</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-info-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-info-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-info-命令&quot;&gt;&lt;a href=&quot;#Docker-info-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker info 命令&quot;&gt;&lt;/a&gt;Docker info 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker info 命令" scheme="http://www.gmlyo.com/tags/Docker-info-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
