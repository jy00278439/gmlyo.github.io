<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>G加菲</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.gmlyo.com/"/>
  <updated>2018-09-04T12:08:15.788Z</updated>
  <id>http://www.gmlyo.com/</id>
  
  <author>
    <name>G加菲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>SaltStack 认证配置</title>
    <link href="http://www.gmlyo.com/2018/09/04/SaltStack-%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.gmlyo.com/2018/09/04/SaltStack-认证配置/</id>
    <published>2018-09-04T10:26:09.000Z</published>
    <updated>2018-09-04T12:08:15.788Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-认证配置"><a href="#SaltStack-认证配置" class="headerlink" title="SaltStack 认证配置"></a>SaltStack 认证配置</h1><a id="more"></a><h2 id="Salt-证书管理"><a href="#Salt-证书管理" class="headerlink" title="Salt 证书管理"></a>Salt 证书管理</h2><blockquote><p>SaltStack 使用 SSL 签发证书的方式进行安全认证。<br>在签发证书之前，可以在 Master 端看到 Minion 的证书签证请求。<br>Salt 和 minion 之间的认证关系是通过 salt-key 在 master 端管理的，生成证书记录在 <code>/etc/salt/pki/master/</code> 目录下</p></blockquote><h2 id="salt-key-命令和参数"><a href="#salt-key-命令和参数" class="headerlink" title="salt-key 命令和参数"></a>salt-key 命令和参数</h2><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">格式：salt-<span class="built_in">key</span> 参数 [minion端ID(可以是IP，也可以是主机名) [-y]</span><br><span class="line">salt-<span class="built_in">key</span> -h  <span class="meta"># 帮助</span></span><br><span class="line">-y           <span class="meta"># 该参数可免去证书操作的交互（除非对 minion 端很信任，一般不建议使用）</span></span><br></pre></td></tr></table></figure><h3 id="显示所有-public-keys"><a href="#显示所有-public-keys" class="headerlink" title="显示所有 public keys"></a>显示所有 public keys</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="bullet">-</span><span class="string">l</span> <span class="string">ARG,</span> <span class="bullet">--list=ARG</span>    <span class="comment"># 显示指定状态的 key（支持正则表达式）</span></span><br><span class="line"><span class="bullet">-</span><span class="string">L,</span> <span class="bullet">--list-all</span>        <span class="comment"># 列出当前所有认证，包括Accepted Keys、Denied Keys、Unaccepted Keys、Rejected Keys</span></span><br><span class="line"><span class="string">Accepted</span> <span class="attr">Keys:</span>        <span class="comment"># 已经接受的key</span></span><br><span class="line"><span class="string">Denied</span> <span class="attr">Keys:</span>          <span class="comment"># 未被允许的key</span></span><br><span class="line"><span class="string">Unaccepted</span> <span class="attr">Keys:</span>      <span class="comment"># 未被接受的key</span></span><br><span class="line"><span class="string">Rejected</span> <span class="attr">Keys:</span>        <span class="comment"># 被拒绝的key</span></span><br><span class="line"></span><br><span class="line"><span class="string">[root@saltmaster</span> <span class="string">~]#</span> <span class="string">salt-key</span> <span class="bullet">-L</span></span><br><span class="line"><span class="string">Accepted</span> <span class="attr">Keys:</span></span><br><span class="line"><span class="string">Denied</span> <span class="attr">Keys:</span></span><br><span class="line"><span class="string">Unaccepted</span> <span class="attr">Keys:</span></span><br><span class="line"><span class="string">fat-ydm01</span></span><br><span class="line"><span class="string">Rejected</span> <span class="attr">Keys:</span></span><br></pre></td></tr></table></figure><h3 id="接受等待认证的-key"><a href="#接受等待认证的-key" class="headerlink" title="接受等待认证的 key"></a>接受等待认证的 key</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-a ACCEPT, --accept=ACCEPT    <span class="comment"># 接受指定等待认证的key（支持正则表达式）</span></span><br><span class="line">                              <span class="comment"># 添加某个或某些个未接受(Unaccepted Keys)认证</span></span><br><span class="line">-A, --accept-all              <span class="comment"># 接受所有等待认证的key(Unaccepted Keys)下所有的minion</span></span><br><span class="line">                              <span class="comment"># 添加所有未接受(Unaccepted Keys)认证</span></span><br><span class="line"></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -a fat-ydm01</span></span><br><span class="line">The following keys are going to be accepted:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">fat-ydm01</span><br><span class="line">Proceed? [n/Y] y</span><br><span class="line">Key <span class="keyword">for</span> minion fat-ydm01 accepted.</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -A -y</span></span><br><span class="line">The following keys are going to be accepted:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">fat-ydm01</span><br><span class="line">Key <span class="keyword">for</span> minion fat-ydm01 accepted.</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -L</span></span><br><span class="line">Accepted Keys:</span><br><span class="line">fat-ydm01</span><br><span class="line">Denied Keys:</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">Rejected Keys:</span><br></pre></td></tr></table></figure><h3 id="拒绝等待认证的-key"><a href="#拒绝等待认证的-key" class="headerlink" title="拒绝等待认证的 key"></a>拒绝等待认证的 key</h3><figure class="highlight haml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">-<span class="ruby">r REJECT, --reject=REJECT    <span class="comment"># 拒绝指定等待认证的key（支持正则表达式）</span></span></span><br><span class="line"><span class="ruby">-R, --reject-all              <span class="comment"># 拒绝所有等待认证的key</span></span></span><br><span class="line"><span class="ruby">--<span class="keyword">include</span>-all                 <span class="comment"># 显示所有状态的key（包含non-pending状态）</span></span></span><br></pre></td></tr></table></figure><h3 id="打印-public-key"><a href="#打印-public-key" class="headerlink" title="打印 public key"></a>打印 public key</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line">-p PRINT, <span class="params">--print=PRINT</span>    <span class="comment"># 打印指定的 public key（支持正则表达式）</span></span><br><span class="line">-P, <span class="params">--print-all</span>            <span class="comment"># 打印所有的 public key</span></span><br><span class="line"></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -p "fat-ydm01"</span></span><br><span class="line">Unaccepted Keys:</span><br><span class="line">fat-ydm01:  <span class="params">-----BEGIN</span> PUBLIC KEY<span class="params">-----</span></span><br><span class="line">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0DP70JjbCaGB47qsTxn9</span><br><span class="line">I0M46rRv5HEUcEyaRBRehA+DvuZjjV1ud63WxrvMcRXq/M86EURVyjFDcNaZywi3</span><br><span class="line">SO2K70J+wWxD0HDCV0k8SFR/i83n7nPUVmy+PLlSO+ADl8aWogwUw2wZB4JxZ+OS</span><br><span class="line">gWfwvfFZ41yxIlS+Eteb5SkQtRp/OfZrVyEgY6xp4biURsKzP9kFNvOJHW27fcQ9</span><br><span class="line"><span class="string">/XI4JmX2aKYk4LJRVvudkkLzYBW1NeYRv0kMAVGpMm8SiAkIwi</span>+7CJnEWorqAmc0</span><br><span class="line">TNLGhtDyhV51cbG5Wbt/vbg6N/NX5BOmErXibEsh7679Wph0mJ1fq5jKjn1fYu/J</span><br><span class="line">rwIDAQAB</span><br><span class="line"><span class="params">-----END</span> PUBLIC KEY<span class="params">-----</span></span><br><span class="line"></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -P</span></span><br><span class="line">Unaccepted Keys:</span><br><span class="line">fat-ydm01:  <span class="params">-----BEGIN</span> PUBLIC KEY<span class="params">-----</span></span><br><span class="line">MIIBIjANBgkqhkiG9w0BAQEFAAOCAQ8AMIIBCgKCAQEA0DP70JjbCaGB47qsTxn9</span><br><span class="line">I0M46rRv5HEUcEyaRBRehA+DvuZjjV1ud63WxrvMcRXq/M86EURVyjFDcNaZywi3</span><br><span class="line">SO2K70J+wWxD0HDCV0k8SFR/i83n7nPUVmy+PLlSO+ADl8aWogwUw2wZB4JxZ+OS</span><br><span class="line">gWfwvfFZ41yxIlS+Eteb5SkQtRp/OfZrVyEgY6xp4biURsKzP9kFNvOJHW27fcQ9</span><br><span class="line"><span class="string">/XI4JmX2aKYk4LJRVvudkkLzYBW1NeYRv0kMAVGpMm8SiAkIwi</span>+7CJnEWorqAmc0</span><br><span class="line">TNLGhtDyhV51cbG5Wbt/vbg6N/NX5BOmErXibEsh7679Wph0mJ1fq5jKjn1fYu/J</span><br><span class="line">rwIDAQAB</span><br><span class="line"><span class="params">-----END</span> PUBLIC KEY<span class="params">-----</span></span><br></pre></td></tr></table></figure><h3 id="删除已接受的-key"><a href="#删除已接受的-key" class="headerlink" title="删除已接受的 key"></a>删除已接受的 key</h3><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">-d <span class="keyword">DELETE</span>, --<span class="keyword">delete</span>=<span class="keyword">DELETE</span>   # 删除某个或某些个已接受(Accepted <span class="keyword">Keys</span>)认证</span><br><span class="line">-D, --<span class="keyword">delete</span>-<span class="keyword">all</span>             # 删除所有已接受(Accepted <span class="keyword">Keys</span>)认证</span><br><span class="line"></span><br><span class="line">[root@saltmaster ~]# salt-<span class="keyword">key</span> -d fat-ydm01 -y</span><br><span class="line">Deleting the following <span class="keyword">keys</span>:</span><br><span class="line">Accepted <span class="keyword">Keys</span>:</span><br><span class="line">fat-ydm01</span><br><span class="line"><span class="keyword">Key</span> <span class="keyword">for</span> minion fat-ydm01 deleted.</span><br></pre></td></tr></table></figure><h3 id="显示-key-的指纹信息"><a href="#显示-key-的指纹信息" class="headerlink" title="显示 key 的指纹信息"></a>显示 key 的指纹信息</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">-f FINGER, --finger=FINGER  <span class="comment"># 显示指定 key 的指纹信息（正则表达式）</span></span><br><span class="line">-F, --finger-all            <span class="comment"># 显示所有 key 的指纹信息</span></span><br><span class="line"></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -f "fat-ydm01"</span></span><br><span class="line">Unaccepted Keys:</span><br><span class="line">fat-ydm01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br><span class="line"></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -F</span></span><br><span class="line">Local Keys:</span><br><span class="line">master.pem:  db:5a:f0:25:13:50:94:b9:e0:61:1d:b9:fe:bc:62:b6</span><br><span class="line">master.pub:  b9:bd:58:90:01:f2:61:7f:03:be:e1:51:f5:0b:4f:08</span><br><span class="line">Unaccepted Keys:</span><br><span class="line">fat-ydm01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br><span class="line"></span><br><span class="line"><span class="comment">#################################################################################################</span></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -f "fat-ydm01"</span></span><br><span class="line">Accepted Keys:</span><br><span class="line">fat-ydm01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br><span class="line"></span><br><span class="line">[root@saltmaster ~]<span class="comment"># salt-key -F</span></span><br><span class="line">Local Keys:</span><br><span class="line">master.pem:  db:5a:f0:25:13:50:94:b9:e0:61:1d:b9:fe:bc:62:b6</span><br><span class="line">master.pub:  b9:bd:58:90:01:f2:61:7f:03:be:e1:51:f5:0b:4f:08</span><br><span class="line">Accepted Keys:</span><br><span class="line">fat-ydm01:  c0:e4:83:48:ef:f7:38:70:c7:1d:47:41:df:9c:03:f0</span><br></pre></td></tr></table></figure><h3 id="检测主机是否存活"><a href="#检测主机是否存活" class="headerlink" title="检测主机是否存活"></a>检测主机是否存活</h3><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="symbol">@saltmaster</span> ~]<span class="meta"># salt <span class="string">'fat-ydm01'</span> test.ping</span></span><br><span class="line">fat-ydm01:</span><br><span class="line">    <span class="literal">True</span></span><br></pre></td></tr></table></figure><blockquote><p>我们发送一条消息给一个或所有的 minion，并告诉它们运行 salt 内置的一个模块中的一条命令（也可以说是模块中的一个函数）。该示例中，miniion 返回 true。这个命令能查询有哪些 minion 是存活的。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-认证配置&quot;&gt;&lt;a href=&quot;#SaltStack-认证配置&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 认证配置&quot;&gt;&lt;/a&gt;SaltStack 认证配置&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 认证配置" scheme="http://www.gmlyo.com/tags/SaltStack-%E8%AE%A4%E8%AF%81%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>SaltStack 安装</title>
    <link href="http://www.gmlyo.com/2018/09/04/SaltStack-%E5%AE%89%E8%A3%85/"/>
    <id>http://www.gmlyo.com/2018/09/04/SaltStack-安装/</id>
    <published>2018-09-04T03:15:08.000Z</published>
    <updated>2018-09-04T09:01:08.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="SaltStack-安装"><a href="#SaltStack-安装" class="headerlink" title="SaltStack 安装"></a>SaltStack 安装</h1><a id="more"></a><h2 id="SaltStack-官网"><a href="#SaltStack-官网" class="headerlink" title="SaltStack 官网"></a>SaltStack 官网</h2><p>官网：<a href="https://repo.saltstack.com/#rhel" target="_blank" rel="noopener">https://repo.saltstack.com/#rhel</a><br>GitHub：<a href="https://github.com/saltstack/salt" target="_blank" rel="noopener">https://github.com/saltstack/salt</a></p><h2 id="最新版本-Pin-to-Latest-Release"><a href="#最新版本-Pin-to-Latest-Release" class="headerlink" title="最新版本(Pin to Latest Release)"></a>最新版本(Pin to Latest Release)</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Redhat/CentOS 7 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-latest-2.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 7 PY3</span></span><br><span class="line"><span class="meta"># Redhat Python3 支持要求先安装EPEL</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/py3/redhat/salt-py3-repo-latest-2.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 6 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-latest-2.el6.noarch.rpm</span></span><br></pre></td></tr></table></figure><h2 id="主版本-Pin-to-Major-Version"><a href="#主版本-Pin-to-Major-Version" class="headerlink" title="主版本(Pin to Major Version)"></a>主版本(Pin to Major Version)</h2><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># Redhat/CentOS 7 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-2018.3-1.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 7 PY3</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/py3/redhat/salt-py3-repo-2018.3-1.el7.noarch.rpm</span></span><br><span class="line"></span><br><span class="line"><span class="meta"># Redhat/CentOS 6 PY2</span></span><br><span class="line">yum -y install https:<span class="comment">//repo.saltstack.com/yum/redhat/salt-repo-2018.3-1.el6.noarch.rpm</span></span><br></pre></td></tr></table></figure><h2 id="次版本-Pin-to-Minor-Release"><a href="#次版本-Pin-to-Minor-Release" class="headerlink" title="次版本(Pin to Minor Release)"></a>次版本(Pin to Minor Release)</h2><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 安装指定 SaltStack yum仓库文件 和 key文件</span></span><br><span class="line">rpm --import <span class="symbol">https:</span>/<span class="regexp">/repo.saltstack.com/yum</span><span class="regexp">/redhat/</span><span class="number">6</span>/x86_64/archive/<span class="number">2018.3</span>.<span class="number">2</span>/SALTSTACK-GPG-KEY.pub</span><br><span class="line"></span><br><span class="line">cat /etc/yum.repos.d/saltstack.repo</span><br><span class="line">[saltstack-repo]</span><br><span class="line">name=SaltStack repo <span class="keyword">for</span> RHEL/CentOS <span class="variable">$releasever</span></span><br><span class="line">baseurl=<span class="symbol">https:</span>/<span class="regexp">/repo.saltstack.com/yum</span><span class="regexp">/redhat/</span><span class="variable">$releasever</span>/<span class="variable">$basearch</span>/archive/<span class="number">2018.3</span>.<span class="number">2</span></span><br><span class="line">enabled=<span class="number">1</span></span><br><span class="line">gpgcheck=<span class="number">1</span></span><br><span class="line">gpgkey=<span class="symbol">https:</span>/<span class="regexp">/repo.saltstack.com/yum</span><span class="regexp">/redhat/</span><span class="variable">$releasever</span>/<span class="variable">$basearch</span>/archive/<span class="number">2018.3</span>.<span class="number">2</span>/SALTSTACK-GPG-KEY.pub</span><br></pre></td></tr></table></figure><h2 id="安装-Salt-组件"><a href="#安装-Salt-组件" class="headerlink" title="安装 Salt 组件"></a>安装 Salt 组件</h2><blockquote><p>获取完以上的仓库源后，执行以下命令，开始安装</p></blockquote><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">yum clean expire-<span class="keyword">cache</span></span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-<span class="keyword">master</span></span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-minion</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-ssh</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-syndic</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-cloud</span><br><span class="line">yum -y <span class="keyword">install</span> <span class="keyword">salt</span>-api</span><br></pre></td></tr></table></figure><h2 id="启停-salt-master-服务"><a href="#启停-salt-master-服务" class="headerlink" title="启停 salt-master 服务"></a>启停 salt-master 服务</h2><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="literal">start</span> salt-<span class="literal">master</span></span><br><span class="line">systemctl -l status salt-<span class="literal">master</span></span><br><span class="line">systemctl enable salt-<span class="literal">master</span></span><br><span class="line">systemctl restart salt-<span class="literal">master</span></span><br><span class="line">systemctl <span class="literal">stop</span> salt-<span class="literal">master</span></span><br><span class="line">journalctl -fu salt-<span class="literal">master</span></span><br><span class="line">ps -ef | grep salt-<span class="literal">master</span></span><br></pre></td></tr></table></figure><h2 id="启停-salt-minion-服务"><a href="#启停-salt-minion-服务" class="headerlink" title="启停 salt-minion 服务"></a>启停 salt-minion 服务</h2><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl <span class="keyword">start</span> <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl -l <span class="keyword">status</span> <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl <span class="keyword">enable</span> <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl restart <span class="keyword">salt</span>-minion</span><br><span class="line">systemctl <span class="keyword">stop</span> <span class="keyword">salt</span>-minion</span><br><span class="line">journalctl -fu <span class="keyword">salt</span>-minion</span><br><span class="line">ps -ef | grep <span class="keyword">salt</span>-minion</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;SaltStack-安装&quot;&gt;&lt;a href=&quot;#SaltStack-安装&quot; class=&quot;headerlink&quot; title=&quot;SaltStack 安装&quot;&gt;&lt;/a&gt;SaltStack 安装&lt;/h1&gt;
    
    </summary>
    
      <category term="SaltStack笔记" scheme="http://www.gmlyo.com/categories/SaltStack%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="SaltStack 安装" scheme="http://www.gmlyo.com/tags/SaltStack-%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Python 可迭代对象与迭代器对象</title>
    <link href="http://www.gmlyo.com/2018/09/03/Python-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1%E4%B8%8E%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%AF%B9%E8%B1%A1/"/>
    <id>http://www.gmlyo.com/2018/09/03/Python-可迭代对象与迭代器对象/</id>
    <published>2018-09-03T10:07:27.000Z</published>
    <updated>2018-09-03T11:39:02.098Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Python-可迭代对象与迭代器对象"><a href="#Python-可迭代对象与迭代器对象" class="headerlink" title="Python 可迭代对象与迭代器对象"></a>Python 可迭代对象与迭代器对象</h1><a id="more"></a><h3 id="什么是迭代器？"><a href="#什么是迭代器？" class="headerlink" title="什么是迭代器？"></a>什么是迭代器？</h3><blockquote><p>迭代的工具<br>什么是迭代？<br>迭代是一个重复的过程，迭代不是单纯的重复，每一次重复都是基于上一次结果而进行的<br>单纯的重复，并不是迭代</p></blockquote><h3 id="为什么要用迭代器？"><a href="#为什么要用迭代器？" class="headerlink" title="为什么要用迭代器？"></a>为什么要用迭代器？</h3><blockquote><p>找到一种可以不依赖索引的迭代取值方式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> i &lt; len(i):</span><br><span class="line">    print(l[i])</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>依赖于列表的的索引而进行的<br>索引的取值方式只适用于 字符串，列表，元组 的序列数据类型</p></blockquote><blockquote><p>针对没有索引的数据类型：字典，集合，文件<br>用迭代器，不依赖于索引</p></blockquote><h3 id="怎么用迭代器？"><a href="#怎么用迭代器？" class="headerlink" title="怎么用迭代器？"></a>怎么用迭代器？</h3><blockquote><p>可迭代对象<br>在 Python 中，凡是内置有 <code>__iter__</code> 方法对象，都是可迭代的对象<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">a = <span class="number">1</span></span><br><span class="line">b = <span class="number">1.1</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 以下都是可迭代的对象</span></span><br><span class="line">c = <span class="string">'hello'</span></span><br><span class="line">d = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line">e = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line">f = &#123;<span class="string">'a'</span>: <span class="number">1</span>&#125;</span><br><span class="line">g = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">f = open(<span class="string">'aa.py'</span>, <span class="string">'rb'</span>)</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>迭代器对象？<br>执行可迭代对象下 <code>__iter__</code> 方法得到的返回值是一个迭代器对象<br>迭代器对象是内置有 <code>__next__</code> 方法</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">iter_obj = l.__iter__()</span><br><span class="line">print(iter_obj)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;list_iterator object at <span class="number">0x00000252754AD080</span>&gt;</span><br></pre></td></tr></table></figure><blockquote><p>如何拿到迭代器？<br>执行可迭代对象下的 <code>__iter__()</code> 方法，就能拿到迭代器对象</p></blockquote><blockquote><p>迭代器对象是内置有 <code>__next__</code> 方法<br>列表类型<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">l = [<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>]</span><br><span class="line">iter_obj = l.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">a</span><br><span class="line">b</span><br><span class="line">c</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>字典类型<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>这种取值方式，不依赖于索引</p></blockquote><blockquote><p>迭代器拿到了以后，就可以想<br>可以把所有可迭代对象全都变成迭代器对象，然后再按照迭代器的方式，一点一点取值<br>就完全可以脱离索引对我们取值的一种限制<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line">print(iter_obj.__next__())</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br><span class="line">StopIteration    <span class="comment"># 结束信号</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>结束信号：<code>StopIteration</code>，一旦这个信号出现后，就应该知道，迭代器里的值已经被取完了<br>按照索引依次排开称为有序，有索引的类型，才是有序的（字符串，列表，元组）<br>字典是无序的，字典取值是按照 key取值的，和顺序没有关系</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">vim aa.py</span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br><span class="line">            <span class="function"><span class="keyword">def</span> <span class="title">f4</span><span class="params">()</span>:</span></span><br><span class="line">                <span class="keyword">if</span></span><br><span class="line"></span><br><span class="line">f = open(<span class="string">'aa.py'</span>, <span class="string">'rt'</span>, encoding=<span class="string">'utf-8'</span>)</span><br><span class="line">iter_obj = f.__iter__()</span><br><span class="line"></span><br><span class="line">print(iter_obj.__next__(), end=<span class="string">''</span>)</span><br><span class="line">print(iter_obj.__next__(), end=<span class="string">''</span>)</span><br><span class="line">print(iter_obj.__next__(), end=<span class="string">''</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">f1</span><span class="params">()</span>:</span></span><br><span class="line">    <span class="function"><span class="keyword">def</span> <span class="title">f2</span><span class="params">()</span>:</span></span><br><span class="line">        <span class="function"><span class="keyword">def</span> <span class="title">f3</span><span class="params">()</span>:</span></span><br></pre></td></tr></table></figure><blockquote><p>对文件来说，特点是什么？<br>也能够按照迭代器的方式，把里面的值，一个个取出来<br>可以完全不依赖于索引，仍然能把一个数据类型里面的值，一次次取出来</p></blockquote><blockquote><p>把字典里的多个值取出来<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">dic = &#123;<span class="string">'k1'</span>: <span class="number">1</span>, <span class="string">'k2'</span>: <span class="number">2</span>, <span class="string">'k3'</span>: <span class="number">3</span>&#125;</span><br><span class="line">iter_obj = dic.__iter__()</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="keyword">True</span>:</span><br><span class="line">    <span class="keyword">try</span>:   <span class="comment"># 检测有可能抛异常的代码块</span></span><br><span class="line">        print(iter_obj.__next__())</span><br><span class="line">    <span class="keyword">except</span> StopIteration:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">k1</span><br><span class="line">k2</span><br><span class="line">k3</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="for-循环的底层运行机制"><a href="#for-循环的底层运行机制" class="headerlink" title="for 循环的底层运行机制"></a>for 循环的底层运行机制</h3>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Python-可迭代对象与迭代器对象&quot;&gt;&lt;a href=&quot;#Python-可迭代对象与迭代器对象&quot; class=&quot;headerlink&quot; title=&quot;Python 可迭代对象与迭代器对象&quot;&gt;&lt;/a&gt;Python 可迭代对象与迭代器对象&lt;/h1&gt;
    
    </summary>
    
      <category term="Python笔记" scheme="http://www.gmlyo.com/categories/Python%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python 可迭代对象与迭代器对象" scheme="http://www.gmlyo.com/tags/Python-%E5%8F%AF%E8%BF%AD%E4%BB%A3%E5%AF%B9%E8%B1%A1%E4%B8%8E%E8%BF%AD%E4%BB%A3%E5%99%A8%E5%AF%B9%E8%B1%A1/"/>
    
  </entry>
  
  <entry>
    <title>Python 三元表达式、列表生成式、字典生成式</title>
    <link href="http://www.gmlyo.com/2018/09/03/Python-%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F-%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F-%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%BC%8F/"/>
    <id>http://www.gmlyo.com/2018/09/03/Python-三元表达式-列表生成式-字典生成式/</id>
    <published>2018-09-03T02:59:11.000Z</published>
    <updated>2018-09-03T08:29:36.730Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Python-三元表达式、列表生成式、字典生成式"><a href="#Python-三元表达式、列表生成式、字典生成式" class="headerlink" title="Python 三元表达式、列表生成式、字典生成式"></a>Python 三元表达式、列表生成式、字典生成式</h2><a id="more"></a><blockquote><p>都是为了写代码写的简介一点儿，不用它们有点问题都没有<br>这四个东西都是为了将多行代码写到一行去，而且还能兼顾一个简洁性的特点</p></blockquote><h3 id="三元表达式"><a href="#三元表达式" class="headerlink" title="三元表达式"></a>三元表达式</h3><blockquote><p>比较两个值最大值最小值的功能<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">max2</span><span class="params">(x, y)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> x &gt; y:</span><br><span class="line">        <span class="keyword">return</span> x</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> y</span><br><span class="line"></span><br><span class="line">res = max2(<span class="number">1</span>, <span class="number">2</span>)</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>三元表达式 其实就是想用一行把上面这些事情搞定</p></blockquote><p><strong>语法</strong></p><blockquote><p>条件成立时的返回值 if 条件 else 条件不成立时的返回值</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = x <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> y</span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">10</span></span><br></pre></td></tr></table></figure><blockquote><p>条件算一元：<code>if x &gt; y</code><br>条件成立时返回的值算一元：<code>x</code><br>条件不成立时返回的值算一元：<code>else y</code></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">10</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = <span class="keyword">True</span> <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="keyword">True</span></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">x = <span class="number">1</span></span><br><span class="line">y = <span class="number">2</span></span><br><span class="line"></span><br><span class="line">res = <span class="keyword">True</span> <span class="keyword">if</span> x &gt; y <span class="keyword">else</span> <span class="keyword">False</span></span><br><span class="line">print(res)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="keyword">False</span></span><br></pre></td></tr></table></figure><h3 id="列表生成式（列表推导式）"><a href="#列表生成式（列表推导式）" class="headerlink" title="列表生成式（列表推导式）"></a>列表生成式（列表推导式）</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    l.append(i)</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p><strong>语法</strong><br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">[expression <span class="keyword">for</span> item1 <span class="keyword">in</span> iterable1 <span class="keyword">if</span> condition1</span><br><span class="line"><span class="keyword">for</span> item2 <span class="keyword">in</span> iterable2 <span class="keyword">if</span> condition2</span><br><span class="line">...</span><br><span class="line"><span class="keyword">for</span> itemN <span class="keyword">in</span> iterableN <span class="keyword">if</span> conditionN</span><br><span class="line">]</span><br><span class="line">类似于</span><br><span class="line">res = []</span><br><span class="line"><span class="keyword">for</span> item1 <span class="keyword">in</span> iterable1:</span><br><span class="line">    <span class="keyword">for</span> item2 <span class="keyword">in</span> iterable2:</span><br><span class="line">        <span class="keyword">if</span> condition2</span><br><span class="line">            ...</span><br><span class="line">            <span class="keyword">for</span> itemN <span class="keyword">in</span> iterableN:</span><br><span class="line">                <span class="keyword">if</span> conditionN:</span><br><span class="line">                    res.append(expression)</span><br></pre></td></tr></table></figure></p><blockquote><p>列表生成式示例<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>)]</span><br><span class="line">print(l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>获取从4 开始往后的值<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>):</span><br><span class="line">    <span class="keyword">if</span> i &gt; <span class="number">3</span>:</span><br><span class="line">    l.append(i)</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">l1 = [i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> i &gt; <span class="number">3</span>]</span><br><span class="line">print(l1)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>]</span><br></pre></td></tr></table></figure><p><strong>小练习</strong></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu'</span>, <span class="string">'zhaoliu'</span>]</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="keyword">if</span> name != <span class="string">'lisi'</span>:</span><br><span class="line">        l.append(name + <span class="string">'py'</span>)</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'zhangsanpy'</span>, <span class="string">'wangwupy'</span>, <span class="string">'zhaoliupy'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan_py'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu_py'</span>, <span class="string">'zhaoliu_py'</span>]</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="keyword">if</span> name.endswith(<span class="string">'sb'</span>):</span><br><span class="line">        l.append(name.upper())</span><br><span class="line"></span><br><span class="line">print(l)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'ZHANGSAN_PY'</span>, <span class="string">'WANGWU_PY'</span>, <span class="string">'ZHAOLIU_PY'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan_py'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu_py'</span>, <span class="string">'zhaoliu_py'</span>]</span><br><span class="line">l = []</span><br><span class="line"><span class="keyword">for</span> name <span class="keyword">in</span> names:</span><br><span class="line">    <span class="keyword">if</span> name.endswith(<span class="string">'sb'</span>):</span><br><span class="line">        l.append(name.upper())</span><br><span class="line"></span><br><span class="line">names = l</span><br><span class="line">print(names)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'ZHANGSAN_PY'</span>, <span class="string">'WANGWU_PY'</span>, <span class="string">'ZHAOLIU_PY'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">names = [<span class="string">'zhangsan_py'</span>, <span class="string">'lisi'</span>, <span class="string">'wangwu_py'</span>, <span class="string">'zhaoliu_py'</span>]</span><br><span class="line">names = [name.upper() <span class="keyword">for</span> name <span class="keyword">in</span> names <span class="keyword">if</span> name.endswith(<span class="string">'py'</span>)]</span><br><span class="line">print(names)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'ZHANGSAN_PY'</span>, <span class="string">'WANGWU_PY'</span>, <span class="string">'ZHAOLIU_PY'</span>]</span><br></pre></td></tr></table></figure><h3 id="字典生成式"><a href="#字典生成式" class="headerlink" title="字典生成式"></a>字典生成式</h3><blockquote><p>集合生成式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> i &gt; <span class="number">3</span>&#125;</span><br><span class="line">print(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>&#125;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>把符号 <code>[]</code> 换成 <code>{}</code> 就是字典表达式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">s = &#123;i:i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>) <span class="keyword">if</span> i &gt; <span class="number">3</span>&#125;</span><br><span class="line">print(<span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="number">4</span>: <span class="number">4</span>, <span class="number">5</span>: <span class="number">5</span>, <span class="number">6</span>: <span class="number">6</span>, <span class="number">7</span>: <span class="number">7</span>, <span class="number">8</span>: <span class="number">8</span>, <span class="number">9</span>: <span class="number">9</span>&#125;</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">userinfo = [(<span class="string">'egon'</span>, <span class="string">'123'</span>), (<span class="string">'alex'</span>. <span class="string">'456'</span>), (<span class="string">'wxx'</span>, <span class="string">'679'</span>)]</span><br><span class="line">dic = &#123;k: v <span class="keyword">for</span> k, v <span class="keyword">in</span> userinfo&#125;</span><br><span class="line">print(dic)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'egon'</span>: <span class="string">'123'</span>, <span class="string">'alex'</span>, <span class="string">'456'</span>, <span class="string">'wxx'</span>: <span class="string">'679'</span>&#125;</span><br></pre></td></tr></table></figure><p><strong>小练习</strong></p><blockquote><p>将列表转换成字典</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    print(item)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">[<span class="string">'name'</span>, <span class="string">'egon'</span>]</span><br><span class="line">(<span class="string">'age'</span>, <span class="number">18</span>)</span><br><span class="line">[<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    print(item[<span class="number">0</span>], item[<span class="number">1</span>])</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">name egon</span><br><span class="line">age <span class="number">18</span></span><br><span class="line">sex male</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> info:</span><br><span class="line">    d[item[<span class="number">0</span>]] = item[<span class="number">1</span>]</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'egon'</span>, <span class="string">'age'</span>: <span class="number">18</span>, <span class="string">'sex'</span>: <span class="string">'male'</span>&#125;</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">info = [</span><br><span class="line">    [<span class="string">'name'</span>, <span class="string">'egon'</span>],</span><br><span class="line">    (<span class="string">'age'</span>, <span class="number">18</span>),</span><br><span class="line">    [<span class="string">'sex'</span>, <span class="string">'male'</span>]</span><br><span class="line">]</span><br><span class="line"></span><br><span class="line">d = &#123;item[<span class="number">0</span>]: item[<span class="number">1</span>] <span class="keyword">for</span> item <span class="keyword">in</span> info&#125;</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'name'</span>: <span class="string">'egon'</span>, <span class="string">'age'</span>: <span class="number">18</span>, <span class="string">'sex'</span>: <span class="string">'male'</span>&#125;</span><br></pre></td></tr></table></figure><blockquote><p>把 key 变成大写</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">d = &#123;</span><br><span class="line">    <span class="string">'name'</span>: <span class="string">'egon'</span>,</span><br><span class="line">    <span class="string">'age'</span>: <span class="number">18</span>,</span><br><span class="line">    <span class="string">'sex'</span>: <span class="string">'male'</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">d = &#123;k.upper():v <span class="keyword">for</span> k,v <span class="keyword">in</span> d.items()&#125;</span><br><span class="line">print(d)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&#123;<span class="string">'NAME'</span>: <span class="string">'egon'</span>, <span class="string">'AGE'</span>: <span class="number">18</span>, <span class="string">'SEX'</span>: <span class="string">'male'</span>&#125;</span><br></pre></td></tr></table></figure><h3 id="生成器表达式"><a href="#生成器表达式" class="headerlink" title="生成器表达式"></a>生成器表达式</h3><blockquote><p>把列表推导式的 <code>[]</code> 换成 <code>()</code> 就是生成器表达式<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">g = (i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line">print(g)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">&lt;generator object &lt;genexpr&gt; at <span class="number">0x000001719E5E3EB8</span>&gt;</span><br></pre></td></tr></table></figure></p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">g = (i <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">10</span>))</span><br><span class="line">print(next(g))</span><br><span class="line">print(next(g))</span><br><span class="line">print(next(g))</span><br><span class="line">print(next(g))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line"><span class="number">0</span></span><br><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">2</span></span><br><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><blockquote><p>示例：生一筐鸡蛋变成给你一只老母鸡，用的时候就下蛋，这也是生成器的特性<br><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>chicken = (<span class="string">'鸡蛋%s'</span> % <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">5</span>))</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>chicken</span><br><span class="line">&lt;generator object &lt;genexpr&gt; at <span class="number">0x10143f200</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>next(chicken)</span><br><span class="line"><span class="string">'鸡蛋0'</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>list(chicken)    <span class="comment"># 因 chicken 可迭代，因而可以转成列表</span></span><br><span class="line">[<span class="string">'鸡蛋1'</span>, <span class="string">'鸡蛋2'</span>, <span class="string">'鸡蛋3'</span>, <span class="string">'鸡蛋4'</span>,]</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>优点：省内存，一次只产生一个值在内存中</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">chicken = (<span class="string">'egg%s'</span> % <span class="keyword">for</span> i <span class="keyword">in</span> range(<span class="number">3</span>))</span><br><span class="line">print(next(chicken))</span><br><span class="line">print(next(chicken))</span><br><span class="line">print(next(chicken))</span><br><span class="line">print(next(chicken))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 执行结果</span></span><br><span class="line">egg0</span><br><span class="line">egg1</span><br><span class="line">egg2</span><br><span class="line">StopIteration</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Python-三元表达式、列表生成式、字典生成式&quot;&gt;&lt;a href=&quot;#Python-三元表达式、列表生成式、字典生成式&quot; class=&quot;headerlink&quot; title=&quot;Python 三元表达式、列表生成式、字典生成式&quot;&gt;&lt;/a&gt;Python 三元表达式、列表生成式、字典生成式&lt;/h2&gt;
    
    </summary>
    
      <category term="Python笔记" scheme="http://www.gmlyo.com/categories/Python%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python 三元表达式、列表生成式、字典生成式" scheme="http://www.gmlyo.com/tags/Python-%E4%B8%89%E5%85%83%E8%A1%A8%E8%BE%BE%E5%BC%8F%E3%80%81%E5%88%97%E8%A1%A8%E7%94%9F%E6%88%90%E5%BC%8F%E3%80%81%E5%AD%97%E5%85%B8%E7%94%9F%E6%88%90%E5%BC%8F/"/>
    
  </entry>
  
  <entry>
    <title>Docker 资源汇总</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-资源汇总/</id>
    <published>2018-09-01T10:26:21.000Z</published>
    <updated>2018-09-01T10:31:28.442Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-资源汇总"><a href="#Docker-资源汇总" class="headerlink" title="Docker 资源汇总"></a>Docker 资源汇总</h1><a id="more"></a><h3 id="Docker官方英文资源"><a href="#Docker官方英文资源" class="headerlink" title="Docker官方英文资源"></a>Docker官方英文资源</h3><p>Docker官网：<a href="http://www.docker.com/" target="_blank" rel="noopener">http://www.docker.com</a><br>Docker windows入门：<a href="https://docs.docker.com/windows/" target="_blank" rel="noopener">https://docs.docker.com/windows/</a><br>Docker Linux 入门：<a href="https://docs.docker.com/linux/" target="_blank" rel="noopener">https://docs.docker.com/linux/</a><br>Docker mac 入门：<a href="https://docs.docker.com/mac/" target="_blank" rel="noopener">https://docs.docker.com/mac/</a><br>Docker 用户指引：<a href="https://docs.docker.com/engine/userguide/" target="_blank" rel="noopener">https://docs.docker.com/engine/userguide/</a><br>Docker 官方博客：<a href="http://blog.docker.com/" target="_blank" rel="noopener">http://blog.docker.com/</a><br>Docker Hub: <a href="https://hub.docker.com/" target="_blank" rel="noopener">https://hub.docker.com/</a><br>Docker开源： <a href="https://www.docker.com/open-source" target="_blank" rel="noopener">https://www.docker.com/open-source</a></p><h3 id="Docker中文资源"><a href="#Docker中文资源" class="headerlink" title="Docker中文资源"></a>Docker中文资源</h3><p>Docker中文网站：<a href="https://www.docker-cn.com/" target="_blank" rel="noopener">https://www.docker-cn.com/</a><br>Docker安装手册：<a href="https://docs.docker-cn.com/engine/installation/" target="_blank" rel="noopener">https://docs.docker-cn.com/engine/installation/</a></p><h3 id="Docker-国内镜像"><a href="#Docker-国内镜像" class="headerlink" title="Docker 国内镜像"></a>Docker 国内镜像</h3><p>网易加速器：<a href="http://hub-mirror.c.163.com" target="_blank" rel="noopener">http://hub-mirror.c.163.com</a><br>官方中国加速器：<a href="https://registry.docker-cn.com" target="_blank" rel="noopener">https://registry.docker-cn.com</a><br>ustc的镜像：<a href="https://docker.mirrors.ustc.edu.cn" target="_blank" rel="noopener">https://docker.mirrors.ustc.edu.cn</a><br>daocloud：<a href="https://www.daocloud.io/mirror#accelerator-doc（注册后使用）" target="_blank" rel="noopener">https://www.daocloud.io/mirror#accelerator-doc（注册后使用）</a></p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-resources.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-resources.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-资源汇总&quot;&gt;&lt;a href=&quot;#Docker-资源汇总&quot; class=&quot;headerlink&quot; title=&quot;Docker 资源汇总&quot;&gt;&lt;/a&gt;Docker 资源汇总&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker 资源汇总" scheme="http://www.gmlyo.com/tags/Docker-%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB/"/>
    
  </entry>
  
  <entry>
    <title>Docker tag 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-tag-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-tag-命令/</id>
    <published>2018-09-01T09:58:14.000Z</published>
    <updated>2018-09-01T09:58:46.496Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-tag-命令"><a href="#Docker-tag-命令" class="headerlink" title="Docker tag 命令"></a>Docker tag 命令</h1><a id="more"></a><p><strong>docker tag :</strong> 标记本地镜像，将其归入某一仓库。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker tag [<span class="string">OPTIONS</span>] IMAGE[<span class="string">:TAG</span>] [<span class="string">REGISTRYHOST/</span>][<span class="symbol">USERNAME/</span>]NAME[:TAG]</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将镜像 ubuntu:15.10 标记为 runoob/ubuntu:v3 镜像。</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhsot ~] docker <span class="keyword">tag</span> <span class="title">ubuntu</span>:<span class="number">15.10</span> runoob/ubuntu:v3</span><br><span class="line">[root@localhsot ~] docker images runoob/ubuntu:v3</span><br><span class="line">REPOSITORY          <span class="keyword">TAG</span>                 <span class="title">IMAGE</span> ID            CREATED             SIZE</span><br><span class="line">runoob/ubuntu       v3                  <span class="number">4</span>e3b13c8a266        <span class="number">3</span> months ago        <span class="number">136.3</span> MB</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-tag-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-tag-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-tag-命令&quot;&gt;&lt;a href=&quot;#Docker-tag-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker tag 命令&quot;&gt;&lt;/a&gt;Docker tag 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker tag 命令" scheme="http://www.gmlyo.com/tags/Docker-tag-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker search 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-search-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-search-命令/</id>
    <published>2018-09-01T09:56:02.000Z</published>
    <updated>2018-09-01T09:56:24.774Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-search-命令"><a href="#Docker-search-命令" class="headerlink" title="Docker search 命令"></a>Docker search 命令</h1><a id="more"></a><p><strong>docker search :</strong> 从 Docker Hub 查找镜像</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker search <span class="string">[OPTIONS]</span> TERM</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>–automated :</strong> 只列出 automated build 类型的镜像；</li><li><strong>–no-trunc :</strong> 显示完整的镜像描述；</li><li><strong>-s :</strong> 列出收藏数不小于指定值的镜像。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>从 Docker Hub 查找所有镜像名包含 java，并且收藏数大于 10 的镜像</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] docker search -s <span class="number">10</span> java</span><br><span class="line">NAME                  DESCRIPTION                           STARS   OFFICIAL   AUTOMATED</span><br><span class="line">java                  Java is a concurrent, class-based...   <span class="number">1037</span>    [OK]       </span><br><span class="line">anapsix/alpine-java   Oracle Java <span class="number">8</span> (and <span class="number">7</span>) with GLIBC ...   <span class="number">115</span>                [OK]</span><br><span class="line">develar/java                                                 <span class="number">46</span>                 [OK]</span><br><span class="line">isuper/java-oracle    This repository contains all java...   <span class="number">38</span>                 [OK]</span><br><span class="line">lwieske/java<span class="number">-8</span>        Oracle Java <span class="number">8</span> Container - Full + ...   <span class="number">27</span>                 [OK]</span><br><span class="line">nimmis/java-centos    This is docker images of CentOS <span class="number">7.</span>..   <span class="number">13</span>                 [OK]</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-search-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-search-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-search-命令&quot;&gt;&lt;a href=&quot;#Docker-search-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker search 命令&quot;&gt;&lt;/a&gt;Docker search 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker search 命令" scheme="http://www.gmlyo.com/tags/Docker-search-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker push 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-push-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-push-命令/</id>
    <published>2018-09-01T09:54:02.000Z</published>
    <updated>2018-09-01T09:54:24.363Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-push-命令"><a href="#Docker-push-命令" class="headerlink" title="Docker push 命令"></a>Docker push 命令</h1><a id="more"></a><p><strong>docker push :</strong> 将本地的镜像上传到镜像仓库，要先登陆到镜像仓库。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker push <span class="string">[OPTIONS]</span> NAME<span class="string">[:TAG]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>–disable-content-trust :</strong> 忽略镜像的校验，默认开启。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>上传本地镜像 <code>myapache:v1</code> 到镜像仓库中。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">push </span>myapache:<span class="built_in">v1</span></span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-push-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-push-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-push-命令&quot;&gt;&lt;a href=&quot;#Docker-push-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker push 命令&quot;&gt;&lt;/a&gt;Docker push 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker push 命令" scheme="http://www.gmlyo.com/tags/Docker-push-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker pull 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-pull-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-pull-命令/</id>
    <published>2018-09-01T09:52:02.000Z</published>
    <updated>2018-09-01T09:52:51.904Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-pull-命令"><a href="#Docker-pull-命令" class="headerlink" title="Docker pull 命令"></a>Docker pull 命令</h1><a id="more"></a><p><strong>docker pull :</strong> 从镜像仓库中拉取或者更新指定镜像</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull [OPTIONS] NAME[<span class="symbol">:TAG|</span><span class="variable">@DIGEST</span>]</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-a :</strong> 拉取所有 tagged 镜像</li><li><strong>–disable-content-trust :</strong> 忽略镜像的校验，默认开启</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>从 Docker Hub 下载 java 最新版镜像。</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker pull java</span></span><br></pre></td></tr></table></figure><p>从 Docker Hub 下载 REPOSITORY 为 java 的所有镜像。</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker pull -<span class="selector-tag">a</span> java</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-pull-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-pull-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-pull-命令&quot;&gt;&lt;a href=&quot;#Docker-pull-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker pull 命令&quot;&gt;&lt;/a&gt;Docker pull 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker pull 命令" scheme="http://www.gmlyo.com/tags/Docker-pull-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker version 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-version-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-version-命令/</id>
    <published>2018-09-01T09:49:02.000Z</published>
    <updated>2018-09-01T09:49:24.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-version-命令"><a href="#Docker-version-命令" class="headerlink" title="Docker version 命令"></a>Docker version 命令</h1><a id="more"></a><p><strong>docker version :</strong> 显示 Docker 版本信息。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version <span class="string">[OPTIONS]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-f :</strong> 指定返回值的模板文件。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>显示 Docker 版本信息。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">version</span></span><br><span class="line"><span class="attr">Client:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.2</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">0</span><span class="string">a8c2e3</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Sep</span> <span class="number">10</span> <span class="number">19</span><span class="string">:19:00</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Server:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.2</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">0</span><span class="string">a8c2e3</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Sep</span> <span class="number">10</span> <span class="number">19</span><span class="string">:19:00</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-version-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-version-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-version-命令&quot;&gt;&lt;a href=&quot;#Docker-version-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker version 命令&quot;&gt;&lt;/a&gt;Docker version 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker version 命令" scheme="http://www.gmlyo.com/tags/Docker-version-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker info 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-info-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-info-命令/</id>
    <published>2018-09-01T09:45:51.000Z</published>
    <updated>2018-09-01T09:46:29.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-info-命令"><a href="#Docker-info-命令" class="headerlink" title="Docker info 命令"></a>Docker info 命令</h1><a id="more"></a><p><strong>docker info :</strong> 显示 Docker 系统信息，包括镜像和容器数。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> <span class="literal">info</span> [OPTIONS]</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查看 docker 系统信息。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br><span class="line"><span class="string">Containers:</span> <span class="number">12</span></span><br><span class="line"><span class="string">Images:</span> <span class="number">41</span></span><br><span class="line">Storage <span class="string">Driver:</span> aufs</span><br><span class="line"> Root <span class="string">Dir:</span> <span class="regexp">/var/</span>lib<span class="regexp">/docker/</span>aufs</span><br><span class="line"> Backing <span class="string">Filesystem:</span> extfs</span><br><span class="line"><span class="symbol"> Dirs:</span> <span class="number">66</span></span><br><span class="line"> Dirperm1 <span class="string">Supported:</span> <span class="literal">false</span></span><br><span class="line">Execution <span class="string">Driver:</span> native<span class="number">-0.2</span></span><br><span class="line">Logging <span class="string">Driver:</span> json-file</span><br><span class="line">Kernel <span class="string">Version:</span> <span class="number">3.13</span><span class="number">.0</span><span class="number">-32</span>-generic</span><br><span class="line">Operating <span class="string">System:</span> Ubuntu <span class="number">14.04</span><span class="number">.1</span> LTS</span><br><span class="line"><span class="string">CPUs:</span> <span class="number">1</span></span><br><span class="line">Total <span class="string">Memory:</span> <span class="number">1.954</span> GiB</span><br><span class="line"><span class="string">Name:</span> iZ23mtq8bs1Z</span><br><span class="line"><span class="string">ID:</span> <span class="string">M5N4:</span><span class="string">K6WN:</span><span class="string">PUNC:</span><span class="number">73</span><span class="string">ZN:</span><span class="string">AONJ:</span><span class="string">AUHL:</span><span class="string">KSYH:</span><span class="number">2</span><span class="string">JPI:</span><span class="string">CH3K:</span><span class="string">O4MK:</span><span class="number">6</span><span class="string">OCX:</span><span class="number">5</span>OYW</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-info-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-info-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-info-命令&quot;&gt;&lt;a href=&quot;#Docker-info-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker info 命令&quot;&gt;&lt;/a&gt;Docker info 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker info 命令" scheme="http://www.gmlyo.com/tags/Docker-info-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker import 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-import-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-import-命令/</id>
    <published>2018-09-01T09:42:58.000Z</published>
    <updated>2018-09-01T09:43:17.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-import-命令"><a href="#Docker-import-命令" class="headerlink" title="Docker import 命令"></a>Docker import 命令</h1><a id="more"></a><p><strong>docker import :</strong> 从归档文件中创建镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">import</span> [<span class="keyword">OPTIONS</span>] <span class="keyword">file</span>|URL|- [REPOSITORY[:TAG]]</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-c :</strong> 应用 docker 指令创建镜像；</li><li><strong>-m :</strong> 提交时的说明文字；</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>从镜像归档文件 my_ubuntu_v3.tar 创建镜像，命名为 runoob/ubuntu:v4</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> ~] docker <span class="keyword">import</span> my_ubuntu_v3.tar runoob/<span class="string">ubuntu:</span>v4  </span><br><span class="line"><span class="string">sha256:</span><span class="number">63</span>ce4a6d6bc3fabb95dbd6c561404a309b7bdfc4e21c1d59fe9fe4299cbfea39</span><br><span class="line">[root<span class="meta">@localhost</span> ~] docker images runoob/<span class="string">ubuntu:</span>v4</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">runoob/ubuntu       v4                  <span class="number">63</span>ce4a6d6bc3        <span class="number">20</span> seconds ago      <span class="number">142.1</span> MB</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-import-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-import-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-import-命令&quot;&gt;&lt;a href=&quot;#Docker-import-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker import 命令&quot;&gt;&lt;/a&gt;Docker import 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker import 命令" scheme="http://www.gmlyo.com/tags/Docker-import-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker save 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-save-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-save-命令/</id>
    <published>2018-09-01T09:40:00.000Z</published>
    <updated>2018-09-01T09:42:22.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-save-命令"><a href="#Docker-save-命令" class="headerlink" title="Docker save 命令"></a>Docker save 命令</h1><a id="more"></a><p><strong>docker save :</strong> 将指定镜像保存成 tar 归档文件。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save <span class="string">[OPTIONS]</span> IMAGE <span class="string">[IMAGE...]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-o :</strong> 输出到的文件。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将镜像 runoob/ubuntu:v3 生成 my_ubuntu_v3.tar 文档</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@localhost ~]</span> <span class="selector-tag">docker</span> <span class="selector-tag">save</span> <span class="selector-tag">-o</span> <span class="selector-tag">my_ubuntu_v3</span><span class="selector-class">.tar</span> <span class="selector-tag">runoob</span>/<span class="selector-tag">ubuntu</span><span class="selector-pseudo">:v3</span></span><br><span class="line"><span class="selector-attr">[root@localhost ~]</span> <span class="selector-tag">ll</span> <span class="selector-tag">my_ubuntu_v3</span><span class="selector-class">.tar</span></span><br><span class="line"><span class="selector-tag">-rw-------</span> <span class="selector-tag">1</span> <span class="selector-tag">runoob</span> <span class="selector-tag">runoob</span> <span class="selector-tag">142102016</span> <span class="selector-tag">Jul</span> <span class="selector-tag">11</span> <span class="selector-tag">01</span><span class="selector-pseudo">:37</span> <span class="selector-tag">my_ubuntu_v3</span><span class="selector-class">.ta</span></span><br></pre></td></tr></table></figure><h3 id="Docker-容器导入导出有两种方法"><a href="#Docker-容器导入导出有两种方法" class="headerlink" title="Docker 容器导入导出有两种方法"></a>Docker 容器导入导出有两种方法</h3><p>一种是使用 save 和 load 命令<br>使用例子如下：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">save</span> ubuntu:<span class="keyword">load</span> &gt; /root/ubuntu.tar</span><br><span class="line">docker <span class="keyword">load</span> &lt; ubuntu.tar</span><br></pre></td></tr></table></figure><p>一种是使用 export 和 import 命令<br>使用例子如下：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">docker</span> <span class="keyword">export</span> <span class="number">98</span>ca36 &gt; ubuntu.tar</span><br><span class="line"><span class="title">cat</span> ubuntu.tar | sudo docker <span class="keyword">import</span> - ubuntu:<span class="keyword">import</span></span><br></pre></td></tr></table></figure><p>需要注意两种方法不可混用。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-save-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-save-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-save-命令&quot;&gt;&lt;a href=&quot;#Docker-save-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker save 命令&quot;&gt;&lt;/a&gt;Docker save 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker save 命令" scheme="http://www.gmlyo.com/tags/Docker-save-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker build 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-build-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-build-命令/</id>
    <published>2018-09-01T09:32:04.000Z</published>
    <updated>2018-09-01T09:32:41.862Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-build-命令"><a href="#Docker-build-命令" class="headerlink" title="Docker build 命令"></a>Docker build 命令</h1><a id="more"></a><p><strong>docker build </strong> 命令用于使用 Dockerfile 创建镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build [OPTIONS] PATH |<span class="string"> URL </span>|<span class="string"> -</span></span><br></pre></td></tr></table></figure><p>OPTIONS说明：</p><ul><li><strong>–build-arg=[] :</strong> 设置镜像创建时的变量；</li><li><strong>–cpu-shares :</strong> 设置 CPU 使用权重；</li><li><strong>–cpu-period :</strong> 限制 CPU CFS周期；</li><li><strong>–cpu-quota :</strong> 限制 CPU CFS配额；</li><li><strong>–cpuset-cpus :</strong> 指定使用的CPU id；</li><li><strong>–cpuset-mems :</strong> 指定使用的内存 id；</li><li><strong>–disable-content-trust :</strong> 忽略校验，默认开启；</li><li><strong>-f :</strong> 指定要使用的 Dockerfile 路径；</li><li><strong>–force-rm :</strong> 设置镜像过程中删除中间容器；</li><li><strong>–isolation :</strong> 使用容器隔离技术；</li><li><strong>–label=[] :</strong> 设置镜像使用的元数据；</li><li><strong>-m :</strong> 设置内存最大值；</li><li><strong>–memory-swap :</strong> 设置 swap 的最大值为 内存+swap，”-1” 表示不限 swap；</li><li><strong>–no-cache :</strong> 创建镜像的过程不使用缓存；</li><li><strong>–pull :</strong> 尝试去更新镜像的新版本；</li><li><strong>–quiet, -q :</strong> 安静模式，成功后只输出镜像 ID；</li><li><strong>–rm :</strong> 设置镜像成功后删除中间容器；</li><li><strong>–shm-size :</strong> 设置 /dev/shm 的大小，默认值是 64M；</li><li><strong>–ulimit :</strong> Ulimit 配置。</li><li><strong>–tag, -t:</strong> 镜像的名字及标签，通常 name:tag 或者 name 格式；可以在一次构建中为一个镜像设置多个标签。</li><li><strong>–network:</strong> 默认 default。在构建期间设置RUN指令的网络模式</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>使用当前目录的 Dockerfile 创建镜像，标签为 runoob/ubuntu:v1。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>-t runoob/ubuntu:<span class="built_in">v1</span> .</span><br></pre></td></tr></table></figure><p>使用 URL <strong>github.com/creack/docker-firefox</strong> 的 Dockerfile 创建镜像。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>github.com/creack/docker-firefox</span><br></pre></td></tr></table></figure><p>也可以通过 -f Dockerfile 文件的位置：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">build</span> -f /<span class="keyword">path</span>/<span class="keyword">to</span>/a/Dockerfile .</span><br></pre></td></tr></table></figure><p>在 Docker 守护进程执行 Dockerfile 中的指令前，首先会对 Dockerfile 进行语法检查，有语法错误时会返回：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build -t test/myapp .</span><br><span class="line">Sending build context to Docker daemon 2.048 kB</span><br><span class="line"><span class="keyword">Error </span>response from daemon: Unknown instruction: RUNCMD</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-build-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-build-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-build-命令&quot;&gt;&lt;a href=&quot;#Docker-build-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker build 命令&quot;&gt;&lt;/a&gt;Docker build 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker build 命令" scheme="http://www.gmlyo.com/tags/Docker-build-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker rmi 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-rmi-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-rmi-命令/</id>
    <published>2018-09-01T09:27:30.000Z</published>
    <updated>2018-09-01T09:28:46.334Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-rmi-命令"><a href="#Docker-rmi-命令" class="headerlink" title="Docker rmi 命令"></a>Docker rmi 命令</h1><a id="more"></a><p><strong>docker rmi :</strong> 删除本地一个或多个镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi <span class="string">[OPTIONS]</span> IMAGE <span class="string">[IMAGE...]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-f :</strong> 强制删除；</li><li><strong>–no-prune :</strong> 不移除该镜像的过程镜像，默认移除；</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>强制删除本地镜像 runoob/ubuntu:v4。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> ~] docker rmi -f runoob/<span class="string">ubuntu:</span>v4</span><br><span class="line"><span class="string">Untagged:</span> runoob/<span class="string">ubuntu:</span>v4</span><br><span class="line"><span class="string">Deleted:</span> <span class="string">sha256:</span><span class="number">1</span>c06aa18edee44230f93a90a7d88139235de12cd4c089d41eed8419b503072be</span><br><span class="line"><span class="string">Deleted:</span> <span class="string">sha256:</span><span class="number">85</span>feb446e89a28d58ee7d80ea5ce367eebb7cec70f0ec18aa4faa874cbd97c73</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-rmi-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-rmi-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-rmi-命令&quot;&gt;&lt;a href=&quot;#Docker-rmi-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker rmi 命令&quot;&gt;&lt;/a&gt;Docker rmi 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker rmi 命令" scheme="http://www.gmlyo.com/tags/Docker-rmi-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker images 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-images-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-images-命令/</id>
    <published>2018-09-01T09:25:10.000Z</published>
    <updated>2018-09-01T09:26:09.582Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-images-命令"><a href="#Docker-images-命令" class="headerlink" title="Docker images 命令"></a>Docker images 命令</h1><a id="more"></a><p><strong>docker images :</strong> 列出本地镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker images <span class="comment">[OPTIONS]</span> <span class="comment">[REPOSITORY<span class="comment">[:TAG]</span>]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-a :</strong> 列出本地所有的镜像（含中间映像层，默认情况下，过滤掉中间映像层）；</li><li><strong>–digests :</strong> 显示镜像的摘要信息；</li><li><strong>-f :</strong> 显示满足条件的镜像；</li><li><strong>–format :</strong> 指定返回值的模板文件；</li><li><strong>–no-trunc :</strong> 显示完整的镜像信息；</li><li><strong>-q :</strong> 只显示镜像ID。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查看本地镜像列表。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] docker images</span><br><span class="line">REPOSITORY              TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mymysql                 v1                  <span class="number">37</span>af1236adef        <span class="number">5</span> minutes ago       <span class="number">329</span> MB</span><br><span class="line">runoob/ubuntu           v4                  <span class="number">1</span>c06aa18edee        <span class="number">2</span> days ago          <span class="number">142.1</span> MB</span><br><span class="line">&lt;none&gt;                  &lt;none&gt;              <span class="number">5</span>c6e1090e771        <span class="number">2</span> days ago          <span class="number">165.9</span> MB</span><br><span class="line">httpd                   latest              ed38aaffef30        <span class="number">11</span> days ago         <span class="number">195.1</span> MB</span><br><span class="line">alpine                  latest              <span class="number">4e38</span>e38c8ce0        <span class="number">2</span> weeks ago         <span class="number">4.799</span> MB</span><br><span class="line">mongo                   <span class="number">3.2</span>                 <span class="number">282</span>fd552add6        <span class="number">3</span> weeks ago         <span class="number">336.1</span> MB</span><br><span class="line">redis                   latest              <span class="number">4465e4</span>bcad80        <span class="number">3</span> weeks ago         <span class="number">185.7</span> MB</span><br><span class="line">php                     <span class="number">5.6</span>-fpm             <span class="number">025041</span>cd3aa5        <span class="number">3</span> weeks ago         <span class="number">456.3</span> MB</span><br><span class="line">python                  <span class="number">3.5</span>                 <span class="number">045767</span>ddf24a        <span class="number">3</span> weeks ago         <span class="number">684.1</span> MB</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>列出本地镜像中 REPOSITORY 为 ubuntu 的镜像列表。</p><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] docker images ubuntu</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">ubuntu              <span class="number">14.04</span>               <span class="number">90</span>d5884b1ee0        <span class="number">9</span> weeks ago         <span class="number">188</span> MB</span><br><span class="line">ubuntu              <span class="number">15.10</span>               <span class="number">4e3</span>b13c8a266        <span class="number">3</span> months ago        <span class="number">136.3</span> MB</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-images-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-images-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-images-命令&quot;&gt;&lt;a href=&quot;#Docker-images-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker images 命令&quot;&gt;&lt;/a&gt;Docker images 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker images 命令" scheme="http://www.gmlyo.com/tags/Docker-images-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker cp 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-cp-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-cp-命令/</id>
    <published>2018-09-01T09:19:13.000Z</published>
    <updated>2018-09-01T09:20:01.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-cp-命令"><a href="#Docker-cp-命令" class="headerlink" title="Docker cp 命令"></a>Docker cp 命令</h1><a id="more"></a><p><strong>docker cp :</strong> 用于容器与主机之间的数据拷贝。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span>:SRC_PATH DEST_PATH|-</span><br><span class="line">docker cp <span class="comment">[OPTIONS]</span> SRC_PATH|- <span class="keyword">CONTAINER</span>:DEST_PATH</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-L :</strong> 保持源目标中的链接</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将主机 /www/runoob 目录拷贝到容器 <code>96f7f14e99ab</code> 的 /www 目录下。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="regexp">/www/</span>runoob <span class="number">96</span><span class="string">f7f14e99ab:</span><span class="regexp">/www/</span></span><br></pre></td></tr></table></figure><p>将主机 /www/runoob 目录拷贝到容器 <code>96f7f14e99ab</code> 中，目录重命名为 www。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="regexp">/www/</span>runoob <span class="number">96</span><span class="string">f7f14e99ab:</span>/www</span><br></pre></td></tr></table></figure><p>将容器 <code>96f7f14e99ab</code> 的 /www 目录拷贝到主机的 /tmp 目录中。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="number">96</span><span class="string">f7f14e99ab:</span><span class="regexp">/www /</span>tmp/</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-cp-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-cp-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-cp-命令&quot;&gt;&lt;a href=&quot;#Docker-cp-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker cp 命令&quot;&gt;&lt;/a&gt;Docker cp 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker cp 命令" scheme="http://www.gmlyo.com/tags/Docker-cp-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker commit 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-commit-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-commit-命令/</id>
    <published>2018-09-01T08:55:29.000Z</published>
    <updated>2018-09-01T08:56:15.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-commit-命令"><a href="#Docker-commit-命令" class="headerlink" title="Docker commit 命令"></a>Docker commit 命令</h1><a id="more"></a><p><strong>docker commit :</strong> 从容器创建一个新的镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[REPOSITORY<span class="comment">[:TAG]</span>]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-a :</strong> 提交的镜像作者；</li><li><strong>-c :</strong> 使用 Dockerfile 指令来创建镜像；</li><li><strong>-m :</strong> 提交时的说明文字；</li><li><strong>-p :</strong> 在 commit 时，将容器暂停。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将容器 <code>a404c6c174a2</code> 保存为新的镜像，并添加提交人信息和说明信息。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> ~] docker commit -a <span class="string">"runoob.com"</span> -m <span class="string">"my apache"</span> a404c6c174a2 <span class="string">mymysql:</span>v1 </span><br><span class="line"><span class="string">sha256:</span><span class="number">37</span>af1236adef1544e8886be23010b66577647a40bc02c0885a6600b33ee28057</span><br><span class="line">[root<span class="meta">@localhost</span> ~] docker images <span class="string">mymysql:</span>v1</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mymysql             v1                  <span class="number">37</span>af1236adef        <span class="number">15</span> seconds ago      <span class="number">329</span> MB</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-commit-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-commit-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-commit-命令&quot;&gt;&lt;a href=&quot;#Docker-commit-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker commit 命令&quot;&gt;&lt;/a&gt;Docker commit 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker commit 命令" scheme="http://www.gmlyo.com/tags/Docker-commit-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker port 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-port-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-port-命令/</id>
    <published>2018-09-01T08:52:46.000Z</published>
    <updated>2018-09-01T08:53:20.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-port-命令"><a href="#Docker-port-命令" class="headerlink" title="Docker port 命令"></a>Docker port 命令</h1><a id="more"></a><p><strong>docker port :</strong> 列出指定的容器的端口映射，或者查找将 PRIVATE_PORT NAT 到面向公众的端口。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="built_in"> port </span>[OPTIONS] CONTAINER [PRIVATE_PORT[/PROTO]]</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查看容器 mynginx 的端口映射情况。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] docker<span class="built_in"> port </span>mymysql</span><br><span class="line">3306/tcp -&gt; 0.0.0.0:3306</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-port-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-port-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-port-命令&quot;&gt;&lt;a href=&quot;#Docker-port-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker port 命令&quot;&gt;&lt;/a&gt;Docker port 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker port 命令" scheme="http://www.gmlyo.com/tags/Docker-port-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker export 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-export-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-export-命令/</id>
    <published>2018-09-01T08:42:53.000Z</published>
    <updated>2018-09-01T08:45:03.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-export-命令"><a href="#Docker-export-命令" class="headerlink" title="Docker export 命令"></a>Docker export 命令</h1><a id="more"></a><p><strong>docker export :</strong> 将文件系统作为一个 tar 归档文件导出到 STDOUT。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker export <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-o :</strong> 将输入内容写到文件。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将 <code>id</code> 为 <code>a404c6c174a2</code> 的容器按日期保存为 tar 文件。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="title">@localhost</span> ~]# docker export -o mysql-`date +<span class="symbol">%Y</span><span class="symbol">%m</span><span class="symbol">%d</span>`.tar a<span class="number">404</span><span class="keyword">c</span><span class="number">6</span><span class="keyword">c</span><span class="number">174</span>a<span class="number">2</span></span><br><span class="line">[root<span class="title">@localhost</span> ~]# ls mysql-`date +<span class="symbol">%Y</span><span class="symbol">%m</span><span class="symbol">%d</span>`.tar</span><br><span class="line">mysql<span class="number">-20160711</span>.tar</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-export-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-export-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-export-命令&quot;&gt;&lt;a href=&quot;#Docker-export-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker export 命令&quot;&gt;&lt;/a&gt;Docker export 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker export 命令" scheme="http://www.gmlyo.com/tags/Docker-export-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
