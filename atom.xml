<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>G加菲</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.gmlyo.com/"/>
  <updated>2018-06-27T14:50:01.766Z</updated>
  <id>http://www.gmlyo.com/</id>
  
  <author>
    <name>G加菲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>ActiveMQ安装与配置</title>
    <link href="http://www.gmlyo.com//blog/2018/06/27/ActiveMQ%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.gmlyo.com//blog/2018/06/27/ActiveMQ安装与配置/</id>
    <published>2018-06-27T14:37:43.000Z</published>
    <updated>2018-06-27T14:50:01.766Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ActiveMQ安装与配置"><a href="#ActiveMQ安装与配置" class="headerlink" title="ActiveMQ安装与配置"></a>ActiveMQ安装与配置</h2><a id="more"></a><p>操作系统  <code>CentOS7</code><br>建议 <code>ActiveMQ</code> 集群 和 <code>Zookeeper</code> 集群部署在同一台服务器上，否则随着时间的增加，<code>ActiveMQ</code> 集群容易出现假死的情况。</p><h3 id="JMS-支持的消息传递模型"><a href="#JMS-支持的消息传递模型" class="headerlink" title="JMS 支持的消息传递模型"></a>JMS 支持的消息传递模型</h3><blockquote><p>JMS 支持两种消息传递模型：<code>队列（Queue）</code>和 <code>主题（Topic）</code>。</p></blockquote><h3 id="点对点传递模型"><a href="#点对点传递模型" class="headerlink" title="点对点传递模型"></a>点对点传递模型</h3><blockquote><ol><li>点对点（<code>point-to-point</code>，简称 <code>PTP</code>）<code>Queue</code> 消息传递模型。<br> 通过该消息传递模型，一个应用程序（即消息生产者）可以向另外一个应用程序（即消息消费者）发送消息。</li><li>在此传递模型中，消息目的地类型是队列（即 <code>Destination</code> 接口实现类实例由 <code>Session</code> 接口实现类实例通过调用其 <code>createQueue</code> 方法并传入队列名称而创建）。</li><li>消息首先被传送至消息服务器端特定的队列中，然后从此对列中将消息传送至对此队列进行监听的某个消费者。同一个队列可以关联多个消息生产者和消息消费者，但一条消息仅能传递给一个消息消费者。</li><li>如果多个消息消费者正在监听队列上的消息，JMS消息服务器将根据“先来者优先”的原则确定由哪个消息消费者接收下一条消息。</li><li>如果没有消息消费者在监听队列，消息将保留在队列中，直至消息消费者连接到队列为止。这种消息传递模型是传统意义上的懒模型或轮询模型。</li><li>在此模型中，消息不是自动推动给消息消费者的，而是要由消息消费者从队列中请求获得。</li></ol></blockquote><h3 id="发布-订阅传递模型"><a href="#发布-订阅传递模型" class="headerlink" title="发布/订阅传递模型"></a>发布/订阅传递模型</h3><blockquote><ol><li>发布/订阅（<code>publish/subscribe</code>，简称 <code>pub/sub</code>）<code>Topic</code> 消息传递模型。</li><li>通过该消息传递模型，应用程序能够将一条消息发送给多个消息消费者。在此传送模型中，消息目的地类型是主题（即 <code>Destination</code> 接口实现类实例由 <code>Session</code> 接口实现类实例通过调用其 <code>createTopic</code> 方法并传入主题名称而创建）。</li><li>消息首先由消息生产者发布至消息服务器中特定的主题中，然后由消息服务器将消息传送至所有已订阅此主题的消费者。</li><li>主题目标也支持长期订阅。长期订阅表示消费者已注册了主题目标，但在消息到达目标时该消费者可以处于非活动状态。</li><li>当消费者再次处于活动状态时，将会接收该消息。如果消费者均没有注册某个主题目标，该主题只保留注册了长期订阅的非活动消费者的消息。</li><li>与 <code>PTP</code> 消息传递模型不同，<code>pub/sub</code> 消息传递模型允许多个主题订阅者接收同一条消息。<code>JMS</code> 一直保留消息，直至所有主题订阅者都接收到消息为止。</li><li><code>pub/sub</code> 消息传递模型基本上是一个推模型。在该模型中，消息会自动广播，消息消费者无须通过主动请求或轮询主题的方法来获得新的消息。</li></ol></blockquote><h3 id="具体区别对比如下"><a href="#具体区别对比如下" class="headerlink" title="具体区别对比如下"></a>具体区别对比如下</h3><table><thead><tr><th>类型</th><th>Topic</th><th>Queue</th></tr></thead><tbody><tr><td>概要</td><td><code>Publish Subscribe messaging</code> 发布订阅消息</td><td><code>Point-to-Point</code> 点对点</td></tr><tr><td>有无状态</td><td><code>Topic</code> 数据默认不落地，是无状态的。</td><td><code>Queue</code> 数据默认会在 <code>mq</code> 服务器上以文件形式保存，比如<code>Active MQ</code> 一般保存在 <code>$AMQ_HOME/data/kr-store/data</code> 下面。也可以配置成 <code>DB</code> 存储。</td></tr><tr><td>完整性保障</td><td>并不保证 <code>publisher</code> 发布的每条数据，<code>Subscriber</code> 都能接受到。</td><td><code>Queue</code> 保证每条数据都能被 <code>receiver</code> 接收。</td></tr><tr><td>消息是否会丢失</td><td>一般来说 <code>publisher</code> 发布消息到某一个 <code>topic</code> 时，只有正在监听该 <code>topic</code> 地址的 <code>sub</code> 能够接收到消息；如果没有 <code>sub</code> 在监听，该 <code>topic</code> 就丢失了。</td><td><code>Sender</code> 发送消息到目标 <code>Queue</code>，<code>receiver</code> 可以异步接收这个 <code>Queue</code> 上的消息。<code>Queue</code> 上的消息如果暂时没有 <code>receiver</code> 来取，也不会丢失。</td></tr><tr><td>消息发布接收策略</td><td>一对多的消息发布接收策略，监听同一个 <code>topic</code> 地址的多个 <code>sub</code> 都能收到 <code>publisher</code> 发送的消息。<code>Sub</code> 接收完通知 <code>mq</code> 服务器。</td><td>一对一的消息发布接收策略，一个 <code>sender</code> 发送的消息，只能有一个 <code>receiver</code> 接收。<code>receiver</code> 接收完后，通知 <code>mq</code> 服务器已接收，<code>mq</code> 服务器对 <code>queue</code> 里的消息采取删除或其他操作。</td></tr></tbody></table><h3 id="初始化环境"><a href="#初始化环境" class="headerlink" title="初始化环境"></a>初始化环境</h3><p>在此我们安装的是 <code>ActiveMQ 5.14.5</code>，<code>ActiveMQ 5.14.5</code> 使用的是 <code>jdk1.7</code>。<br><code>ActiveMQ 5.15.0</code> 使用的是 <code>jdk1.8</code>。</p><h4 id="安装-jdk1-7"><a href="#安装-jdk1-7" class="headerlink" title="安装 jdk1.7"></a>安装 <code>jdk1.7</code></h4><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cd <span class="regexp">/data/</span>tools/</span><br><span class="line">wget -c <span class="string">http:</span><span class="comment">//mirrors.linuxeye.com/jdk/jdk-7u80-linux-x64.tar.gz</span></span><br><span class="line">tar -zxvf jdk<span class="number">-7</span>u80-linux-x64.tar.gz -C <span class="regexp">/data/</span></span><br><span class="line">chown -R <span class="string">root:</span>root  <span class="regexp">/data/</span>jdk1<span class="number">.7</span><span class="number">.0</span>_80</span><br></pre></td></tr></table></figure><h4 id="添加环境变量"><a href="#添加环境变量" class="headerlink" title="添加环境变量"></a>添加环境变量</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">JAVA_HOME</span>=/data/jdk1.7.0_80</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">CLASSPATH</span>=.:$JAVA_HOME/lib/dt.jar:$JAVA_HOME/lib/tools.jar</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:$JAVA_HOME/bin</span><br><span class="line">source /etc/profile</span><br><span class="line">java -version</span><br></pre></td></tr></table></figure><h4 id="关闭-防火墙-和-selinux，同步服务器时间"><a href="#关闭-防火墙-和-selinux，同步服务器时间" class="headerlink" title="关闭 防火墙 和 selinux，同步服务器时间"></a>关闭 <code>防火墙</code> 和 <code>selinux</code>，同步服务器时间</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">ntpdate -u cn.ntp.org.cn</span><br><span class="line">sed -i ‘/SELINUX/s/enforcing/disabled/’ /etc/selinux/config</span><br><span class="line">setenforce 0</span><br><span class="line">systemctl <span class="builtin-name">disable</span> firewalld.service</span><br><span class="line">systemctl stop firewalld.service</span><br><span class="line">shutdown -r now</span><br></pre></td></tr></table></figure><h3 id="安装-ActiveMQ"><a href="#安装-ActiveMQ" class="headerlink" title="安装 ActiveMQ"></a>安装 ActiveMQ</h3><blockquote><p><code>ActiveMQ</code> 官网<br><a href="http://activemq.apache.org/" target="_blank" rel="noopener">http://activemq.apache.org/</a></p></blockquote><h4 id="下载-ActiveMQ"><a href="#下载-ActiveMQ" class="headerlink" title="下载 ActiveMQ"></a>下载 ActiveMQ</h4><p><a href="http://activemq.apache.org/download.html" target="_blank" rel="noopener">http://activemq.apache.org/download.html</a><br><a href="http://archive.apache.org/dist/activemq/" target="_blank" rel="noopener">http://archive.apache.org/dist/activemq/</a></p><h4 id="下载-ActiveMQ5-14-5"><a href="#下载-ActiveMQ5-14-5" class="headerlink" title="下载 ActiveMQ5.14.5"></a>下载 ActiveMQ5.14.5</h4><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">mkdir</span> -pv /<span class="meta">data</span>/app/activemq</span><br><span class="line"><span class="symbol">cd</span> /<span class="meta">data</span>/tools/</span><br><span class="line"><span class="symbol">wget</span> -c http://mirrors.hust.edu.cn/apache/activemq/<span class="number">5</span>.<span class="number">14</span>.<span class="number">5</span>/apache-activemq-<span class="number">5</span>.<span class="number">14</span>.<span class="number">5</span>-<span class="keyword">bin.tar.gz</span></span><br><span class="line"><span class="keyword">tar </span>-zxvf apache-activemq-<span class="number">5</span>.<span class="number">14</span>.<span class="number">5</span>-<span class="keyword">bin.tar.gz </span>-C /<span class="meta">data</span>/app/activemq –<span class="keyword">strip-components </span><span class="number">1</span></span><br></pre></td></tr></table></figure><h4 id="查看-ActiveMQ-目录结构"><a href="#查看-ActiveMQ-目录结构" class="headerlink" title="查看 ActiveMQ 目录结构"></a>查看 ActiveMQ 目录结构</h4><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ll -h</span></span><br></pre></td></tr></table></figure><table><thead><tr><th>文件名/目录名</th><th>详解</th></tr></thead><tbody><tr><td>activemq-all-5.14.5.jar</td><td><code>ActiveMQ</code> 所有 <code>jar</code></td></tr><tr><td>bin</td><td><code>ActiveMQ</code> 启动命令的二进制执行文件及一些命令脚本</td></tr><tr><td>conf</td><td><code>ActiveMQ</code> 配置目录，包含最基本的 <code>ActiveMQ</code> 配置文件</td></tr><tr><td>data</td><td><code>ActiveMQ</code> 数据目录，默认为空。包含 <code>ActiveMQ</code> 的进程文件、数据文件、日志文件。该目录也是 <code>ActiveMQ</code> 消息持久化的目录</td></tr><tr><td>docs</td><td>用户使用帮助相关文件</td></tr><tr><td>examples</td><td>操作 <code>ActiveMQ</code> 相关实例</td></tr><tr><td>lib</td><td><code>ActiveMQ</code> 需要的类库</td></tr><tr><td>webapps</td><td><code>ActiveMQ</code> 控制台应用目录</td></tr><tr><td>webapps-demo</td><td><code>ActiveMQ</code> 使用实例目录</td></tr><tr><td>LICENSE</td><td><code>ActiveMQ</code> 所有包使用的 <code>Apache</code> 开源消息协议</td></tr><tr><td>NOTICE</td><td><code>ActiveMQ</code> 版权信息</td></tr><tr><td>README</td><td>用户使用引导文件，包括一些文档及 <code>URL</code></td></tr></tbody></table><h4 id="启动-ActiveMQ"><a href="#启动-ActiveMQ" class="headerlink" title="启动 ActiveMQ"></a>启动 <code>ActiveMQ</code></h4><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">/<span class="class"><span class="keyword">data</span>/app/activemq/bin/activemq start</span></span><br><span class="line"><span class="title">tail</span> -f /<span class="class"><span class="keyword">data</span>/app/activemq/<span class="keyword">data</span>/activemq.log</span></span><br></pre></td></tr></table></figure><h4 id="ActiveMQ-启动方式"><a href="#ActiveMQ-启动方式" class="headerlink" title="ActiveMQ 启动方式"></a><code>ActiveMQ</code> 启动方式</h4><blockquote><p>普通启动<br><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/<span class="meta">data</span>/app/activemq/<span class="keyword">bin/activemq </span>start</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>后台启动并指定日志文件<br><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup <span class="regexp">/data/</span>app<span class="regexp">/activemq/</span>bin<span class="regexp">/activemq start &gt; /</span>data<span class="regexp">/app/</span>activemq<span class="regexp">/logs/</span>smlog <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="ActiveMQ-管理控制台"><a href="#ActiveMQ-管理控制台" class="headerlink" title="ActiveMQ 管理控制台"></a><code>ActiveMQ</code> 管理控制台</h3><blockquote><p><code>ActiveMQ</code> 默认的管理后台端口是 <code>8161</code>，默认管理用户名和密码均是 <code>admin</code>。<br><code>ActiveMQ</code> 默认的管理后台端口，可以在 <code>ActiveMQ</code> 的配置文件 <code>jetty.xml</code> 中查看到<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim /data/app/activemq/conf/jetty.xml +110</span><br><span class="line">&lt;property <span class="attribute">name</span>=”port” <span class="attribute">value</span>=”8161″/&gt;</span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p><code>ActiveMQ</code> 默认管理用户名和密码均是 <code>admin</code>，如果要修改默认用户名和密码的话，可以通过修改 <code>jetty-realm.properties</code> 文件来达到目的<br><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /data/app/activemq/conf/jetty-realm.properties</span><br><span class="line"><span class="literal">admin</span>: password@<span class="number">123</span>, <span class="literal">admin</span></span><br><span class="line"><span class="literal">user</span>: <span class="literal">user</span>@<span class="number">123</span>, <span class="literal">user</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>注意：<code>ActiveMQ</code> 用户名和密码的格式是<br><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">username:</span> password, rolename</span><br></pre></td></tr></table></figure></p></blockquote><h4 id="登陆管理控制台"><a href="#登陆管理控制台" class="headerlink" title="登陆管理控制台"></a>登陆管理控制台</h4><p><a href="http://x.x.x.x:8161/admin" target="_blank" rel="noopener">http://x.x.x.x:8161/admin</a></p><h4 id="管理控制台介绍"><a href="#管理控制台介绍" class="headerlink" title="管理控制台介绍"></a>管理控制台介绍</h4><blockquote><p>在 <code>ActiveMQ</code> 的管理控制台，关注比较多的是 <code>Queues队列</code> 和 <code>Topics主题</code>。</p></blockquote><p><code>Queues队列</code> 选项</p><table><thead><tr><th>字段</th><th>详解</th></tr></thead><tbody><tr><td>Number Of Pending Messages</td><td>表示还有多少条消息没有被消费，实际上是表示消息的积压程度。</td></tr><tr><td>Number Of Consumers</td><td>表示在该队列上还有多少消费者在等待接受消息。其实就是消费者的数量。</td></tr><tr><td>Messages Enqueued</td><td>表示生产了多少条消息。</td></tr><tr><td>Messages Dequeued</td><td>表示消费了多少条消息。</td></tr></tbody></table><p><code>Topics主题</code> 选项</p><table><thead><tr><th>字段</th><th>详解</th></tr></thead><tbody><tr><td>Number Of Consumers</td><td>表示在该队列上还有多少消费者在等待接受消息。</td></tr><tr><td>Messages Enqueued</td><td>表示生产了多少条消息。</td></tr><tr><td>Messages Dequeued</td><td>表示消费了多少条消息。</td></tr></tbody></table>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;ActiveMQ安装与配置&quot;&gt;&lt;a href=&quot;#ActiveMQ安装与配置&quot; class=&quot;headerlink&quot; title=&quot;ActiveMQ安装与配置&quot;&gt;&lt;/a&gt;ActiveMQ安装与配置&lt;/h2&gt;
    
    </summary>
    
      <category term="ActiveMQ笔记" scheme="http://www.gmlyo.com/categories/ActiveMQ%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="ActiveMQ安装与配置" scheme="http://www.gmlyo.com/tags/ActiveMQ%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>os模块</title>
    <link href="http://www.gmlyo.com//blog/2018/06/21/os%E6%A8%A1%E5%9D%97/"/>
    <id>http://www.gmlyo.com//blog/2018/06/21/os模块/</id>
    <published>2018-06-20T22:54:22.000Z</published>
    <updated>2018-06-21T00:44:10.029Z</updated>
    
    <content type="html"><![CDATA[<h2 id="os-模块"><a href="#os-模块" class="headerlink" title="os 模块"></a>os 模块</h2><blockquote><p><code>os</code> 模块是与操作系统交互的一个接口</p></blockquote><a id="more"></a><table><thead><tr><th>模块方法</th><th>注释</th></tr></thead><tbody><tr><td><code>os.getcwd()</code></td><td>获取当前工作目录，即当前 <code>python</code> 脚本工作的目录路径</td></tr><tr><td><code>os.chdir(&quot;dirname&quot;)</code></td><td>改变当前脚本工作目录；相当于 <code>shell</code> 下 <code>cd</code></td></tr><tr><td><code>os.curdir</code></td><td>返回当前目录: (<code>&#39;.&#39;</code>)</td></tr><tr><td><code>os.pardir</code></td><td>获取当前目录的父目录字符串名：(<code>&#39;..&#39;</code>)</td></tr><tr><td><code>os.makedirs(&#39;dirname1/dirname2&#39;)</code></td><td>可生成多层递归目录</td></tr><tr><td><code>os.removedirs(&#39;dirname1&#39;)</code></td><td>若目录为空，则删除，并递归到上一级目录，如若也为空，则删除，依此类推</td></tr><tr><td><code>os.mkdir(&#39;dirname&#39;)</code></td><td>生成单级目录；相当于 <code>shell</code> 中 <code>mkdir dirname</code></td></tr><tr><td><code>os.rmdir(&#39;dirname&#39;)</code></td><td>删除单级空目录，若目录不为空则无法删除，报错；相当于 <code>shell</code> 中 <code>rmdir dirname</code></td></tr><tr><td><code>os.listdir(&#39;dirname&#39;)</code></td><td>列出指定目录下的所有文件和子目录，包括隐藏文件，并以列表方式打印</td></tr><tr><td><code>os.remove()</code></td><td>删除一个文件</td></tr><tr><td><code>os.rename(&quot;oldname&quot;,&quot;newname&quot;)</code></td><td>重命名文件/目录</td></tr><tr><td><code>os.stat(&#39;path/filename&#39;)</code></td><td>获取文件/目录信息</td></tr><tr><td><code>os.sep</code></td><td>输出操作系统特定的路径分隔符，Windows下为<code>&quot;\\&quot;</code>，Linux下为<code>&quot;/&quot;</code></td></tr><tr><td><code>os.linesep</code></td><td>输出当前平台使用的行终止符，Windows下为<code>&quot;\t\n&quot;</code>，Linux下为<code>&quot;\n&quot;</code></td></tr><tr><td><code>os.pathsep</code></td><td>输出用于分割文件路径的字符串，Windows下为<code>;</code>，Linux下为<code>:</code></td></tr><tr><td><code>os.name</code></td><td>输出字符串指示当前使用平台。Windows-&gt;<code>&#39;nt&#39;</code>，Linux-&gt;<code>&#39;posix&#39;</code></td></tr><tr><td><code>os.system(&quot;bash command&quot;)</code></td><td>运行<code>shell</code>命令，直接显示</td></tr><tr><td><code>os.environ</code></td><td>获取系统环境变量</td></tr><tr><td><code>os.path.abspath(path)</code></td><td>返回 <code>path</code> 规范化的绝对路径</td></tr><tr><td><code>os.path.split(path)</code></td><td>将 <code>path</code> 分割成目录和文件名二元组返回</td></tr><tr><td><code>os.path.dirname(path)</code></td><td>返回 <code>path</code> 的目录。其实就是 <code>os.path.split(path)</code> 的第一个元素</td></tr><tr><td><code>os.path.basename(path)</code></td><td>返回 <code>path</code> 最后的文件名。如何 <code>path</code> 以 <code>/</code> 或 <code>\</code> 结尾，那么就会返回空值。即 <code>os.path.split(path)</code> 的第二个元素</td></tr><tr><td><code>os.path.exists(path)</code></td><td>如果 <code>path</code> 存在，返回 <code>True</code>；如果 <code>path</code> 不存在，返回 <code>False</code></td></tr><tr><td><code>os.path.isabs(path)</code></td><td>如果 <code>path</code> 是绝对路径，返回 <code>True</code></td></tr><tr><td><code>os.path.isfile(path)</code></td><td>如果 <code>path</code> 是一个存在的文件，返回 <code>True</code>。否则返回 <code>False</code></td></tr><tr><td><code>os.path.isdir(path)</code></td><td>如果 <code>path</code> 是一个存在的目录，则返回 <code>True</code>。否则返回 <code>False</code></td></tr><tr><td><code>os.path.join(path1[, path2[, ...]])</code></td><td>将多个路径组合后返回，第一个绝对路径之前的参数将被忽略</td></tr><tr><td><code>os.path.getatime(path)</code></td><td>返回 <code>path</code> 所指向的文件或者目录的最后存取时间</td></tr><tr><td><code>os.path.getmtime(path)</code></td><td>返回 <code>path</code> 所指向的文件或者目录的最后修改时间</td></tr><tr><td><code>os.path.getsize(path)</code></td><td>返回 <code>path</code> 的大小</td></tr></tbody></table><h3 id="列出指定目录下的所有文件和子目录"><a href="#列出指定目录下的所有文件和子目录" class="headerlink" title="列出指定目录下的所有文件和子目录"></a>列出指定目录下的所有文件和子目录</h3><blockquote><p>包括隐藏文件，并以列表方式打印</p></blockquote><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">print(os.listdir(<span class="string">r'.'</span>))</span><br><span class="line"></span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">[<span class="string">'01 时间模块.py'</span>, <span class="string">'02 random模块.py'</span>, <span class="string">'03 os模块.py'</span>, <span class="string">'今日内容.txt'</span>]</span><br></pre></td></tr></table></figure><h3 id="获取-文件-目录-信息"><a href="#获取-文件-目录-信息" class="headerlink" title="获取 文件/目录 信息"></a>获取 <code>文件/目录</code> 信息</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import os</span><br><span class="line"></span><br><span class="line">print<span class="params">(os.stat('今日内容.txt')</span>)</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">os.stat_result<span class="params">(<span class="attr">st_mode</span>=33206, <span class="attr">st_ino</span>=4503599627409980, <span class="attr">st_dev</span>=239211959, <span class="attr">st_nlink</span>=1, <span class="attr">st_uid</span>=0, <span class="attr">st_gid</span>=0, <span class="attr">st_size</span>=280, <span class="attr">st_atime</span>=1526694304, <span class="attr">st_mtime</span>=1526694304, <span class="attr">st_ctime</span>=1526694102)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取文件大小，以 bytes 为单位</span></span><br><span class="line">print<span class="params">(os.stat('今日内容.txt')</span><span class="string">.st_size</span>)</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">280</span><br></pre></td></tr></table></figure><h3 id="获取-文件-大小信息"><a href="#获取-文件-大小信息" class="headerlink" title="获取 文件 大小信息"></a>获取 <code>文件</code> 大小信息</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">print(os.path.getsize(<span class="string">r'E:\PycharmProjects\SH_s1\day07\今日内容.txt'</span>))</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line"><span class="number">280</span></span><br></pre></td></tr></table></figure><h3 id="os-system-quot-bash-command-quot-方法"><a href="#os-system-quot-bash-command-quot-方法" class="headerlink" title="os.system(&quot;bash command&quot;) 方法"></a><code>os.system(&quot;bash command&quot;)</code> 方法</h3><blockquote><p>运行<code>shell</code>命令，直接显示</p></blockquote><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"></span><br><span class="line">os.<span class="keyword">system</span>(<span class="string">'tasklist'</span>)  # 输出 Windows 下当前所有进程列表</span><br><span class="line"></span><br><span class="line"># os.<span class="keyword">system</span>() 只是单纯的执行命令，并不能把命令执行后的结果做进一步的处理</span><br><span class="line">res = os.<span class="keyword">system</span>(<span class="string">'tasklist'</span>)</span><br><span class="line">print(<span class="string">'res----&gt;'</span>, res)  # res变量只是命令的执行成功与否的执行状态</span><br><span class="line"># 输出结果</span><br><span class="line">res----&gt; <span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="os-environ-方法"><a href="#os-environ-方法" class="headerlink" title="os.environ 方法"></a><code>os.environ</code> 方法</h3><blockquote><p>获取系统环境变量</p></blockquote><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">全局的</span><br><span class="line">用于在程序任何地方都需要用到它的结果的时候</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">os</span>.environ[<span class="string">'login'</span>] = <span class="string">'yes'</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.environ[<span class="string">'login'</span>])</span><br><span class="line"># 输出结果</span><br><span class="line">yes</span><br></pre></td></tr></table></figure><h3 id="os-path-split-path-方法"><a href="#os-path-split-path-方法" class="headerlink" title="os.path.split(path) 方法"></a><code>os.path.split(path)</code> 方法</h3><blockquote><p>将 <code>path</code> 分割成 <code>目录</code> 和 <code>文件名</code> 二元组返回</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.split(<span class="string">'/a/b/c/d.txt'</span>))</span><br><span class="line"></span><br><span class="line"># 输出结果</span><br><span class="line">(<span class="string">'/a/b/c'</span>, <span class="string">'d.txt'</span>)</span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.split(<span class="string">'/a/b/c/d.txt'</span>)[<span class="number">0</span>])</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.split(<span class="string">'/a/b/c/d.txt'</span>)[<span class="number">1</span>])</span><br><span class="line"># 输出结果</span><br><span class="line">/a/b/c</span><br><span class="line">d.txt</span><br></pre></td></tr></table></figure><h3 id="os-path-dirname-path-方法"><a href="#os-path-dirname-path-方法" class="headerlink" title="os.path.dirname(path) 方法"></a><code>os.path.dirname(path)</code> 方法</h3><blockquote><p>返回 <code>path</code> 的 <code>目录</code><br>其实就是 <code>os.path.split(path)</code> 的第一个元素</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.dirname(<span class="string">'a/b/c/d.txt'</span>))</span><br><span class="line"># 输出结果</span><br><span class="line">a/b/c</span><br></pre></td></tr></table></figure><h3 id="os-path-basename-path-方法"><a href="#os-path-basename-path-方法" class="headerlink" title="os.path.basename(path) 方法"></a><code>os.path.basename(path)</code> 方法</h3><blockquote><p>返回 <code>path</code> 最后的 <code>文件名</code><br>如何 <code>path</code> 以 <code>/</code> 或 <code>\</code> 结尾，那么就会返回空值<br>即 <code>os.path.split(path)</code> 的第二个元素</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.basename(<span class="string">'a/b/c/d.txt'</span>))</span><br><span class="line"># 输出结果</span><br><span class="line">d.txt</span><br></pre></td></tr></table></figure><h3 id="os-path-join-path1-path2-…-方法"><a href="#os-path-join-path1-path2-…-方法" class="headerlink" title="os.path.join(path1[, path2[, …]]) 方法"></a>os.path.join(path1[, path2[, …]]) 方法</h3><blockquote><p>用于拼接路径<br>将多个路径组合后返回，第一个绝对路径之前的参数将被忽略</p></blockquote><figure class="highlight moonscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.path.join(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'c'</span>, <span class="string">'d.txt'</span>))</span><br><span class="line"># 输出结果</span><br><span class="line">a\b\c\d.txt</span><br></pre></td></tr></table></figure><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(os.path.join(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'D:\\'</span>, <span class="string">'c'</span>, <span class="string">'d.txt'</span>))</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">D:<span class="string">\c\d.txt</span></span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.join(<span class="string">'a'</span>, <span class="string">'b'</span>, <span class="string">'d'</span>, <span class="string">'c'</span>, <span class="string">'/'</span>, <span class="string">'d.txt'</span>))</span><br><span class="line"># 输出结果</span><br><span class="line">/d.txt</span><br></pre></td></tr></table></figure><h3 id="os-path-normcase-path-方法"><a href="#os-path-normcase-path-方法" class="headerlink" title="os.path.normcase(path) 方法"></a><code>os.path.normcase(path)</code> 方法</h3><blockquote><p>只用于 <code>Windows</code> 系统，规范 Windows 目录<br>在 <code>Windows</code> 平台上会将路径中所有字符转换为小写，将路径中的左斜杠转换为 <code>Windows</code> 中的右斜杠<br>在 <code>Linux</code> 和 <code>Mac</code> 平台上，该函数会原样返回 <code>path</code></p></blockquote><figure class="highlight livescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">print</span>(os.path.normcase(<span class="string">'c:/windOws\\system32\\'</span>))</span><br><span class="line"><span class="comment"># 输出结果</span></span><br><span class="line">c:<span class="string">\windows\system32\</span></span><br></pre></td></tr></table></figure><h3 id="os-path-normpath-path-方法"><a href="#os-path-normpath-path-方法" class="headerlink" title="os.path.normpath(path) 方法"></a><code>os.path.normpath(path)</code> 方法</h3><blockquote><p>用于规范路径<br>如 <code>(..)</code> 点点 <code>(/)</code> 斜杠</p></blockquote><figure class="highlight taggerscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">print(os.path.normpath('c:<span class="symbol">\\</span>windOws/a/b/../system32<span class="symbol">\\</span>'))</span><br><span class="line"># 输出结果</span><br><span class="line">c:<span class="symbol">\w</span>indOws<span class="symbol">\a</span><span class="symbol">\s</span>ystem32</span><br><span class="line"></span><br><span class="line">print(os.path.normpath('c://windows<span class="symbol">\\</span>System32<span class="symbol">\\</span>../Temp/'))</span><br><span class="line"># 输出结果</span><br><span class="line">c:<span class="symbol">\w</span>indows<span class="symbol">\T</span>emp</span><br><span class="line"></span><br><span class="line">a = '/Users/jieli/test1/<span class="symbol">\\</span><span class="symbol">\a</span>1/<span class="symbol">\\</span><span class="symbol">\\</span>aa.py/../..'</span><br><span class="line">print(os.path.normpath(a))</span><br><span class="line"># 输出结果</span><br><span class="line">/Users/jieli/test1</span><br></pre></td></tr></table></figure><h3 id="os-路径处理"><a href="#os-路径处理" class="headerlink" title="os 路径处理"></a><code>os</code> 路径处理</h3><blockquote><p>常用路径处理方法</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">os<span class="selector-class">.path</span><span class="selector-class">.dirname</span>(os<span class="selector-class">.path</span><span class="selector-class">.dirname</span>(os<span class="selector-class">.path</span><span class="selector-class">.abspath</span>(__file__)))</span><br><span class="line"></span><br><span class="line">os<span class="selector-class">.path</span><span class="selector-class">.dirname</span>(os<span class="selector-class">.path</span><span class="selector-class">.dirname</span>(os<span class="selector-class">.path</span><span class="selector-class">.dirname</span>(os<span class="selector-class">.path</span><span class="selector-class">.abspath</span>(__file__))))</span><br></pre></td></tr></table></figure><blockquote><p><code>OpenStack</code> 中获取路径方式</p></blockquote><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">OpenStack 获取路径方式</span><br><span class="line">res = <span class="built_in">os</span>.<span class="built_in">path</span>.join(</span><br><span class="line">    <span class="built_in">os</span>.<span class="built_in">path</span>.abspath(__file__),</span><br><span class="line">    <span class="string">'..'</span>,</span><br><span class="line">    <span class="string">'..'</span></span><br><span class="line">)</span><br><span class="line"><span class="built_in">print</span>(res)</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.normpath(res))</span><br><span class="line"># 输出结果</span><br><span class="line">E:\PycharmProjects\SH_s1\day07\<span class="number">03</span> <span class="built_in">os</span>模块.py\..\..</span><br><span class="line">E:\PycharmProjects\SH_s1</span><br><span class="line"></span><br><span class="line"># 合并一下</span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">os</span>.<span class="built_in">path</span>.normpath(</span><br><span class="line">    <span class="built_in">os</span>.<span class="built_in">path</span>.join(</span><br><span class="line">        <span class="built_in">os</span>.<span class="built_in">path</span>.abspath(__file__),</span><br><span class="line">        <span class="string">'..'</span>,</span><br><span class="line">        <span class="string">'..'</span></span><br><span class="line">    )</span><br><span class="line">))</span><br></pre></td></tr></table></figure><figure class="highlight lua"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">import <span class="built_in">os</span></span><br><span class="line"></span><br><span class="line">import <span class="built_in">os</span>,sys</span><br><span class="line">possible_topdir = <span class="built_in">os</span>.<span class="built_in">path</span>.normpath(<span class="built_in">os</span>.<span class="built_in">path</span>.join(</span><br><span class="line">    <span class="built_in">os</span>.<span class="built_in">path</span>.abspath(__file__),</span><br><span class="line">    <span class="built_in">os</span>.pardir,    # 上一级</span><br><span class="line">    <span class="built_in">os</span>.pardir,</span><br><span class="line">    <span class="built_in">os</span>.pardir</span><br><span class="line">))</span><br><span class="line">sys.<span class="built_in">path</span>.<span class="built_in">insert</span>(<span class="number">0</span>, possible_topdir)</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.cnblogs.com/linhaifeng/articles/6384466.html#_label3" target="_blank" rel="noopener">http://www.cnblogs.com/linhaifeng/articles/6384466.html#_label3</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;os-模块&quot;&gt;&lt;a href=&quot;#os-模块&quot; class=&quot;headerlink&quot; title=&quot;os 模块&quot;&gt;&lt;/a&gt;os 模块&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;os&lt;/code&gt; 模块是与操作系统交互的一个接口&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python笔记" scheme="http://www.gmlyo.com/categories/Python%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="os模块" scheme="http://www.gmlyo.com/tags/os%E6%A8%A1%E5%9D%97/"/>
    
  </entry>
  
  <entry>
    <title>调整Linux的网络栈Buffer_Size来提升网络性能</title>
    <link href="http://www.gmlyo.com//blog/2018/06/20/%E8%B0%83%E6%95%B4Linux%E7%9A%84%E7%BD%91%E7%BB%9C%E6%A0%88Buffer_Size%E6%9D%A5%E6%8F%90%E5%8D%87%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD/"/>
    <id>http://www.gmlyo.com//blog/2018/06/20/调整Linux的网络栈Buffer_Size来提升网络性能/</id>
    <published>2018-06-20T14:53:53.000Z</published>
    <updated>2018-06-20T14:54:06.725Z</updated>
    
    <content type="html"><![CDATA[<p>调整 <code>Linux</code> 的网络栈 <code>Buffer Size</code> 来提升网络性能</p><blockquote><p>有两台位于不同数据中心的服务器，都用来处理很多并行的大文件传输。但是处理大文件，网络性能非常差。并且涉及到一个大文件，会导致性能降级。怎样通过调整 <code>Linux</code>下面的 <code>TCP</code> 来解决这个问题？</p></blockquote><a id="more"></a><blockquote><p>默认，<code>Linux</code> 的 <code>stack</code> 是没有为广域网之间的大文件高速传输而配置的，这样做是为了节约内存资源。为了使连接的系统服务之间能有更加高速的网络处理更多的网络包，你可以很容易的通过增加网络 <code>buffer size</code> 来调整 <code>Linux</code> 网络 <code>stack</code>。</p></blockquote><blockquote><p>默认的 <code>Linux buffer size</code> 的最大值是非常小的，<code>tcp</code> 的内存是基于系统的内存自动计算的，你能通过键入以下命令找到实际的值</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="regexp">/proc/</span>sys<span class="regexp">/net/i</span>pv4<span class="regexp">/tcp_mem</span></span><br></pre></td></tr></table></figure><blockquote><p>默认的和最大的接收数据包内存大小</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>core/rmem_default</span><br><span class="line">cat <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>core/rmem_max</span><br></pre></td></tr></table></figure><blockquote><p>默认的和最大的发送数据包内存的大小</p></blockquote><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>core/wmem_default</span><br><span class="line">cat <span class="meta-keyword">/proc/</span>sys<span class="meta-keyword">/net/</span>core/wmem_max</span><br></pre></td></tr></table></figure><blockquote><p>最大的内存 buffers 的选项</p></blockquote><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cat <span class="regexp">/proc/</span>sys<span class="regexp">/net/</span>core<span class="regexp">/optmem_max</span></span><br></pre></td></tr></table></figure><h3 id="调整值"><a href="#调整值" class="headerlink" title="调整值"></a>调整值</h3><blockquote><p>为所有的协议队列设置操作系统层面的最大的发送 <code>buffer size(wmem)</code> 和 接收 <code>buffer size (rmem)</code>为 12MB。换句话说，设置内存数量，分配给每一个为了传送文件而打开或者是创建的 <code>tcp socket</code>。</p></blockquote><blockquote><p>警告！在大多数的 Linux 中 <code>rmem_max</code> 和 <code>wmem_max</code> 被分配的值为 128k，在一个低延迟的网络环境中，或者是 apps 比如 DNS、Web Server，这或许是足够的。尽管如此，如果延迟太大，默认的值可能就太小了，所以请记录以下在你的服务器上用来提高内存使用方法的设置。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'net.core.wmem_max=12582912'</span> <span class="meta">&gt;&gt; </span>/etc/sysctl.conf</span><br><span class="line">echo <span class="string">'net.core.rmem_max=12582912'</span> <span class="meta">&gt;&gt; </span>/etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>还需要设置 <code>minimum size</code>, <code>initial size</code>, and <code>maximum size</code> in bytes</p></blockquote><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">echo 'net.ipv4.tcp_rmem= <span class="number">1024</span>0 <span class="number">8738</span>0 <span class="number">12582912</span>' &gt;&gt; /etc/sysctl.conf</span><br><span class="line">echo 'net.ipv4.tcp_wmem= <span class="number">1024</span>0 <span class="number">8738</span>0 <span class="number">12582912</span>' &gt;&gt; /etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>打开 <code>window scaling</code>，这是一个用来扩展传输窗口的选项</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'net.ipv4.tcp_window_scaling = 1'</span> <span class="meta">&gt;&gt; </span>/etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>确保定义在 <code>RFC1323</code> 中的 <code>timestamps</code> 打开</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'net.ipv4.tcp_timestamps = 1'</span> <span class="meta">&gt;&gt; </span>/etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>确保 select acknowledgments</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'net.ipv4.tcp_sack = 1'</span> <span class="meta">&gt;&gt; </span>/etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>这个 “select acknowledgments” 不知道该如何翻译，翻译为“选择确认？”</p></blockquote><blockquote><p>当连接关闭的时候，<code>TCP</code> 默认缓存了很多连接指标在 <code>route cache</code> 中，以至于在不久的将来，连接建立的时候，可以用这些值来设置初始化条件。通常，这提升了整体的性能，但是，有时候会引起性能下降， 如果设置的话，<code>TCP</code> 在关闭的时候不缓存这些指标。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'net.ipv4.tcp_no_metrics_save = 1'</span> <span class="meta">&gt;&gt; </span>/etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>当 <code>interface</code> 接收到的数据包数量比内核处理速度的快的时候， 设置 <code>input</code> 队列最大的 <code>packets</code> 数量值。</p></blockquote><figure class="highlight ruby"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">echo <span class="string">'net.core.netdev_max_backlog = 5000'</span> <span class="meta">&gt;&gt; </span>/etc/sysctl.conf</span><br></pre></td></tr></table></figure><blockquote><p>现在重载这些改变，使其生效</p></blockquote><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">sysctl -p</span></span><br></pre></td></tr></table></figure><blockquote><p>使用 <code>tcpdump</code> 命令查看 通过 <code>eth0</code> 数据包流量的变化</p></blockquote><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">tcpdump</span> -ni eth0</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="https://segmentfault.com/a/1190000000473365" target="_blank" rel="noopener">https://segmentfault.com/a/1190000000473365</a></p><h3 id="推荐阅读"><a href="#推荐阅读" class="headerlink" title="推荐阅读"></a>推荐阅读</h3><ul><li>请参考内核文档<a href="http://www.cyberciti.biz/files/linux-kernel/Documentation/networking/ip-sysctl.txt" target="_blank" rel="noopener">/networking/ip-sysctl.txt</a>获取更加多的信息</li><li>请查看 <code>sysctl</code> 的 <code>man</code> 手册</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;调整 &lt;code&gt;Linux&lt;/code&gt; 的网络栈 &lt;code&gt;Buffer Size&lt;/code&gt; 来提升网络性能&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;有两台位于不同数据中心的服务器，都用来处理很多并行的大文件传输。但是处理大文件，网络性能非常差。并且涉及到一个大文件，会导致性能降级。怎样通过调整 &lt;code&gt;Linux&lt;/code&gt;下面的 &lt;code&gt;TCP&lt;/code&gt; 来解决这个问题？&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Linux内核优化笔记" scheme="http://www.gmlyo.com/categories/Linux%E5%86%85%E6%A0%B8%E4%BC%98%E5%8C%96%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="调整Linux的网络栈Buffer_Size来提升网络性能" scheme="http://www.gmlyo.com/tags/%E8%B0%83%E6%95%B4Linux%E7%9A%84%E7%BD%91%E7%BB%9C%E6%A0%88Buffer-Size%E6%9D%A5%E6%8F%90%E5%8D%87%E7%BD%91%E7%BB%9C%E6%80%A7%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Tomcat中Connector常用配置</title>
    <link href="http://www.gmlyo.com//blog/2018/06/15/Tomcat%E4%B8%ADConnector%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    <id>http://www.gmlyo.com//blog/2018/06/15/Tomcat中Connector常用配置/</id>
    <published>2018-06-14T17:12:31.000Z</published>
    <updated>2018-06-14T17:40:37.465Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Tomcat-中-Connector-常用配置"><a href="#Tomcat-中-Connector-常用配置" class="headerlink" title="Tomcat 中 Connector 常用配置"></a>Tomcat 中 Connector 常用配置</h2><table><thead><tr><th>模式</th><th>描述</th></tr></thead><tbody><tr><td>BIO</td><td>阻塞式 <code>I/O</code>，采用传统的 <code>java I/O</code> 进行操作，该模式下每个请求都会创建一个线程，适用于并发量小的场景</td></tr><tr><td>NIO</td><td>同步非阻塞，比传统 <code>BIO</code> 能更好的支持大并发，<code>Tomcat 8.0</code> 后默认采用该模式</td></tr><tr><td>APR</td><td><code>Tomcat</code> 以JNI形式调用http服务器的核心动态链接库来处理文件读取或网络传输操作，需要编译安装 <code>APR</code> 库</td></tr><tr><td>AIO</td><td>异步非阻塞，Tomcat 8.0 后支持</td></tr></tbody></table><blockquote><p>配置方法：在 <code>tomcat/conf/</code> 下 <code>server.xml</code></p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">`&lt;Connector <span class="attribute">port</span>=<span class="string">"8080"</span> <span class="attribute">protocol</span>=<span class="string">"HTTP/1.1"</span>/&gt;`</span><br><span class="line">BIO: <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11Protocol"</span></span><br><span class="line">NIO: <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span></span><br><span class="line">AIO: <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11Nio2Protocol"</span></span><br><span class="line">APR: <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11AprProtocol"</span></span><br></pre></td></tr></table></figure><p><code>BIO（blocking I/O）</code> 阻塞式 <code>I/O</code> 操作，表示 <code>Tomcat</code> 使用的是传统的 <code>Java I/O</code> 操作（即 <code>java.io</code> 包及其子包）。<br>默认的模式，性能最差，没有经过任何优化处理和支持。</p><p><code>NIO（non-blocking I/O）</code> Java SE 1.4 及后续版本提供的一种新的 I/O 操作方式（即 <code>java.nio</code> 包及其子包）。<br>Java nio 是一个基于缓冲区、并能提供非阻塞 <code>I/O</code> 操作的 <code>Java API</code>。<br>拥有比传统 <code>I/O</code> 操作（BIO）更好的并发运行性能。<br>要让 <code>Tomcat</code> 以 <code>NIO</code> 模式来运行，修改配置文件：<code>tomcat/conf/server.xml</code></p><p>修改以下内容<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8080"</span> <span class="attribute">protocol</span>=<span class="string">"HTTP/1.1"</span></span><br><span class="line">         <span class="attribute">connectionTimeout</span>=<span class="string">"20000"</span></span><br><span class="line">         <span class="attribute">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>修改 protocol 的值为 org.apache.coyote.http11.Http11NioProtocol<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8080"</span></span><br><span class="line">           <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11NioProtocol"</span></span><br><span class="line">           <span class="attribute">connectionTimeout</span>=<span class="string">"20000"</span></span><br><span class="line">           <span class="attribute">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>重启 <code>Tomcat</code> 后生效</p><p>在 Tomcat 6.0 之后，提供了 NIO 的方式，可以有效的提升性能，特别是在大量长连接/数据上传+下载等 Web 应用中<br>此时 portocal=”org.apache.coyote.http11.Http11NioProtocol”<br><code>Tomcat</code> 支持：<code>BIO</code>，<code>NIO</code>，<code>NIO2</code>，<code>APR</code> 四种 <code>I/O</code> 模式，<code>Tomcat 8.5</code> 之前 默认为 BIO</p><p><code>Tomcat 8.5 and 9.0 have completely dropped the BIO connector.</code><br><code>Tomcat 8.5</code> 和 <code>9.0</code> 完全删除了 <code>BIO</code> 连接器<br>默认 <code>NIO</code> 模式</p><p>对于互联网应用，我们应该在 NIO、NIO2 之间做选择，因为它能够有效的提升性能（主要是并发能力）<br>其中 NIO2 即为 AIO，需要 JDK 1.7+、Linux 2.6+ 才能支持。<br>BIO：JDK 1.5+，tomcat 5.x+<br>NIO：JDK 1.6+，tomcat 6.x+<br>NIO2：JDK 1.7+，tomcat 7.x+<br>为了保守起见，我们暂且基于 NIO 模式</p><h3 id="查看-Tomcat-Connector-运行模式"><a href="#查看-Tomcat-Connector-运行模式" class="headerlink" title="查看 Tomcat Connector 运行模式"></a>查看 Tomcat Connector 运行模式</h3><p>方法一：在 <a href="http://x.x.x.x:8080/manager/status" target="_blank" rel="noopener">http://x.x.x.x:8080/manager/status</a> 中查看服务器状态 </p><p>方法二：根据 <code>Tomcat</code> 启动日志信息判断<br>BIO<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">INFO</span>: <span class="selector-tag">Initializing</span> <span class="selector-tag">ProtocolHandler</span> <span class="selector-attr">["http-bio-8080"]</span></span><br><span class="line"><span class="selector-tag">Aug</span> 04, 2015 10<span class="selector-pseudo">:20</span><span class="selector-pseudo">:35</span> <span class="selector-tag">PM</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.coyote</span><span class="selector-class">.AbstractProtocol</span> <span class="selector-tag">init</span></span><br></pre></td></tr></table></figure></p><p>NIO<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">INFO</span>: <span class="selector-tag">Initializing</span> <span class="selector-tag">ProtocolHandler</span> <span class="selector-attr">["http-nio-8080"]</span></span><br><span class="line"><span class="selector-tag">Aug</span> 04, 2015 10<span class="selector-pseudo">:27</span><span class="selector-pseudo">:58</span> <span class="selector-tag">PM</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.coyote</span><span class="selector-class">.AbstractProtocol</span> <span class="selector-tag">init</span></span><br></pre></td></tr></table></figure></p><p>APR<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">INFO</span>: <span class="selector-tag">Initializing</span> <span class="selector-tag">ProtocolHandler</span> <span class="selector-attr">["http-apr-8080"]</span></span><br><span class="line"><span class="selector-tag">Aug</span> 04, 2015 10<span class="selector-pseudo">:33</span><span class="selector-pseudo">:45</span> <span class="selector-tag">PM</span> <span class="selector-tag">org</span><span class="selector-class">.apache</span><span class="selector-class">.coyote</span><span class="selector-class">.AbstractProtocol</span> <span class="selector-tag">init</span></span><br></pre></td></tr></table></figure></p><blockquote><p>整合<code>Tomcat apr</code></p></blockquote><p>设置环境变量<br>方法一：在 <code>tomcat/bin/catalina.sh</code> 中增加1行<br>在 <code>echo “Using CATALINA_BASE: $CATALINA_BASE”</code> 的上一行添加<br>CATALINA_OPTS=”-Djava.library.path=/data/apr/lib”</p><p>方法二：在 <code>/etc/profile</code> 中加入<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="builtin-name">export</span> <span class="attribute">CATALINA_OPTS</span>=-Djava.library.path=/usr/local/apr/lib</span><br></pre></td></tr></table></figure></p><blockquote><p>使配置生效<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">source</span> <span class="regexp">/etc/</span>profile</span><br></pre></td></tr></table></figure></p></blockquote><p>修改配置文件<br><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">vim tomcat/conf/server.xml </span><br><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8080"</span> <span class="attribute">protocol</span>=<span class="string">"HTTP/1.1"</span> <span class="attribute">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attribute">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改 `protocol` 的值为 `org.apache.coyote.http11.Http11NioProtocol`</span></span><br><span class="line">&lt;Connector <span class="attribute">port</span>=<span class="string">"8080"</span></span><br><span class="line">           <span class="attribute">protocol</span>=<span class="string">"org.apache.coyote.http11.Http11AprProtocol"</span></span><br><span class="line">           <span class="attribute">connectionTimeout</span>=<span class="string">"20000"</span> <span class="attribute">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>重启 <code>Tomcat</code>，启动日志出现以下内容证明此时以 <code>APR</code> 模式启动 </p><p>参考文档：<br><a href="https://blog.csdn.net/fd2025/article/details/80007435" target="_blank" rel="noopener">https://blog.csdn.net/fd2025/article/details/80007435</a></p>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Tomcat-中-Connector-常用配置&quot;&gt;&lt;a href=&quot;#Tomcat-中-Connector-常用配置&quot; class=&quot;headerlink&quot; title=&quot;Tomcat 中 Connector 常用配置&quot;&gt;&lt;/a&gt;Tomcat 中 Connecto
      
    
    </summary>
    
      <category term="Tomcat笔记" scheme="http://www.gmlyo.com/categories/Tomcat%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Tomcat中Connector常用配置" scheme="http://www.gmlyo.com/tags/Tomcat%E4%B8%ADConnector%E5%B8%B8%E7%94%A8%E9%85%8D%E7%BD%AE/"/>
    
  </entry>
  
  <entry>
    <title>回到页首按钮显示百分比</title>
    <link href="http://www.gmlyo.com//blog/2018/06/11/%E5%9B%9E%E5%88%B0%E9%A1%B5%E9%A6%96%E6%8C%89%E9%92%AE%E6%98%BE%E7%A4%BA%E7%99%BE%E5%88%86%E6%AF%94/"/>
    <id>http://www.gmlyo.com//blog/2018/06/11/回到页首按钮显示百分比/</id>
    <published>2018-06-11T06:30:33.000Z</published>
    <updated>2018-06-11T06:32:32.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="回到页首按钮显示百分比"><a href="#回到页首按钮显示百分比" class="headerlink" title="回到页首按钮显示百分比"></a>回到页首按钮显示百分比</h2><blockquote><p><code>Back-to-top</code> 按钮显示百分比</p></blockquote><a id="more"></a><h3 id="编辑配置文件"><a href="#编辑配置文件" class="headerlink" title="编辑配置文件"></a>编辑配置文件</h3><blockquote><p>Next主题配置文件 <code>/hexo/themes/next/_config.yml</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Scroll percent label in b2t button.</span></span><br><span class="line"><span class="attr">  scrollpercent:</span> <span class="literal">false</span></span><br></pre></td></tr></table></figure><blockquote><p>将 <code>scrollpercen:</code> 的值改为 <code>true</code> 即可</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;回到页首按钮显示百分比&quot;&gt;&lt;a href=&quot;#回到页首按钮显示百分比&quot; class=&quot;headerlink&quot; title=&quot;回到页首按钮显示百分比&quot;&gt;&lt;/a&gt;回到页首按钮显示百分比&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Back-to-top&lt;/code&gt; 按钮显示百分比&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Next笔记" scheme="http://www.gmlyo.com/categories/Next%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="回到页首按钮显示百分比" scheme="http://www.gmlyo.com/tags/%E5%9B%9E%E5%88%B0%E9%A1%B5%E9%A6%96%E6%8C%89%E9%92%AE%E6%98%BE%E7%A4%BA%E7%99%BE%E5%88%86%E6%AF%94/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加在线联系</title>
    <link href="http://www.gmlyo.com//blog/2018/06/10/Hexo%E6%B7%BB%E5%8A%A0%E5%9C%A8%E7%BA%BF%E8%81%94%E7%B3%BB/"/>
    <id>http://www.gmlyo.com//blog/2018/06/10/Hexo添加在线联系/</id>
    <published>2018-06-10T15:40:25.000Z</published>
    <updated>2018-06-10T15:41:28.643Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Hexo添加在线联系"><a href="#Hexo添加在线联系" class="headerlink" title="Hexo添加在线联系"></a>Hexo添加在线联系</h2><blockquote><p>当有用户在网页上给你留言后会通过邮件或者微信通知你，可以及时的解答用户的疑问。</p></blockquote><a id="more"></a><h3 id="配置方法"><a href="#配置方法" class="headerlink" title="配置方法"></a>配置方法</h3><blockquote><p>首先到 <code>DaoVoice</code> 上注册一个账号，注册完成后会得到一个 <code>app_id</code><br><a href="http://dashboard.daovoice.io" target="_blank" rel="noopener">http://dashboard.daovoice.io</a></p></blockquote><h3 id="获取-appid-的步骤"><a href="#获取-appid-的步骤" class="headerlink" title="获取 appid 的步骤"></a>获取 <code>appid</code> 的步骤</h3><blockquote><p>在 <code>DaoVoice</code> 的应用设置 -&gt; 安装到网站中的找到自己的 app_id<br>然后在主题 <code>/next/layout/_partials/head.swig</code> 文件中最后添加代码</p></blockquote><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.daovoice %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="undefined"></span></span></span><br><span class="line"><span class="xml">  (function(i,s,o,g,r,a,m)&#123;i["DaoVoiceObject"]=r;i[r]=i[r]||function()&#123;(i[r].q=i[r].q||[]).push(arguments)&#125;,i[r].l=1*new Date();a=s.createElement(o),m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;a.charset="utf-8";m.parentNode.insertBefore(a,m)&#125;)(window,document,"script",('https:' == document.location.protocol ? 'https:' : 'http:') + "//widget.daovoice.io/widget/0f81ff2f.js","daovoice")</span></span><br><span class="line"><span class="xml">  daovoice('init', &#123;</span></span><br><span class="line"><span class="xml">      app_id: "</span><span class="template-variable">&#123;&#123;theme.daovoice_app_id&#125;&#125;</span><span class="xml">"</span></span><br><span class="line"><span class="xml">    &#125;);</span></span><br><span class="line"><span class="xml">  daovoice('update');</span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">script</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h3 id="主题配置文件中添加配置"><a href="#主题配置文件中添加配置" class="headerlink" title="主题配置文件中添加配置"></a>主题配置文件中添加配置</h3><blockquote><p>在主题配置文件 <code>/next/_config.yml</code> 中添加相应的配置</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Online contact</span></span><br><span class="line"><span class="attr">daovoice:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">daovoice_app_id:</span> <span class="string">这里输入前面获取的app_id</span></span><br></pre></td></tr></table></figure><h3 id="调整位置"><a href="#调整位置" class="headerlink" title="调整位置"></a>调整位置</h3><blockquote><p>最后聊天图标的位置可能和一些东西重叠<br>这个使用可以在控制面板中应用设置 -&gt; 聊天设置里面设置相对右边和底部的位置</p></blockquote><p>参考文档<br><a href="https://www.ezlippi.com/blog/2018/01/next-chat.html" target="_blank" rel="noopener">https://www.ezlippi.com/blog/2018/01/next-chat.html</a><br><a href="https://meta.tn/a/c40f12eb1b892bbb8cda053c03c688e3f20e4f642164080ef463cd4a7bc3b042" target="_blank" rel="noopener">https://meta.tn/a/c40f12eb1b892bbb8cda053c03c688e3f20e4f642164080ef463cd4a7bc3b042</a><br><a href="http://www.niww.me/2018/03/02/hexo-daovoice/" target="_blank" rel="noopener">http://www.niww.me/2018/03/02/hexo-daovoice/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Hexo添加在线联系&quot;&gt;&lt;a href=&quot;#Hexo添加在线联系&quot; class=&quot;headerlink&quot; title=&quot;Hexo添加在线联系&quot;&gt;&lt;/a&gt;Hexo添加在线联系&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;当有用户在网页上给你留言后会通过邮件或者微信通知你，可以及时的解答用户的疑问。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo笔记" scheme="http://www.gmlyo.com/categories/Hexo%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Hexo添加在线联系" scheme="http://www.gmlyo.com/tags/Hexo%E6%B7%BB%E5%8A%A0%E5%9C%A8%E7%BA%BF%E8%81%94%E7%B3%BB/"/>
    
  </entry>
  
  <entry>
    <title>Next主题背景</title>
    <link href="http://www.gmlyo.com//blog/2018/06/10/Next%E4%B8%BB%E9%A2%98%E8%83%8C%E6%99%AF/"/>
    <id>http://www.gmlyo.com//blog/2018/06/10/Next主题背景/</id>
    <published>2018-06-10T14:13:23.000Z</published>
    <updated>2018-06-10T14:15:47.250Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Next主题背景个性化DIY"><a href="#Next主题背景个性化DIY" class="headerlink" title="Next主题背景个性化DIY"></a>Next主题背景个性化DIY</h2><blockquote><p>整理了一下博客，加个背景图片（BackGroundImage）<br>调整一下视觉感官，<code>背景图片</code> 是动态变化的，每次刷新都会更新一张图</p></blockquote><a id="more"></a><h3 id="一个图片网站"><a href="#一个图片网站" class="headerlink" title="一个图片网站"></a>一个图片网站</h3><blockquote><p>分享一个非常 <code>Nice</code> 的图片网站，感觉这个国外的图片社区网站真的秒杀一众图片网站啊，不仅图片质量高，免费，而且还提供了随机拉取图片的服务 <code>API</code>，太赞，对于想实现动态背景，简直是福音<br><a href="https://source.unsplash.com/" target="_blank" rel="noopener">https://source.unsplash.com/</a></p></blockquote><h3 id="添加背景图片"><a href="#添加背景图片" class="headerlink" title="添加背景图片"></a>添加背景图片</h3><blockquote><p>修改 <code>\themes\next\source\css\_custom\custom.styl</code> 文件<br>这个是 <code>Next</code> 故意留给用户自己个性化定制一些样式的文件，添加以下代码</p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">body</span> &#123;</span><br><span class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(https://source.unsplash.com/random/1600x900);</span><br><span class="line">    <span class="attribute">background-repeat</span>: no-repeat;</span><br><span class="line">    <span class="attribute">background-attachment</span>:fixed;</span><br><span class="line">    <span class="attribute">background-position</span>:<span class="number">50%</span> <span class="number">50%</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><code>URL</code> 括号中直接添加图片的地址链接，也可以置换成你所喜欢的任意图片。<br><code>repeat</code>、<code>attachment</code>、<code>position</code> 就是调整图片的位置，不重复出现、不滚动等。</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Next主题背景个性化DIY&quot;&gt;&lt;a href=&quot;#Next主题背景个性化DIY&quot; class=&quot;headerlink&quot; title=&quot;Next主题背景个性化DIY&quot;&gt;&lt;/a&gt;Next主题背景个性化DIY&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;整理了一下博客，加个背景图片（BackGroundImage）&lt;br&gt;调整一下视觉感官，&lt;code&gt;背景图片&lt;/code&gt; 是动态变化的，每次刷新都会更新一张图&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Next笔记" scheme="http://www.gmlyo.com/categories/Next%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Next主题背景" scheme="http://www.gmlyo.com/tags/Next%E4%B8%BB%E9%A2%98%E8%83%8C%E6%99%AF/"/>
    
  </entry>
  
  <entry>
    <title>添加看板娘</title>
    <link href="http://www.gmlyo.com//blog/2018/06/10/%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
    <id>http://www.gmlyo.com//blog/2018/06/10/添加看板娘/</id>
    <published>2018-06-10T09:52:57.000Z</published>
    <updated>2018-06-11T06:44:42.277Z</updated>
    
    <content type="html"><![CDATA[<h2 id="添加看板娘"><a href="#添加看板娘" class="headerlink" title="添加看板娘"></a>添加看板娘</h2><a id="more"></a><p>实现效果</p><blockquote><p>用 <code>Git Bash Here</code> 在站点根目录执行如下代码</p></blockquote><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">cd</span> D:\hexo\</span><br><span class="line">npm install hexo-helper-live2d <span class="params">--save</span></span><br></pre></td></tr></table></figure><p><del>然后打开 <code>/themes/next/layout/_layout.swig</code> 将下面代码放到 <code>&lt;/body&gt;</code> 之前</del><br><del>{ { live2d() } }</del><br><strong>注意：由于官方更新了包，所以画删除线的不用做了</strong></p><blockquote><p>然后在这里可以看到一些已有的模型，记下想要的模型名字，使用安装命令<br><a href="https://huaji8.top/post/live2d-plugin-2.0/" target="_blank" rel="noopener">https://huaji8.top/post/live2d-plugin-2.0/</a></p></blockquote><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm <span class="keyword">install</span> <span class="string">"模型的包名"</span></span><br></pre></td></tr></table></figure><blockquote><p>模型的包名</p></blockquote><figure class="highlight gams"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">live2d-widget-<span class="keyword">model</span>-chitose</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-epsilon2_1</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-gf</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-haru/<span class="number">01</span> (use npm install --save live2d-widget-<span class="keyword">model</span>-haru)</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-haru/<span class="number">02</span> (use npm install --save live2d-widget-<span class="keyword">model</span>-haru)</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-haruto</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-hibiki</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-hijiki</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-izumi</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-koharu</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-miku</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-ni-j</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-nico</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-nietzsche</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-nipsilon</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-nito</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-shizuku</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-tororo</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-tsumiki</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-unitychan</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-wanko</span><br><span class="line">live2d-widget-<span class="keyword">model</span>-z16</span><br></pre></td></tr></table></figure><blockquote><p>以 hijiki 为例<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">$ npm <span class="keyword">install</span> <span class="string">"live2d-widget-model-hijiki"</span> <span class="comment">--save</span></span><br><span class="line">npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@<span class="number">1.2</span><span class="number">.4</span> (node_modules\fsevents):</span><br><span class="line">npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform <span class="keyword">for</span> fsevents@<span class="number">1.2</span><span class="number">.4</span>: wanted &#123;<span class="string">"os"</span>:<span class="string">"darwin"</span>,<span class="string">"arch"</span>:<span class="string">"any"</span>&#125; (<span class="keyword">current</span>: &#123;<span class="string">"os"</span>:<span class="string">"win32"</span>,<span class="string">"arch"</span>:<span class="string">"x64"</span>&#125;)</span><br><span class="line"></span><br><span class="line">+ live2d-widget-<span class="keyword">model</span>-hijiki@<span class="number">1.0</span><span class="number">.5</span></span><br><span class="line">added <span class="number">1</span> <span class="keyword">package</span> <span class="keyword">and</span> audited <span class="number">3800</span> packages <span class="keyword">in</span> <span class="number">8.046</span>s</span><br><span class="line"><span class="keyword">found</span> <span class="number">2</span> <span class="keyword">low</span> severity vulnerabilities</span><br><span class="line">  run <span class="string">`npm audit fix`</span> <span class="keyword">to</span> fix them, <span class="keyword">or</span> <span class="string">`npm audit`</span> <span class="keyword">for</span> details</span><br><span class="line"></span><br><span class="line">$ npm <span class="keyword">install</span> live2d-widget-<span class="keyword">model</span>-tororo <span class="comment">--save</span></span><br></pre></td></tr></table></figure></p></blockquote><h3 id="在-配置文件-末尾添加代码"><a href="#在-配置文件-末尾添加代码" class="headerlink" title="在 配置文件 末尾添加代码"></a>在 <code>配置文件</code> 末尾添加代码</h3><blockquote><p>安装完成后，还需要在一些小小的修改<br>在 <code>_config.yml</code>（<code>Hexo站点</code> 或 <code>Next主题</code> 皆可）中，加入以下内容</p><p><code>/blog/_config.yml</code><br>或<br><code>/blog/next/themes/_config.yml</code></p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## 看板娘</span></span><br><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">     enable:</span> <span class="literal">true</span></span><br><span class="line"><span class="attr">     scriptFrom:</span> <span class="string">local</span></span><br><span class="line"><span class="attr">     pluginRootPath:</span> <span class="string">live2dw/</span></span><br><span class="line"><span class="attr">     pluginJsPath:</span> <span class="string">lib/</span></span><br><span class="line"><span class="attr">     pluginModelPath:</span> <span class="string">assets/</span></span><br><span class="line"><span class="attr">     model:</span></span><br><span class="line"><span class="attr">       use:</span> <span class="string">live2d-widget-model-hijiki</span></span><br><span class="line"><span class="attr">     display:</span></span><br><span class="line"><span class="attr">       position:</span> <span class="string">right</span></span><br><span class="line"><span class="attr">       width:</span> <span class="number">150</span></span><br><span class="line"><span class="attr">       height:</span> <span class="number">300</span></span><br><span class="line"><span class="attr">     mobile:</span></span><br><span class="line"><span class="attr">       show:</span> <span class="literal">true</span>    <span class="comment"># false 手机端不显示</span></span><br></pre></td></tr></table></figure><h3 id="详细配置"><a href="#详细配置" class="headerlink" title="详细配置"></a>详细配置</h3><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">live2d:</span></span><br><span class="line"><span class="attr">  enable:</span> <span class="literal">true</span>              <span class="comment"># 是否开启</span></span><br><span class="line"><span class="attr">  scriptFrom:</span> <span class="string">local</span>         <span class="comment"># 默认</span></span><br><span class="line"><span class="attr">  pluginRootPath:</span> <span class="string">live2dw/</span>  <span class="comment"># 插件在站点上的根目录(相对路径)</span></span><br><span class="line"><span class="attr">  pluginJsPath:</span> <span class="string">lib/</span>        <span class="comment"># 脚本文件相对与插件根目录路径</span></span><br><span class="line"><span class="attr">  pluginModelPath:</span> <span class="string">assets/</span>  <span class="comment"># 模型文件相对与插件根目录路径</span></span><br><span class="line">  <span class="comment"># scriptFrom: jsdelivr    # jsdelivr CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: unpkg       # unpkg CDN</span></span><br><span class="line">  <span class="comment"># scriptFrom: https://cdn.jsdelivr.net/npm/live2d-widget@3.x/lib/L2Dwidget.min.js # 你的自定义 url</span></span><br><span class="line"><span class="attr">  model:</span></span><br><span class="line"><span class="attr">    use:</span> <span class="string">live2d-widget-model-wanko</span> <span class="comment"># 调用模型名，必须要先下载</span></span><br><span class="line"><span class="attr">  display:</span></span><br><span class="line"><span class="attr">    position:</span> <span class="string">right</span>         <span class="comment"># 在博客的左边还是右边显示</span></span><br><span class="line"><span class="attr">    width:</span> <span class="number">150</span>              <span class="comment"># 边框宽度</span></span><br><span class="line"><span class="attr">    height:</span> <span class="number">300</span>             <span class="comment"># 边框高度</span></span><br><span class="line"><span class="attr">  mobile:</span></span><br><span class="line"><span class="attr">    show:</span> <span class="literal">true</span>              <span class="comment"># 是否在手机上显示</span></span><br><span class="line">    <span class="comment"># use: wanko            # 博客根目录/live2d_models/ 下的目录名</span></span><br><span class="line">    <span class="comment"># use: ./wives/wanko    # 相对于博客根目录的路径</span></span><br><span class="line">    <span class="comment"># use: https://cdn.jsdelivr.net/npm/live2d-widget-model-wanko@1.0.5/assets/wanko.model.json # 你的自定义 url</span></span><br></pre></td></tr></table></figure><blockquote><p>根据需要可修改use:后的包名；调整长度和宽度；选择是否停用插件等。</p></blockquote><p>参考文档<br><a href="https://wangyuyang.me/2018/04/06/对基于HEXO的NexT主题的美化/" target="_blank" rel="noopener">https://wangyuyang.me/2018/04/06/对基于HEXO的NexT主题的美化/</a><br><a href="https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md" target="_blank" rel="noopener">https://github.com/EYHN/hexo-helper-live2d/blob/master/README.zh-CN.md</a><br><a href="https://alvabill.ml/hexo搭建个人博客-NexT主题优化/" target="_blank" rel="noopener">https://alvabill.ml/hexo搭建个人博客-NexT主题优化/</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;添加看板娘&quot;&gt;&lt;a href=&quot;#添加看板娘&quot; class=&quot;headerlink&quot; title=&quot;添加看板娘&quot;&gt;&lt;/a&gt;添加看板娘&lt;/h2&gt;
    
    </summary>
    
      <category term="Next笔记" scheme="http://www.gmlyo.com/categories/Next%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="添加看板娘" scheme="http://www.gmlyo.com/tags/%E6%B7%BB%E5%8A%A0%E7%9C%8B%E6%9D%BF%E5%A8%98/"/>
    
  </entry>
  
  <entry>
    <title>Chrome自带的长截屏功能</title>
    <link href="http://www.gmlyo.com//blog/2018/06/10/Chrome%E8%87%AA%E5%B8%A6%E7%9A%84%E9%95%BF%E6%88%AA%E5%B1%8F%E5%8A%9F%E8%83%BD/"/>
    <id>http://www.gmlyo.com//blog/2018/06/10/Chrome自带的长截屏功能/</id>
    <published>2018-06-10T07:22:15.000Z</published>
    <updated>2018-06-10T07:23:58.993Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Chrome自带的长截屏功能"><a href="#Chrome自带的长截屏功能" class="headerlink" title="Chrome自带的长截屏功能"></a>Chrome自带的长截屏功能</h2><blockquote><p>在 <code>Google Chrome</code> 里面，打开开发人员工具 <code>按F12</code><br>或<br>网站上任意空白处右键 – 选择 “检查” 或者“审查元素”</p><p>快捷键 <code>Ctrl + Shift + P</code>，会看到右边的审查元素出现了一个输入框<br>输入 <code>screenshot</code> 然后回车<br>保存图片</p></blockquote>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h2 id=&quot;Chrome自带的长截屏功能&quot;&gt;&lt;a href=&quot;#Chrome自带的长截屏功能&quot; class=&quot;headerlink&quot; title=&quot;Chrome自带的长截屏功能&quot;&gt;&lt;/a&gt;Chrome自带的长截屏功能&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;在 &lt;code&gt;G
      
    
    </summary>
    
      <category term="Chrome笔记" scheme="http://www.gmlyo.com/categories/Chrome%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Chrome自带的长截屏功能" scheme="http://www.gmlyo.com/tags/Chrome%E8%87%AA%E5%B8%A6%E7%9A%84%E9%95%BF%E6%88%AA%E5%B1%8F%E5%8A%9F%E8%83%BD/"/>
    
  </entry>
  
  <entry>
    <title>Chevereto图床</title>
    <link href="http://www.gmlyo.com//blog/2018/06/10/Chevereto%E5%9B%BE%E5%BA%8A/"/>
    <id>http://www.gmlyo.com//blog/2018/06/10/Chevereto图床/</id>
    <published>2018-06-10T06:02:40.000Z</published>
    <updated>2018-06-10T07:03:34.569Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Chevereto图床"><a href="#Chevereto图床" class="headerlink" title="Chevereto图床"></a>Chevereto图床</h2><blockquote><p><code>Chevereto</code> 是一款采用 <code>PHP</code> 语言开发的网络相册脚本程序，支持多语言，提供中文语言包的下载的开源在线图片存储分享服务系统，支持本地上传和在线获取两种图像上传方式，并集成了 <code>TinyURL</code> 网址缩短服务。<br><code>Chevereto</code> 这套程序可以像 <code>Discuz</code> 或 <code>WordPress</code> 一样随意架设在任何空间上。<br>而它的功能除了一般图片空间单纯的从电脑上传图片外，也支援利用网址也可以上传，最屌的是还有 <code>TinyURL</code> 的缩短网址的功能可以使用，因此这套 <code>Chevereto</code> 可以说是比市面上的图片空间好太多了。<br>他是把图片上传到空间的，相信一般大家都一定会使用免费空间，在此建议大家在挑主机时尽可能使用 <code>cPanel</code> 的空间，因为可以使用 <code>cPanel</code> 特有的 <code>「Cron Jobs」</code> 来备份你上传的图片。</p></blockquote><a id="more"></a><blockquote><p><code>Chevereto</code> 是一款分享照片的程序，可以非常轻松得在自己的服务器上搭建照片分享程序，功能强大，外观精美。<br><code>Chevereto</code> 本身是收费使用的，一次性付费，终身使用，但是其开源版本可以免费使用。<br><a href="https://chevereto.com/" target="_blank" rel="noopener">https://chevereto.com/</a><br><a href="https://github.com/Chevereto/Chevereto-Free" target="_blank" rel="noopener">https://github.com/Chevereto/Chevereto-Free</a><br><a href="https://chevereto.com/docs/requirements" target="_blank" rel="noopener">https://chevereto.com/docs/requirements</a></p></blockquote><h3 id="Clevereto-错误-404-解决方法"><a href="#Clevereto-错误-404-解决方法" class="headerlink" title="Clevereto 错误 404 解决方法"></a>Clevereto 错误 <code>404</code> 解决方法</h3><blockquote><p>如果 <code>Web服务</code> 是 <code>Nginx</code>，基本第一步安装好后再次打开网站会出现 <code>404</code> 错误。<br>因为 <code>Chevereto</code> 默认提供基于 <code>Apache</code> 环境的伪静态规则</p></blockquote><blockquote><p>需要设置以下 <code>Rewrite</code> 伪静态规则<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">if</span> (-f <span class="variable">$request_filename</span>/index.html)&#123;</span><br><span class="line">        <span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.html <span class="literal">break</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">if</span> (-f <span class="variable">$request_filename</span>/index.php)&#123;</span><br><span class="line">        <span class="attribute">rewrite</span> (.*) <span class="variable">$1</span>/index.php;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">if</span> (!-f <span class="variable">$request_filename</span>)&#123;</span><br><span class="line">        <span class="attribute">rewrite</span> (.*) /index.php;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /api.php;</span><br><span class="line">&#125;</span><br><span class="line"><span class="attribute">location</span> /admin &#123;</span><br><span class="line">    <span class="attribute">try_files</span> <span class="variable">$uri</span> /admin/index.php?<span class="variable">$args</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p></blockquote><h3 id="官方推荐配置"><a href="#官方推荐配置" class="headerlink" title="官方推荐配置"></a>官方推荐配置</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Disable access to .ht* files</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ /\.ht</span> &#123;</span><br><span class="line">    <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable access to sensitive files in app path</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ /(app|content|lib)/.*\.(po|php|lock|sql)$</span> &#123;</span><br><span class="line">  <span class="attribute">deny</span> all;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Disable log on not found images + image replacement</span></span><br><span class="line"><span class="comment"># Image not found replacement</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~* (jpe?g|png|gif)</span> &#123;</span><br><span class="line">    <span class="attribute">log_not_found</span> <span class="literal">off</span>;</span><br><span class="line">    <span class="attribute">error_page</span> <span class="number">404</span> /content/images/system/default/<span class="number">404</span>.gif;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Enable CORS header (avoids font rendering issues)</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ \.(ttf|ttc|otf|eot|woff|woff2|font.css|css|js)$</span> &#123;</span><br><span class="line">    <span class="attribute">add_header</span> Access-Control-Allow-Origin <span class="string">"*"</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Force serve upload path as static content</span></span><br><span class="line"><span class="attribute">location</span> <span class="regexp">~ /images</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># Pretty URLs</span></span><br><span class="line"><span class="comment"># Route dynamic request to index.php</span></span><br><span class="line"><span class="attribute">location</span> / &#123;</span><br><span class="line">    <span class="attribute">try_files</span> <span class="variable">$uri</span> <span class="variable">$uri</span>/ /index.php?<span class="variable">$query_string</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>参考文档</p><blockquote><p><a href="https://www.zhujibiji.com/2017/11/install-chevere-to-build-your-image-sharing-website/" target="_blank" rel="noopener">https://www.zhujibiji.com/2017/11/install-chevere-to-build-your-image-sharing-website/</a><br><a href="https://lala.im/2478.html" target="_blank" rel="noopener">https://lala.im/2478.html</a></p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Chevereto图床&quot;&gt;&lt;a href=&quot;#Chevereto图床&quot; class=&quot;headerlink&quot; title=&quot;Chevereto图床&quot;&gt;&lt;/a&gt;Chevereto图床&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;Chevereto&lt;/code&gt; 是一款采用 &lt;code&gt;PHP&lt;/code&gt; 语言开发的网络相册脚本程序，支持多语言，提供中文语言包的下载的开源在线图片存储分享服务系统，支持本地上传和在线获取两种图像上传方式，并集成了 &lt;code&gt;TinyURL&lt;/code&gt; 网址缩短服务。&lt;br&gt;&lt;code&gt;Chevereto&lt;/code&gt; 这套程序可以像 &lt;code&gt;Discuz&lt;/code&gt; 或 &lt;code&gt;WordPress&lt;/code&gt; 一样随意架设在任何空间上。&lt;br&gt;而它的功能除了一般图片空间单纯的从电脑上传图片外，也支援利用网址也可以上传，最屌的是还有 &lt;code&gt;TinyURL&lt;/code&gt; 的缩短网址的功能可以使用，因此这套 &lt;code&gt;Chevereto&lt;/code&gt; 可以说是比市面上的图片空间好太多了。&lt;br&gt;他是把图片上传到空间的，相信一般大家都一定会使用免费空间，在此建议大家在挑主机时尽可能使用 &lt;code&gt;cPanel&lt;/code&gt; 的空间，因为可以使用 &lt;code&gt;cPanel&lt;/code&gt; 特有的 &lt;code&gt;「Cron Jobs」&lt;/code&gt; 来备份你上传的图片。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="图床笔记" scheme="http://www.gmlyo.com/categories/%E5%9B%BE%E5%BA%8A%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Chevereto图床" scheme="http://www.gmlyo.com/tags/Chevereto%E5%9B%BE%E5%BA%8A/"/>
    
  </entry>
  
  <entry>
    <title>关于图床的选择</title>
    <link href="http://www.gmlyo.com//blog/2018/06/10/%E5%85%B3%E4%BA%8E%E5%9B%BE%E5%BA%8A%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    <id>http://www.gmlyo.com//blog/2018/06/10/关于图床的选择/</id>
    <published>2018-06-10T04:51:44.000Z</published>
    <updated>2018-06-10T06:35:39.450Z</updated>
    
    <content type="html"><![CDATA[<h2 id="关于图床的选择"><a href="#关于图床的选择" class="headerlink" title="关于图床的选择"></a>关于图床的选择</h2><h3 id="为什么要使用图床？"><a href="#为什么要使用图床？" class="headerlink" title="为什么要使用图床？"></a>为什么要使用图床？</h3><blockquote><p>Hexo 文章中的图片，我们可以放到本地，然后一起部署到 <code>Github</code> 中，这样完全没有问题。<br>然而 github pages 空间毕竟有限（貌似只有 <code>300M</code>）,另外图片的管理太混乱了，一些原创的图片可能被盗链。</p></blockquote><a id="more"></a><blockquote><p>很多技术人写作都用的是 <code>MarkDown</code> 轻量级标记语言进行博客写作，这种写作让我们不用像使用 Word 那样那么麻烦地调整排版和格式，只需专心写作并且照样完成排版的一种方式。<br>但是，基本所有支持 <code>MarkDown</code> 本地写作工具都只能采用导入本地图片引用的方式，对于一篇需要大量图片阐述的文章以及该文章上传至网络图片丢失，这不得不是个很糟糕的问题。<br>那么有什么比较好的解决方式吗？<br>很多人采用的图片寄存于网络，用服务厂商作为图片存储的地方，大家都叫为 <code>「图床」</code> 。</p></blockquote><blockquote><p>那么像 CSDN 博客、简书平台不是都可以吗？<br>是的，它们平台写文章的时候都可以导入图片然后得到一个图片网络地址。<br>但是，图片数量多，一张一张上传，这不是贼烦嘛！<br>那么有专门可以作 <code>「图床」</code> 功能的服务商吗？<br>有的，比如七牛云。</p></blockquote><p><strong>网上谷歌搜下还是能搜到很多图床网站的，先随便列举一些</strong></p><h3 id="公共图床"><a href="#公共图床" class="headerlink" title="公共图床"></a>公共图床</h3><h4 id="SM-MS"><a href="#SM-MS" class="headerlink" title="SM.MS"></a>SM.MS</h4><blockquote><p><a href="https://sm.ms/" target="_blank" rel="noopener">https://sm.ms/</a><br>SM.MS 是由 V2EX @Showfom 自建的，无外链限制，无流量限制的图床，支持 HTTPS，速度不错，已经运行两年多了。</p></blockquote><h4 id="极简图床"><a href="#极简图床" class="headerlink" title="极简图床"></a>极简图床</h4><blockquote><p><a href="https://jiantuku.com/#/" target="_blank" rel="noopener">https://jiantuku.com/#/</a></p></blockquote><h4 id="路过图床"><a href="#路过图床" class="headerlink" title="路过图床"></a>路过图床</h4><blockquote><p><a href="https://imgchr.com/" target="_blank" rel="noopener">https://imgchr.com/</a></p></blockquote><h4 id="Imgur"><a href="#Imgur" class="headerlink" title="Imgur"></a>Imgur</h4><blockquote><p><a href="https://imgur.com/" target="_blank" rel="noopener">https://imgur.com/</a><br>Imgur 是一家国外老牌的图片存储服务商，国外速度很快，口碑不错，支持 HTTPS。<br>但是国内速度很不稳定，所以追求国内速度的同学慎用。</p></blockquote><h4 id="Qchan图床"><a href="#Qchan图床" class="headerlink" title="Qchan图床"></a>Qchan图床</h4><p><a href="http://tuchuang.org/" target="_blank" rel="noopener">http://tuchuang.org/</a></p><h4 id="微博图床"><a href="#微博图床" class="headerlink" title="微博图床"></a>微博图床</h4><blockquote><p>微博图床，可以自定义支持七牛，界面简洁美观，支持 Chrome 插件，注册后还可以同步上传历史。</p></blockquote><h3 id="自建图床"><a href="#自建图床" class="headerlink" title="自建图床"></a>自建图床</h3><blockquote><p>目前自建图床方案有两种</p><ol><li>是利用云服务商提供的存储服务来作为图床，通过 API 来管理图片</li><li>是在 VPS 上安装开源的图片或文件管理程序，只要能提供外链，基本都可以作为图床来用。</li></ol></blockquote><h4 id="建图床（云服务）"><a href="#建图床（云服务）" class="headerlink" title="建图床（云服务）"></a>建图床（云服务）</h4><blockquote><p>七牛云，又拍云，阿里云OSS</p></blockquote><h4 id="自建图床（开源方案）"><a href="#自建图床（开源方案）" class="headerlink" title="自建图床（开源方案）"></a>自建图床（开源方案）</h4><blockquote><p>如果你有 VPS，并且网络速度 OK 的话，自建图床也是一个不错的选择。</p></blockquote><h5 id="Lychee"><a href="#Lychee" class="headerlink" title="Lychee"></a>Lychee</h5><blockquote><p><a href="https://github.com/electerious/Lychee" target="_blank" rel="noopener">https://github.com/electerious/Lychee</a><br>Lychee 是一个开源免费的基于 PHP 的图片管理系统，支持 Docker 部署，<br>可以直接当做图床来用，Lychee 还支持很多扩展。</p></blockquote><h5 id="树洞外链"><a href="#树洞外链" class="headerlink" title="树洞外链"></a>树洞外链</h5><blockquote><p><a href="https://yun.aoaoao.me/" target="_blank" rel="noopener">https://yun.aoaoao.me/</a><br><a href="https://github.com/HFO4/shudong-share" target="_blank" rel="noopener">https://github.com/HFO4/shudong-share</a><br>树洞外链 是一款免费开源的 PHP 外链网盘系统，界面简洁友好，<br>支持七牛、本地、远程、阿里云OSS、又拍云五种储存方式，<br>支持多用户系统，多上传方案策略。</p></blockquote><h5 id="Chevereto"><a href="#Chevereto" class="headerlink" title="Chevereto"></a>Chevereto</h5><blockquote><p><a href="https://chevereto.com/" target="_blank" rel="noopener">https://chevereto.com/</a><br><a href="https://github.com/Chevereto/Chevereto-Free" target="_blank" rel="noopener">https://github.com/Chevereto/Chevereto-Free</a><br><a href="https://chevereto.com/docs/requirements" target="_blank" rel="noopener">https://chevereto.com/docs/requirements</a><br>Chevereto 是一款分享照片的程序，可以非常轻松得在自己的服务器上搭建照片分享程序，功能强大，外观精美。<br>Chevereto 本身是收费使用的，一次性付费，终身使用，但是其开源版本可以免费使用。</p></blockquote><p><strong>使用图床的目的是希望文章的图片资源能有更好的加载速度和稳定的显示效果</strong>。</p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;关于图床的选择&quot;&gt;&lt;a href=&quot;#关于图床的选择&quot; class=&quot;headerlink&quot; title=&quot;关于图床的选择&quot;&gt;&lt;/a&gt;关于图床的选择&lt;/h2&gt;&lt;h3 id=&quot;为什么要使用图床？&quot;&gt;&lt;a href=&quot;#为什么要使用图床？&quot; class=&quot;headerlink&quot; title=&quot;为什么要使用图床？&quot;&gt;&lt;/a&gt;为什么要使用图床？&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;Hexo 文章中的图片，我们可以放到本地，然后一起部署到 &lt;code&gt;Github&lt;/code&gt; 中，这样完全没有问题。&lt;br&gt;然而 github pages 空间毕竟有限（貌似只有 &lt;code&gt;300M&lt;/code&gt;）,另外图片的管理太混乱了，一些原创的图片可能被盗链。&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="图床笔记" scheme="http://www.gmlyo.com/categories/%E5%9B%BE%E5%BA%8A%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="关于图床的选择" scheme="http://www.gmlyo.com/tags/%E5%85%B3%E4%BA%8E%E5%9B%BE%E5%BA%8A%E7%9A%84%E9%80%89%E6%8B%A9/"/>
    
  </entry>
  
  <entry>
    <title>Java虚拟机之堆溢出处理</title>
    <link href="http://www.gmlyo.com//blog/2018/06/10/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B9%8B%E5%A0%86%E6%BA%A2%E5%87%BA%E5%A4%84%E7%90%86/"/>
    <id>http://www.gmlyo.com//blog/2018/06/10/Java虚拟机之堆溢出处理/</id>
    <published>2018-06-09T16:13:38.000Z</published>
    <updated>2018-06-09T16:24:52.630Z</updated>
    
    <content type="html"><![CDATA[<h2 id="Java-虚拟机之堆溢出处理"><a href="#Java-虚拟机之堆溢出处理" class="headerlink" title="Java 虚拟机之堆溢出处理"></a>Java 虚拟机之堆溢出处理</h2><p>在 Java 程序的运行过程中，如果堆空间不足，则有可能抛出内存溢出错误 <code>(Out Of Memory)</code>，简称为 <code>OOM</code>。</p><a id="more"></a><blockquote><p>如下文字显示了典型的堆内存溢出</p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Exception <span class="keyword">in</span> thread <span class="string">"main"</span> java<span class="selector-class">.lang</span><span class="selector-class">.OutOfMemoryError</span>: Java heap space at geym<span class="selector-class">.zbase</span><span class="selector-class">.ch3</span><span class="selector-class">.heap</span><span class="selector-class">.DumpOOM</span><span class="selector-class">.main</span>(DumpOOM<span class="selector-class">.java</span>:<span class="number">20</span>)</span><br></pre></td></tr></table></figure><blockquote><p>一旦发生这类问题，系统就会被迫退出。如果发生在生产环境，可能会引起严重的业务中断。<br>为了能够不断改善系统，避免或减少这类错误的发生，需要在发生错误时，获得尽可能多的现场信息，以帮助研发人员排查现场问题。</p></blockquote><blockquote><p>Java 虚拟机提供了参数 <code>-XX:+HeapDumpOnOutOfMemoryError</code>，使用该参数，可以在内存溢出时导出整个堆信息。<br>和它配合使用的还有 <code>-XX:HeapDumpPath</code>，可以指定导出堆的存放路径。</p></blockquote><blockquote><p>使用如下参数执行上述代码</p></blockquote><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-Xms5m -Xmx20m -<span class="string">XX:</span>+HeapDumpOnOutOfMemoryError -<span class="string">XX:</span>HeapDumpPath=<span class="regexp">/data/</span>app<span class="regexp">/tomcat/</span>logs/P02.dump</span><br></pre></td></tr></table></figure><blockquote><p>显然 <code>20M</code> 堆空间不足以容纳 <code>25M</code> 内存，系统比如发生内存溢出，在发生错误后，控制台输出如下 </p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">java<span class="selector-class">.lang</span><span class="selector-class">.OutOfMemoryError</span>: Java heap space Dumping heap to /data/app/tomcat/logs/P02<span class="selector-class">.dump</span>... Heap dump file created [<span class="number">23067302</span> bytes <span class="keyword">in</span> <span class="number">0.160</span> secs] Exception <span class="keyword">in</span> thread “main” java<span class="selector-class">.lang</span><span class="selector-class">.OutOfMemoryError</span>: Java heap space at geym<span class="selector-class">.zbase</span><span class="selector-class">.ch3</span><span class="selector-class">.heap</span><span class="selector-class">.DumpOOM</span><span class="selector-class">.main</span>(DumpOOM<span class="selector-class">.java</span>:<span class="number">19</span>)</span><br></pre></td></tr></table></figure><blockquote><p>可以看到，虚拟机将当前的堆导出，并保存到 <code>/data/app/tomcat/logs/P02.dump</code> 文件下<br>启动最小空间 <code>5M</code>，配了 <code>20M</code> 最大空间 ，发生了 <code>内存溢出错误</code>，dump 路径为 <code>/data/app/tomcat/logs/P02.dump</code>  使用 MAT 等工具打开该文件进行分析，可以很容易地找到这些 <code>byte</code> 数组和保存它们的 <code>Vector</code> 对象实例</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;Java-虚拟机之堆溢出处理&quot;&gt;&lt;a href=&quot;#Java-虚拟机之堆溢出处理&quot; class=&quot;headerlink&quot; title=&quot;Java 虚拟机之堆溢出处理&quot;&gt;&lt;/a&gt;Java 虚拟机之堆溢出处理&lt;/h2&gt;&lt;p&gt;在 Java 程序的运行过程中，如果堆空间不足，则有可能抛出内存溢出错误 &lt;code&gt;(Out Of Memory)&lt;/code&gt;，简称为 &lt;code&gt;OOM&lt;/code&gt;。&lt;/p&gt;
    
    </summary>
    
      <category term="Java笔记" scheme="http://www.gmlyo.com/categories/Java%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Java虚拟机之堆溢出处理" scheme="http://www.gmlyo.com/tags/Java%E8%99%9A%E6%8B%9F%E6%9C%BA%E4%B9%8B%E5%A0%86%E6%BA%A2%E5%87%BA%E5%A4%84%E7%90%86/"/>
    
  </entry>
  
  <entry>
    <title>Python编译安装</title>
    <link href="http://www.gmlyo.com//blog/2018/06/08/Python%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
    <id>http://www.gmlyo.com//blog/2018/06/08/Python编译安装/</id>
    <published>2018-06-08T15:39:07.000Z</published>
    <updated>2018-06-08T16:30:08.201Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>一般情况下，Linux 都会预装 Python，但是这个预装的 Python 版本一般都比较低，很多 Python 的新特性都没有，必须重新安装新一点的版本<br>Python下载地址<br><a href="https://www.python.org/" target="_blank" rel="noopener">https://www.python.org/</a><br><a href="https://www.python.org/ftp/python/" target="_blank" rel="noopener">https://www.python.org/ftp/python/</a><br><a href="https://www.python.org/ftp/python/2.7.15/" target="_blank" rel="noopener">https://www.python.org/ftp/python/2.7.15/</a><br><a href="https://www.python.org/ftp/python/3.6.5/" target="_blank" rel="noopener">https://www.python.org/ftp/python/3.6.5/</a></p></blockquote><a id="more"></a><h3 id="查看-Python-版本"><a href="#查看-Python-版本" class="headerlink" title="查看 Python 版本"></a>查看 Python 版本</h3><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">python</span> <span class="selector-tag">-V</span></span><br><span class="line"></span><br><span class="line"># <span class="selector-tag">CentOS</span> 6<span class="selector-class">.x</span></span><br><span class="line"><span class="selector-tag">Python</span> 2<span class="selector-class">.6</span><span class="selector-class">.6</span></span><br><span class="line"></span><br><span class="line"># <span class="selector-tag">CentOS</span> 7<span class="selector-class">.x</span></span><br><span class="line"><span class="selector-tag">python</span> 2<span class="selector-class">.7</span><span class="selector-class">.5</span></span><br></pre></td></tr></table></figure><p><del>做好链接，保留旧版本 python</del><br><del>cd /usr/bin/</del><br><del>cp /usr/bin/python /usr/bin/python_bak</del></p><p><del>如果发现 yum 不能用了，解决 yum 无法使用的问题</del><br><del>因为 yum 依赖系统默认安装的 python 版本, 处理如下：</del><br><del>vim /usr/bin/yum</del><br><del>#!/usr/bin/python</del><br><del>修改为-&gt; #!/usr/bin/python2.6 或 #!/usr/bin/env python2.6</del><br><del>import sys</del><br><del>try:</del><br>    <del>import yum</del><br><del>except ImportError:</del><br><del>……省略……</del></p><p><strong>这里不更改 <code>原 Python 版本</code></strong></p><h3 id="安装依赖"><a href="#安装依赖" class="headerlink" title="安装依赖"></a>安装依赖</h3><figure class="highlight nsis"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y install readline readline-devel sqlite sqlite-devel <span class="literal">zlib</span> <span class="literal">zlib</span>-devel openssl openssl-devel <span class="literal">bzip2</span> <span class="literal">bzip2</span>-devel <span class="literal">bzip2</span>-libs</span><br></pre></td></tr></table></figure><blockquote><p>缺少 <code>readline</code> 支持的 <code>IPython</code><br>WARNING: IPython History requires SQLite, your history will not be saved<br>WARNING: Readline services not available or not loaded.<br>WARNING: The auto-indent feature requires the readline library</p></blockquote><h3 id="下载-Python"><a href="#下载-Python" class="headerlink" title="下载  Python"></a>下载  <code>Python</code></h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">wget -c https:<span class="regexp">//</span>www.python.org<span class="regexp">/ftp/</span>python<span class="regexp">/3.6.5/</span>Python-<span class="number">3.6</span>.<span class="number">5</span>.tar.xz</span><br><span class="line">wget -c https:<span class="regexp">//</span>www.python.org<span class="regexp">/ftp/</span>python<span class="regexp">/2.7.15/</span>Python-<span class="number">2.7</span>.<span class="number">15</span>.tar.xz</span><br></pre></td></tr></table></figure><h3 id="安装-Python"><a href="#安装-Python" class="headerlink" title="安装 Python"></a>安装 Python</h3><h4 id="安装-Python-2-7-15"><a href="#安装-Python-2-7-15" class="headerlink" title="安装 Python 2.7.15"></a>安装 Python 2.7.15</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf Python<span class="number">-2.7</span><span class="number">.15</span>.tgz</span><br><span class="line">cd Python<span class="number">-2.7</span><span class="number">.15</span>/</span><br><span class="line">./configure \</span><br><span class="line">--prefix=/data/python2<span class="number">.7</span><span class="number">.15</span> --enable-optimizations</span><br><span class="line">make -j <span class="number">4</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="安装-Python-3-6-5"><a href="#安装-Python-3-6-5" class="headerlink" title="安装 Python 3.6.5"></a>安装 Python 3.6.5</h4><figure class="highlight lsl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf Python<span class="number">-3.6</span><span class="number">.5</span>.tgz</span><br><span class="line">cd Python<span class="number">-3.6</span><span class="number">.5</span>/</span><br><span class="line">./configure \</span><br><span class="line">--prefix=/data/python3<span class="number">.6</span><span class="number">.5</span> --enable-optimizations</span><br><span class="line">make -j <span class="number">4</span></span><br><span class="line">make install</span><br></pre></td></tr></table></figure><h4 id="添加-Python-环境变量"><a href="#添加-Python-环境变量" class="headerlink" title="添加 Python 环境变量"></a>添加 Python 环境变量</h4><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/profile</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:/data/python2.7.15/bin</span><br><span class="line"><span class="builtin-name">export</span> <span class="attribute">PATH</span>=<span class="variable">$PATH</span>:/data/python3.6.5/bin</span><br><span class="line">source /etc/profile</span><br></pre></td></tr></table></figure><blockquote><p>或</p></blockquote><figure class="highlight dos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> -e '\nexport <span class="built_in">PATH</span>=$<span class="built_in">PATH</span>:/data/python2.<span class="number">7</span>.<span class="number">15</span>/bin' &gt;&gt; /etc/profile</span><br><span class="line"><span class="built_in">echo</span> -e 'export <span class="built_in">PATH</span>=$<span class="built_in">PATH</span>:/data/python3.<span class="number">6</span>.<span class="number">5</span>/bin' &gt;&gt; /etc/profile</span><br></pre></td></tr></table></figure><p><del>PS：如果安装 easy_intall 时报 zlib 没有安装，Linux下直接 yum -y install zlib zlib-devel，然后重新编译 Python2.7.15 继续就可以了</del><br><del>cp /usr/bin/python /usr/bin/python_bak</del><br><del>ln -svnf /data/python2.7.15/bin/python2.7 /usr/bin/python</del></p><h3 id="setuptools-安装"><a href="#setuptools-安装" class="headerlink" title="setuptools 安装"></a>setuptools 安装</h3><blockquote><p>下载地址<br><a href="https://pypi.python.org/pypi/setuptools" target="_blank" rel="noopener">https://pypi.python.org/pypi/setuptools</a><br><a href="https://pypi.python.org/simple/setuptools/" target="_blank" rel="noopener">https://pypi.python.org/simple/setuptools/</a></p></blockquote><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">tar</span> <span class="selector-tag">-zxvf</span> <span class="selector-tag">setuptools-39</span><span class="selector-class">.2</span><span class="selector-class">.0</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line"><span class="selector-tag">cd</span> <span class="selector-tag">setuptools-39</span><span class="selector-class">.2</span><span class="selector-class">.0</span></span><br><span class="line"><span class="selector-tag">python3</span> <span class="selector-tag">setup</span><span class="selector-class">.py</span> <span class="selector-tag">build</span></span><br><span class="line"><span class="selector-tag">python3</span> <span class="selector-tag">setup</span><span class="selector-class">.py</span> <span class="selector-tag">install</span></span><br></pre></td></tr></table></figure><blockquote><p>IPython 是一个 python 的交互式 Shell，比默认的 Python Shell 好用一点，支持变量自动补全，自动缩进，支持 Bash Shell 命令，内置了许多很有用的功能和函数<br>安装 IPython<br>IPython 下载地址<br><a href="https://pypi.org/project/ipython/" target="_blank" rel="noopener">https://pypi.org/project/ipython/</a></p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -zxvf ipython-<span class="number">6.4</span>.<span class="number">0</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">cd ipython-<span class="number">6.4</span>.<span class="number">0</span>/</span><br><span class="line">python3 setup<span class="selector-class">.py</span> build</span><br><span class="line">python3 setup<span class="selector-class">.py</span> install</span><br></pre></td></tr></table></figure><h3 id="安装-pip"><a href="#安装-pip" class="headerlink" title="安装 pip"></a>安装 pip</h3><blockquote><p>pip 下载地址<br><a href="https://pypi.org/project/pip/" target="_blank" rel="noopener">https://pypi.org/project/pip/</a></p></blockquote><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tar -xvf pip-<span class="number">10.0</span>.<span class="number">1</span><span class="selector-class">.tar</span><span class="selector-class">.gz</span></span><br><span class="line">cd pip-<span class="number">10.0</span>.<span class="number">1</span>/</span><br><span class="line">python3 setup<span class="selector-class">.py</span> build</span><br><span class="line">python3 setup<span class="selector-class">.py</span> install</span><br></pre></td></tr></table></figure><h3 id="pip-安装-python-第三方库"><a href="#pip-安装-python-第三方库" class="headerlink" title="pip 安装 python 第三方库"></a>pip 安装 python 第三方库</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">pip3 <span class="keyword">install</span> requests</span><br><span class="line">pip3 <span class="keyword">install</span> pyapi-gitlab</span><br><span class="line">pip3 <span class="keyword">install</span> readline</span><br><span class="line">pip3 <span class="keyword">install</span> rlcompleter2</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;blockquote&gt;
&lt;p&gt;一般情况下，Linux 都会预装 Python，但是这个预装的 Python 版本一般都比较低，很多 Python 的新特性都没有，必须重新安装新一点的版本&lt;br&gt;Python下载地址&lt;br&gt;&lt;a href=&quot;https://www.python.org/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.python.org/ftp/python/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/ftp/python/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.python.org/ftp/python/2.7.15/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/ftp/python/2.7.15/&lt;/a&gt;&lt;br&gt;&lt;a href=&quot;https://www.python.org/ftp/python/3.6.5/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://www.python.org/ftp/python/3.6.5/&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Python笔记" scheme="http://www.gmlyo.com/categories/Python%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Python编译安装" scheme="http://www.gmlyo.com/tags/Python%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85/"/>
    
  </entry>
  
  <entry>
    <title>Shell脚本日志切割</title>
    <link href="http://www.gmlyo.com//blog/2018/06/08/Shell%E8%84%9A%E6%9C%AC%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/"/>
    <id>http://www.gmlyo.com//blog/2018/06/08/Shell脚本日志切割/</id>
    <published>2018-06-07T18:42:03.000Z</published>
    <updated>2018-06-07T18:51:43.803Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Shell-脚本日志切割"><a href="#Shell-脚本日志切割" class="headerlink" title="Shell 脚本日志切割"></a>Shell 脚本日志切割</h3><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">vim logcut.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">day=$(date +<span class="string">"%Y-%m-%d"</span>)</span><br><span class="line">yesterday=$(date -d <span class="string">"yesterday"</span> +%Y-%m-%d)</span><br><span class="line">logsdir=(/data/app/*/logs)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> logdir <span class="keyword">in</span> <span class="variable">$&#123;logsdir[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="keyword">for</span> logfile <span class="keyword">in</span> $(ls <span class="variable">$&#123;logdir[@]&#125;</span> | egrep <span class="string">"stdout.log|catalina.out"</span>)</span><br><span class="line">    <span class="keyword">do</span></span><br><span class="line">        cp <span class="variable">$logdir</span>/<span class="variable">$logfile</span> <span class="variable">$logdir</span>/<span class="variable">$&#123;logfile%.log&#125;</span>.<span class="variable">$&#123;day&#125;</span>.<span class="built_in">log</span></span><br><span class="line">        cp <span class="variable">$logs</span>/<span class="variable">$file</span> <span class="variable">$logs</span>/<span class="variable">$&#123;file%.out&#125;</span>.<span class="variable">$&#123;day&#125;</span>.out</span><br><span class="line">        cat /dev/null &gt; <span class="variable">$logdir</span>/<span class="variable">$logfile</span></span><br><span class="line">    <span class="keyword">done</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Shell-脚本日志切割&quot;&gt;&lt;a href=&quot;#Shell-脚本日志切割&quot; class=&quot;headerlink&quot; title=&quot;Shell 脚本日志切割&quot;&gt;&lt;/a&gt;Shell 脚本日志切割&lt;/h3&gt;
    
    </summary>
    
      <category term="Shell笔记" scheme="http://www.gmlyo.com/categories/Shell%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Shell脚本日志切割" scheme="http://www.gmlyo.com/tags/Shell%E8%84%9A%E6%9C%AC%E6%97%A5%E5%BF%97%E5%88%87%E5%89%B2/"/>
    
  </entry>
  
  <entry>
    <title>Shell脚本日志压缩</title>
    <link href="http://www.gmlyo.com//blog/2018/06/08/Shell%E8%84%9A%E6%9C%AC%E6%97%A5%E5%BF%97%E5%8E%8B%E7%BC%A9/"/>
    <id>http://www.gmlyo.com//blog/2018/06/08/Shell脚本日志压缩/</id>
    <published>2018-06-07T16:51:39.000Z</published>
    <updated>2018-06-07T18:52:01.150Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Shell-脚本日志压缩打包"><a href="#Shell-脚本日志压缩打包" class="headerlink" title="Shell 脚本日志压缩打包"></a>Shell 脚本日志压缩打包</h3><blockquote><p>压缩 <code>7</code> 天前日志<br>每个月 <code>1</code> 号，创建上个月的目录，<code>年-月</code> <code>2018-04</code><br>将 <code>gz</code> 压缩文件拷贝到 <code>年-月</code> <code>2018-04</code> 目录中</p></blockquote><a id="more"></a><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">vim compresslog.sh</span><br><span class="line"><span class="meta">#!/bin/bash</span></span><br><span class="line"></span><br><span class="line">day=$(date +<span class="string">"%d"</span>)</span><br><span class="line">month=$(date +<span class="string">"%Y-%d"</span>)</span><br><span class="line">lastmonth=$(date +<span class="string">"%Y-%m"</span> -d <span class="string">"last month"</span>)</span><br><span class="line">lastweek=$(date +<span class="string">"%Y-%m-%d"</span> -d <span class="string">"last week"</span>)</span><br><span class="line">logsdir=(/data/app/*/logs)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> logs <span class="keyword">in</span> <span class="variable">$&#123;logsdir[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    find <span class="variable">$logs</span>/ -mtime +7 -regextype posix-extended -regex <span class="string">".*\.(log|out|txt)"</span> -<span class="built_in">exec</span> gzip &#123;&#125; \;</span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line">[ <span class="variable">$day</span> == 01 ] &amp;&amp; <span class="built_in">cd</span> <span class="variable">$&#123;logsdir[@]&#125;</span> &amp;&amp; mkdir -pv <span class="variable">$lastmonth</span></span><br><span class="line"><span class="keyword">for</span> logdir <span class="keyword">in</span> <span class="variable">$&#123;logsdir[@]&#125;</span></span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    [ -d <span class="variable">$logdir</span>/<span class="variable">$lastmonth</span> ] || mkdir -pv <span class="variable">$logdir</span>/<span class="variable">$lastmonth</span></span><br><span class="line">    mv <span class="variable">$logdir</span>/*gz <span class="variable">$logdir</span>/<span class="variable">$lastmonth</span></span><br><span class="line"><span class="keyword">done</span></span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Shell-脚本日志压缩打包&quot;&gt;&lt;a href=&quot;#Shell-脚本日志压缩打包&quot; class=&quot;headerlink&quot; title=&quot;Shell 脚本日志压缩打包&quot;&gt;&lt;/a&gt;Shell 脚本日志压缩打包&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;压缩 &lt;code&gt;7&lt;/code&gt; 天前日志&lt;br&gt;每个月 &lt;code&gt;1&lt;/code&gt; 号，创建上个月的目录，&lt;code&gt;年-月&lt;/code&gt; &lt;code&gt;2018-04&lt;/code&gt;&lt;br&gt;将 &lt;code&gt;gz&lt;/code&gt; 压缩文件拷贝到 &lt;code&gt;年-月&lt;/code&gt; &lt;code&gt;2018-04&lt;/code&gt; 目录中&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Shell笔记" scheme="http://www.gmlyo.com/categories/Shell%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Shell脚本日志压缩" scheme="http://www.gmlyo.com/tags/Shell%E8%84%9A%E6%9C%AC%E6%97%A5%E5%BF%97%E5%8E%8B%E7%BC%A9/"/>
    
  </entry>
  
  <entry>
    <title>LVM 磁盘扩展</title>
    <link href="http://www.gmlyo.com//blog/2018/06/07/LVM%E7%A3%81%E7%9B%98%E6%89%A9%E5%B1%95/"/>
    <id>http://www.gmlyo.com//blog/2018/06/07/LVM磁盘扩展/</id>
    <published>2018-06-06T17:11:42.000Z</published>
    <updated>2018-06-07T18:57:45.323Z</updated>
    
    <content type="html"><![CDATA[<h2 id="LVM-磁盘扩展"><a href="#LVM-磁盘扩展" class="headerlink" title="LVM 磁盘扩展"></a>LVM 磁盘扩展</h2><a id="more"></a><h3 id="查看磁盘空间"><a href="#查看磁盘空间" class="headerlink" title="查看磁盘空间"></a>查看磁盘空间</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">df -h</span></span><br></pre></td></tr></table></figure><h3 id="查看-LV-信息"><a href="#查看-LV-信息" class="headerlink" title="查看 LV 信息"></a>查看 LV 信息</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">lvs</span></span><br></pre></td></tr></table></figure><h3 id="查看-VG-信息"><a href="#查看-VG-信息" class="headerlink" title="查看 VG 信息"></a>查看 VG 信息</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vgs</span></span><br></pre></td></tr></table></figure><h3 id="创建-PV"><a href="#创建-PV" class="headerlink" title="创建 PV"></a>创建 PV</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">pvcreate <span class="regexp">/dev/</span>vdb</span><br></pre></td></tr></table></figure><h3 id="扩展已有的-VG-容量"><a href="#扩展已有的-VG-容量" class="headerlink" title="扩展已有的 VG 容量"></a>扩展已有的 VG 容量</h3><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">vgextend vgdata <span class="regexp">/dev/</span>vdb</span><br></pre></td></tr></table></figure><blockquote><p><code>Couldn&#39;t&#39; create temporary archive name.</code><br>因为磁盘实在太小了或已经没有空间了，无法执行，删除一些数据就好了</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vgextend vgdata /dev/sda</span><br><span class="line">Volume<span class="built_in"> group </span><span class="string">"vgdata"</span> successfully extended</span><br></pre></td></tr></table></figure><h3 id="查看-VG-信息-1"><a href="#查看-VG-信息-1" class="headerlink" title="查看 VG 信息"></a>查看 VG 信息</h3><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">vgs</span></span><br></pre></td></tr></table></figure><h3 id="扩展已有-LV-容量"><a href="#扩展已有-LV-容量" class="headerlink" title="扩展已有 LV 容量"></a>扩展已有 LV 容量</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">lvextend -L +<span class="number">99.99</span>G -n <span class="meta-keyword">/dev/</span>vgdata/lvdata</span><br><span class="line">lvextend -L +<span class="number">1020</span>M -n <span class="meta-keyword">/dev/</span>vgdata/lvdata</span><br></pre></td></tr></table></figure><blockquote><p>-L    # 指定逻辑卷的大小，单位为 <code>kKmMgGtT</code> 字节，也就是 <code>Size</code><br>-l    # 指定逻辑卷的大小，单位为 <code>PE</code> 数</p></blockquote><h3 id="重新加载逻辑卷"><a href="#重新加载逻辑卷" class="headerlink" title="重新加载逻辑卷"></a>重新加载逻辑卷</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 加载 ext 文件系统</span></span><br><span class="line">resize2fs <span class="meta-keyword">/dev/</span>vgdata/lvdata</span><br><span class="line"></span><br><span class="line"><span class="meta"># 加载 xfs 文件系统</span></span><br><span class="line">xfs_growfs <span class="meta-keyword">/dev/</span>vgdata/lvdata</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;LVM-磁盘扩展&quot;&gt;&lt;a href=&quot;#LVM-磁盘扩展&quot; class=&quot;headerlink&quot; title=&quot;LVM 磁盘扩展&quot;&gt;&lt;/a&gt;LVM 磁盘扩展&lt;/h2&gt;
    
    </summary>
    
      <category term="LVM笔记" scheme="http://www.gmlyo.com/categories/LVM%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="LVM 磁盘扩展" scheme="http://www.gmlyo.com/tags/LVM-%E7%A3%81%E7%9B%98%E6%89%A9%E5%B1%95/"/>
    
  </entry>
  
  <entry>
    <title>创建LVM</title>
    <link href="http://www.gmlyo.com//blog/2018/06/07/LVM%E5%88%9B%E5%BB%BA/"/>
    <id>http://www.gmlyo.com//blog/2018/06/07/LVM创建/</id>
    <published>2018-06-06T17:05:31.000Z</published>
    <updated>2018-06-07T19:29:24.751Z</updated>
    
    <content type="html"><![CDATA[<h2 id="创建-LVM"><a href="#创建-LVM" class="headerlink" title="创建 LVM"></a>创建 LVM</h2><blockquote><p>LVM 创建过程<br><code>创建PV</code> -&gt; <code>创建VG</code> -&gt; <code>创建LV</code> -&gt; <code>格式化LV</code> -&gt; <code>mount挂载</code></p><p>常用命令<br><code>pvcreate</code> 设备名<br><code>vgcreate</code> 卷组名 物理卷<br><code>lvcreate</code> <code>-L</code> 大小 <code>-n</code> 逻辑卷名 卷组名</p></blockquote><a id="more"></a><h3 id="LVM-常用命令表"><a href="#LVM-常用命令表" class="headerlink" title="LVM 常用命令表"></a>LVM 常用命令表</h3><table><thead><tr><th>功能</th><th>管理物理卷</th><th>管理卷组</th><th>管理逻辑卷</th></tr></thead><tbody><tr><td>Scan 扫描</td><td>pvscan</td><td>vgscan</td><td>lvscan</td></tr><tr><td>Create 创建</td><td><code>pvcreate</code></td><td><code>vgcreate</code></td><td><code>lvcreate</code></td></tr><tr><td>Display 显示</td><td>pvdisplay</td><td>vgdisplay</td><td>lvdisplay</td></tr><tr><td>Remove 删除</td><td>pvremove</td><td>vgremove</td><td>lvremove</td></tr><tr><td>Extend 扩展</td><td></td><td><code>vgextend</code></td><td><code>lvextend</code></td></tr><tr><td>Reduce 减少</td><td></td><td>vgreduce</td><td>lvreduce</td></tr></tbody></table><h3 id="安装-LVM"><a href="#安装-LVM" class="headerlink" title="安装 LVM"></a>安装 LVM</h3><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum -y <span class="keyword">install</span> lvm2</span><br></pre></td></tr></table></figure><h3 id="创建-PV"><a href="#创建-PV" class="headerlink" title="创建 PV"></a>创建 PV</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pvcreate /dev/vdb</span><br><span class="line">Physical <span class="keyword">volume</span><span class="bash"> <span class="string">"/dev/vdb"</span> successfully created</span></span><br></pre></td></tr></table></figure><h3 id="创建-VG"><a href="#创建-VG" class="headerlink" title="创建 VG"></a>创建 VG</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vgcreate vgdata /dev/vdb</span><br><span class="line">Volume<span class="built_in"> group </span><span class="string">"vgdata"</span> successfully created</span><br></pre></td></tr></table></figure><h3 id="创建-LV"><a href="#创建-LV" class="headerlink" title="创建 LV"></a>创建 LV</h3><figure class="highlight dockerfile"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">lvcreate -L <span class="number">49.99</span>G -n lvdata vgdata /dev/vdb</span><br><span class="line">Logical <span class="keyword">volume</span><span class="bash"> <span class="string">"lvdata"</span> created.</span></span><br><span class="line"><span class="bash"></span></span><br><span class="line"><span class="bash">lvcreate -L 99.99G -n lvdata vgdata /dev/vdb</span></span><br><span class="line"><span class="bash">Logical volume <span class="string">"lvdata"</span> created.</span></span><br></pre></td></tr></table></figure><h3 id="文件系统格式化"><a href="#文件系统格式化" class="headerlink" title="文件系统格式化"></a>文件系统格式化</h3><figure class="highlight dts"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta"># 格式化 ext 文件系统</span></span><br><span class="line">mkfs.ext4 <span class="meta-keyword">/dev/</span>vgdata/lvdata</span><br><span class="line"></span><br><span class="line"><span class="meta"># 格式化 xfs 文件系统</span></span><br><span class="line">mkfs.xfs <span class="meta-keyword">/dev/</span>vgdata/lvdata</span><br></pre></td></tr></table></figure><h3 id="挂载逻辑卷到目录"><a href="#挂载逻辑卷到目录" class="headerlink" title="挂载逻辑卷到目录"></a>挂载逻辑卷到目录</h3><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">mkdir</span> -pv /<span class="class"><span class="keyword">data</span></span></span><br><span class="line"><span class="title">mount</span> /dev/vgdata/lvdata /<span class="class"><span class="keyword">data</span></span></span><br></pre></td></tr></table></figure><h3 id="编辑-etc-fstab"><a href="#编辑-etc-fstab" class="headerlink" title="编辑 /etc/fstab"></a>编辑 /etc/fstab</h3><figure class="highlight jboss-cli"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="string">/etc/fstab</span></span><br><span class="line"><span class="string">...</span>省略<span class="string">...</span></span><br><span class="line"><span class="string">/dev/mapper/vgdata-lvdata</span>                 <span class="string">/data</span>   xfs     defaults        0 0</span><br><span class="line"><span class="string">...</span>省略<span class="string">...</span></span><br></pre></td></tr></table></figure><p>### </p>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;创建-LVM&quot;&gt;&lt;a href=&quot;#创建-LVM&quot; class=&quot;headerlink&quot; title=&quot;创建 LVM&quot;&gt;&lt;/a&gt;创建 LVM&lt;/h2&gt;&lt;blockquote&gt;
&lt;p&gt;LVM 创建过程&lt;br&gt;&lt;code&gt;创建PV&lt;/code&gt; -&amp;gt; &lt;code&gt;创建VG&lt;/code&gt; -&amp;gt; &lt;code&gt;创建LV&lt;/code&gt; -&amp;gt; &lt;code&gt;格式化LV&lt;/code&gt; -&amp;gt; &lt;code&gt;mount挂载&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;常用命令&lt;br&gt;&lt;code&gt;pvcreate&lt;/code&gt; 设备名&lt;br&gt;&lt;code&gt;vgcreate&lt;/code&gt; 卷组名 物理卷&lt;br&gt;&lt;code&gt;lvcreate&lt;/code&gt; &lt;code&gt;-L&lt;/code&gt; 大小 &lt;code&gt;-n&lt;/code&gt; 逻辑卷名 卷组名&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="LVM笔记" scheme="http://www.gmlyo.com/categories/LVM%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="创建LVM" scheme="http://www.gmlyo.com/tags/%E5%88%9B%E5%BB%BALVM/"/>
    
  </entry>
  
  <entry>
    <title>Next添加文章结束标记</title>
    <link href="http://www.gmlyo.com//blog/2018/06/07/Next%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E7%BB%93%E6%9D%9F%E6%A0%87%E8%AE%B0/"/>
    <id>http://www.gmlyo.com//blog/2018/06/07/Next添加文章结束标记/</id>
    <published>2018-06-06T16:16:33.000Z</published>
    <updated>2018-06-06T16:24:22.224Z</updated>
    
    <content type="html"><![CDATA[<h3 id="添加文章结束标记"><a href="#添加文章结束标记" class="headerlink" title="添加文章结束标记"></a>添加文章结束标记</h3><blockquote><p>编辑 <code>/hexo/themes/next/layout/_macro/post.swig</code> 文件<br>在 <code>if theme.wechat_subscriber.enabled and not is_index</code> 上面添加如下代码</p></blockquote><a id="more"></a><h3 id="代码片段"><a href="#代码片段" class="headerlink" title="代码片段"></a>代码片段</h3><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">"text-align:center;color: #ccc;font-size:14px;"</span>&gt;</span>---------------- The End ----------------<span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">if</span></span> theme.wechat_subscriber.enabled and not is_index %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml">    </span><span class="template-tag">&#123;% <span class="name"><span class="name">include</span></span> 'wechat-subscriber.swig' %&#125;</span><span class="xml"></span></span><br><span class="line"><span class="xml">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br><span class="line"><span class="xml"></span><span class="template-tag">&#123;% <span class="name"><span class="name">endif</span></span> %&#125;</span><span class="xml"></span></span><br></pre></td></tr></table></figure><h3 id="显示效果"><a href="#显示效果" class="headerlink" title="显示效果"></a>显示效果</h3><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">————— The <span class="keyword">End</span> —————</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;添加文章结束标记&quot;&gt;&lt;a href=&quot;#添加文章结束标记&quot; class=&quot;headerlink&quot; title=&quot;添加文章结束标记&quot;&gt;&lt;/a&gt;添加文章结束标记&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;编辑 &lt;code&gt;/hexo/themes/next/layout/_macro/post.swig&lt;/code&gt; 文件&lt;br&gt;在 &lt;code&gt;if theme.wechat_subscriber.enabled and not is_index&lt;/code&gt; 上面添加如下代码&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Next笔记" scheme="http://www.gmlyo.com/categories/Next%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Next添加文章结束标记" scheme="http://www.gmlyo.com/tags/Next%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E7%BB%93%E6%9D%9F%E6%A0%87%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Next添加音乐</title>
    <link href="http://www.gmlyo.com//blog/2018/06/06/Next%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90/"/>
    <id>http://www.gmlyo.com//blog/2018/06/06/Next添加音乐/</id>
    <published>2018-06-06T15:58:39.000Z</published>
    <updated>2018-06-06T16:03:39.766Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Next-添加音乐"><a href="#Next-添加音乐" class="headerlink" title="Next 添加音乐"></a>Next 添加音乐</h3><blockquote><p>去网易云音乐搜索喜欢的音乐，点击生成外链播放器，复制代码直接放到博文末尾即可<br><code>height</code> 设为 <code>0</code> 可隐藏播放器，但仍然可以播放音乐<br><code>auto</code> 设成 <code>0</code> 可手动播放，默认是 <code>1</code> 自动播放</p></blockquote><a id="more"></a><blockquote><p>编辑 <code>/hexo/themes/next/layout/_custom/sidebar.swig</code> 文件里，播放器会显示在站点预览中<br>或<br>编辑 <code>/hexo/themes/next/layout/_macro/sidebar.swig</code> 文件里</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将代码粘贴到一个合适的位置</span></span><br><span class="line">&lt;iframe <span class="attribute">frameborder</span>=<span class="string">"no"</span> <span class="attribute">border</span>=<span class="string">"0"</span> <span class="attribute">marginwidth</span>=<span class="string">"0"</span> <span class="attribute">marginheight</span>=<span class="string">"0"</span> <span class="attribute">width</span>=330 <span class="attribute">height</span>=110 </span><br><span class="line"><span class="attribute">src</span>=<span class="string">"//music.163.com/outchain/player?type=0&amp;id=2188265841&amp;auto=1&amp;height=90"</span>&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Next-添加音乐&quot;&gt;&lt;a href=&quot;#Next-添加音乐&quot; class=&quot;headerlink&quot; title=&quot;Next 添加音乐&quot;&gt;&lt;/a&gt;Next 添加音乐&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;去网易云音乐搜索喜欢的音乐，点击生成外链播放器，复制代码直接放到博文末尾即可&lt;br&gt;&lt;code&gt;height&lt;/code&gt; 设为 &lt;code&gt;0&lt;/code&gt; 可隐藏播放器，但仍然可以播放音乐&lt;br&gt;&lt;code&gt;auto&lt;/code&gt; 设成 &lt;code&gt;0&lt;/code&gt; 可手动播放，默认是 &lt;code&gt;1&lt;/code&gt; 自动播放&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Next笔记" scheme="http://www.gmlyo.com/categories/Next%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Next添加音乐" scheme="http://www.gmlyo.com/tags/Next%E6%B7%BB%E5%8A%A0%E9%9F%B3%E4%B9%90/"/>
    
  </entry>
  
  <entry>
    <title>Hexo添加分类及标签</title>
    <link href="http://www.gmlyo.com//blog/2018/06/06/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/"/>
    <id>http://www.gmlyo.com//blog/2018/06/06/Hexo添加分类及标签/</id>
    <published>2018-06-06T14:49:07.000Z</published>
    <updated>2018-06-06T15:12:27.741Z</updated>
    
    <content type="html"><![CDATA[<h3 id="Hexo添加分类及标签"><a href="#Hexo添加分类及标签" class="headerlink" title="Hexo添加分类及标签"></a>Hexo添加分类及标签</h3><h3 id="创建-分类-选项"><a href="#创建-分类-选项" class="headerlink" title="创建 分类 选项"></a>创建 <code>分类</code> 选项</h3><blockquote><p>生成 <code>分类</code> 页并添加 <code>type</code> 属性<br>打开命令行，进入博客所在文件夹，执行命令</p></blockquote><a id="more"></a><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>categories</span><br></pre></td></tr></table></figure><blockquote><p>成功后会提示</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~<span class="regexp">/hexo/</span><span class="keyword">source</span><span class="regexp">/categories/i</span>ndex.md</span><br></pre></td></tr></table></figure><blockquote><p>根据上面的路径，找到 <code>index.md</code> 这个文件，打开后默认内容是这样的</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-06</span><span class="bullet">-06</span> <span class="number">22</span><span class="string">:49:07</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>添加 <code>type: &quot;categories&quot;</code> 到内容中，添加后是这样的</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-06</span><span class="bullet">-06</span> <span class="number">22</span><span class="string">:49:07</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"categories"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><h3 id="给文章添加-“categories”-属性"><a href="#给文章添加-“categories”-属性" class="headerlink" title="给文章添加 “categories” 属性"></a>给文章添加 <code>“categories”</code> 属性</h3><blockquote><p>打开需要添加分类的文章，为其添加 <code>categories</code> 属性<br>下方的 <code>categories: Hexo笔记</code> 表示添加这篇文章到 <code>Hexo笔记</code> 这个分类<br>注意：<code>hexo</code> 一篇文章只能属于一个分类，也就是说如果在 <code>- Hexo笔记</code> 下方添加 <code>- xxx</code><br><code>hexo</code> 不会产生两个分类，而是把分类嵌套（即该文章属于 <code>- Hexo笔记</code> 下的 <code>- xxx</code> 分类）</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo添加分类及标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-06</span><span class="bullet">-06</span> <span class="number">22</span><span class="string">:44:41</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo笔记</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>至此，成功给文章添加分类，点击首页的 <code>分类</code> 可以看到该分类下的所有文章<br>当然，只有添加了 <code>categories: xxx</code> 的文章才会被收录到首页的 <code>分类</code> 中</p></blockquote><h3 id="创建标签选项"><a href="#创建标签选项" class="headerlink" title="创建标签选项"></a>创建<code>标签</code>选项</h3><blockquote><p>生成 <code>标签</code> 页并添加 <code>type</code> 属性<br>打开命令行，进入博客所在文件夹，执行命令</p></blockquote><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new<span class="built_in"> page </span>tags</span><br></pre></td></tr></table></figure><blockquote><p>成功后会提示</p></blockquote><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INFO  Created: ~<span class="regexp">/hexo/</span><span class="keyword">source</span><span class="regexp">/tags/i</span>ndex.md</span><br></pre></td></tr></table></figure><blockquote><p>根据上面的路径，找到<code>index.md</code>这个文件，打开后默认内容是这样的</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-06</span><span class="bullet">-06</span> <span class="number">22</span><span class="string">:49:07</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>添加 <code>type: &quot;tags&quot;</code> 到内容中，添加后是这样的</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">文章分类</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-06</span><span class="bullet">-06</span> <span class="number">22</span><span class="string">:49:07</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">"tags"</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>给文章添加<code>tags</code>属性<br>打开需要添加标签的文章，为其添加 <code>tags</code> 属性<br>下方的<br><code>tags:</code><br><code>Hexo添加分类及标签</code><br><code>- 表格</code><br><code>- 表单验证</code><br>就是这篇文章的标签了</p></blockquote><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">Hexo添加分类及标签</span></span><br><span class="line"><span class="attr">date:</span> <span class="number">2018</span><span class="bullet">-06</span><span class="bullet">-06</span> <span class="number">22</span><span class="string">:49:07</span></span><br><span class="line"><span class="attr">categories:</span> </span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo笔记</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">Hexo添加分类及标签</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">表格</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">表单验证</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure><blockquote><p>至此，成功给文章添加分类，点击首页的<code>标签</code>可以看到该标签下的所有文章<br>当然，只有添加了 <code>tags: xxx</code> 的文章才会被收录到首页的<code>标签</code>中<br>细心的朋友可能已经发现，这两个的设置几乎一模一样！是的，没错，思路都是一样的<br>所以我们可以打开 \hexo\scaffolds/post.md 文件，在 <code>tages:</code>上面加入<code>categories:</code><br><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">vim</span> <span class="string">/hexo/scaffolds/post.md</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">title:</span> <span class="string">&#123;&#123;</span> <span class="string">title</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">date:</span> <span class="string">&#123;&#123;</span> <span class="string">date</span> <span class="string">&#125;&#125;</span></span><br><span class="line"><span class="attr">categories:</span></span><br><span class="line"><span class="attr">tags:</span></span><br><span class="line"><span class="meta">---</span></span><br></pre></td></tr></table></figure></p></blockquote><blockquote><p>保存后执行<code>hexo new &quot;文章名&quot;</code>命令生成的文件，页面里就有<code>categories:</code>项了<br><code>\hexo\scaffolds\</code> 目录下，是新建页面的模板，执行新建命令时，是根据这里的模板页来完成的，所以可以在这里根据你自己的需求添加一些默认值</p></blockquote>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;Hexo添加分类及标签&quot;&gt;&lt;a href=&quot;#Hexo添加分类及标签&quot; class=&quot;headerlink&quot; title=&quot;Hexo添加分类及标签&quot;&gt;&lt;/a&gt;Hexo添加分类及标签&lt;/h3&gt;&lt;h3 id=&quot;创建-分类-选项&quot;&gt;&lt;a href=&quot;#创建-分类-选项&quot; class=&quot;headerlink&quot; title=&quot;创建 分类 选项&quot;&gt;&lt;/a&gt;创建 &lt;code&gt;分类&lt;/code&gt; 选项&lt;/h3&gt;&lt;blockquote&gt;
&lt;p&gt;生成 &lt;code&gt;分类&lt;/code&gt; 页并添加 &lt;code&gt;type&lt;/code&gt; 属性&lt;br&gt;打开命令行，进入博客所在文件夹，执行命令&lt;/p&gt;
&lt;/blockquote&gt;
    
    </summary>
    
      <category term="Hexo笔记" scheme="http://www.gmlyo.com/categories/Hexo%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Hexo添加分类及标签" scheme="http://www.gmlyo.com/tags/Hexo%E6%B7%BB%E5%8A%A0%E5%88%86%E7%B1%BB%E5%8F%8A%E6%A0%87%E7%AD%BE/"/>
    
  </entry>
  
</feed>
