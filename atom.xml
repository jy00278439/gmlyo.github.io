<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>G加菲</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://www.gmlyo.com/"/>
  <updated>2018-09-01T09:49:24.818Z</updated>
  <id>http://www.gmlyo.com/</id>
  
  <author>
    <name>G加菲</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Docker version 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-version-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-version-命令/</id>
    <published>2018-09-01T09:49:02.000Z</published>
    <updated>2018-09-01T09:49:24.818Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-version-命令"><a href="#Docker-version-命令" class="headerlink" title="Docker version 命令"></a>Docker version 命令</h1><a id="more"></a><p><strong>docker version :</strong> 显示 Docker 版本信息。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker version <span class="string">[OPTIONS]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-f :</strong> 指定返回值的模板文件。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>显示 Docker 版本信息。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">docker</span> <span class="string">version</span></span><br><span class="line"><span class="attr">Client:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.2</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">0</span><span class="string">a8c2e3</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Sep</span> <span class="number">10</span> <span class="number">19</span><span class="string">:19:00</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br><span class="line"></span><br><span class="line"><span class="attr">Server:</span></span><br><span class="line"><span class="attr"> Version:</span>      <span class="number">1.8</span><span class="number">.2</span></span><br><span class="line"> <span class="string">API</span> <span class="attr">version:</span>  <span class="number">1.20</span></span><br><span class="line"> <span class="string">Go</span> <span class="attr">version:</span>   <span class="string">go1.4.2</span></span><br><span class="line"> <span class="string">Git</span> <span class="attr">commit:</span>   <span class="number">0</span><span class="string">a8c2e3</span></span><br><span class="line"><span class="attr"> Built:</span>        <span class="string">Thu</span> <span class="string">Sep</span> <span class="number">10</span> <span class="number">19</span><span class="string">:19:00</span> <span class="string">UTC</span> <span class="number">2015</span></span><br><span class="line"> <span class="string">OS/Arch:</span>      <span class="string">linux/amd64</span></span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-version-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-version-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-version-命令&quot;&gt;&lt;a href=&quot;#Docker-version-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker version 命令&quot;&gt;&lt;/a&gt;Docker version 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker version 命令" scheme="http://www.gmlyo.com/tags/Docker-version-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker info 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-info-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-info-命令/</id>
    <published>2018-09-01T09:45:51.000Z</published>
    <updated>2018-09-01T09:46:29.154Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-info-命令"><a href="#Docker-info-命令" class="headerlink" title="Docker info 命令"></a>Docker info 命令</h1><a id="more"></a><p><strong>docker info :</strong> 显示 Docker 系统信息，包括镜像和容器数。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> <span class="literal">info</span> [OPTIONS]</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查看 docker 系统信息。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">docker info</span><br><span class="line"><span class="string">Containers:</span> <span class="number">12</span></span><br><span class="line"><span class="string">Images:</span> <span class="number">41</span></span><br><span class="line">Storage <span class="string">Driver:</span> aufs</span><br><span class="line"> Root <span class="string">Dir:</span> <span class="regexp">/var/</span>lib<span class="regexp">/docker/</span>aufs</span><br><span class="line"> Backing <span class="string">Filesystem:</span> extfs</span><br><span class="line"><span class="symbol"> Dirs:</span> <span class="number">66</span></span><br><span class="line"> Dirperm1 <span class="string">Supported:</span> <span class="literal">false</span></span><br><span class="line">Execution <span class="string">Driver:</span> native<span class="number">-0.2</span></span><br><span class="line">Logging <span class="string">Driver:</span> json-file</span><br><span class="line">Kernel <span class="string">Version:</span> <span class="number">3.13</span><span class="number">.0</span><span class="number">-32</span>-generic</span><br><span class="line">Operating <span class="string">System:</span> Ubuntu <span class="number">14.04</span><span class="number">.1</span> LTS</span><br><span class="line"><span class="string">CPUs:</span> <span class="number">1</span></span><br><span class="line">Total <span class="string">Memory:</span> <span class="number">1.954</span> GiB</span><br><span class="line"><span class="string">Name:</span> iZ23mtq8bs1Z</span><br><span class="line"><span class="string">ID:</span> <span class="string">M5N4:</span><span class="string">K6WN:</span><span class="string">PUNC:</span><span class="number">73</span><span class="string">ZN:</span><span class="string">AONJ:</span><span class="string">AUHL:</span><span class="string">KSYH:</span><span class="number">2</span><span class="string">JPI:</span><span class="string">CH3K:</span><span class="string">O4MK:</span><span class="number">6</span><span class="string">OCX:</span><span class="number">5</span>OYW</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-info-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-info-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-info-命令&quot;&gt;&lt;a href=&quot;#Docker-info-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker info 命令&quot;&gt;&lt;/a&gt;Docker info 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker info 命令" scheme="http://www.gmlyo.com/tags/Docker-info-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker import 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-import-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-import-命令/</id>
    <published>2018-09-01T09:42:58.000Z</published>
    <updated>2018-09-01T09:43:17.437Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-import-命令"><a href="#Docker-import-命令" class="headerlink" title="Docker import 命令"></a>Docker import 命令</h1><a id="more"></a><p><strong>docker import :</strong> 从归档文件中创建镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">import</span> [<span class="keyword">OPTIONS</span>] <span class="keyword">file</span>|URL|- [REPOSITORY[:TAG]]</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-c :</strong> 应用 docker 指令创建镜像；</li><li><strong>-m :</strong> 提交时的说明文字；</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>从镜像归档文件 my_ubuntu_v3.tar 创建镜像，命名为 runoob/ubuntu:v4</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> ~] docker <span class="keyword">import</span> my_ubuntu_v3.tar runoob/<span class="string">ubuntu:</span>v4  </span><br><span class="line"><span class="string">sha256:</span><span class="number">63</span>ce4a6d6bc3fabb95dbd6c561404a309b7bdfc4e21c1d59fe9fe4299cbfea39</span><br><span class="line">[root<span class="meta">@localhost</span> ~] docker images runoob/<span class="string">ubuntu:</span>v4</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">runoob/ubuntu       v4                  <span class="number">63</span>ce4a6d6bc3        <span class="number">20</span> seconds ago      <span class="number">142.1</span> MB</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-import-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-import-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-import-命令&quot;&gt;&lt;a href=&quot;#Docker-import-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker import 命令&quot;&gt;&lt;/a&gt;Docker import 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker import 命令" scheme="http://www.gmlyo.com/tags/Docker-import-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker save 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-save-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-save-命令/</id>
    <published>2018-09-01T09:40:00.000Z</published>
    <updated>2018-09-01T09:42:22.795Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-save-命令"><a href="#Docker-save-命令" class="headerlink" title="Docker save 命令"></a>Docker save 命令</h1><a id="more"></a><p><strong>docker save :</strong> 将指定镜像保存成 tar 归档文件。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker save <span class="string">[OPTIONS]</span> IMAGE <span class="string">[IMAGE...]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-o :</strong> 输出到的文件。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将镜像 runoob/ubuntu:v3 生成 my_ubuntu_v3.tar 文档</p><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@localhost ~]</span> <span class="selector-tag">docker</span> <span class="selector-tag">save</span> <span class="selector-tag">-o</span> <span class="selector-tag">my_ubuntu_v3</span><span class="selector-class">.tar</span> <span class="selector-tag">runoob</span>/<span class="selector-tag">ubuntu</span><span class="selector-pseudo">:v3</span></span><br><span class="line"><span class="selector-attr">[root@localhost ~]</span> <span class="selector-tag">ll</span> <span class="selector-tag">my_ubuntu_v3</span><span class="selector-class">.tar</span></span><br><span class="line"><span class="selector-tag">-rw-------</span> <span class="selector-tag">1</span> <span class="selector-tag">runoob</span> <span class="selector-tag">runoob</span> <span class="selector-tag">142102016</span> <span class="selector-tag">Jul</span> <span class="selector-tag">11</span> <span class="selector-tag">01</span><span class="selector-pseudo">:37</span> <span class="selector-tag">my_ubuntu_v3</span><span class="selector-class">.ta</span></span><br></pre></td></tr></table></figure><h3 id="Docker-容器导入导出有两种方法"><a href="#Docker-容器导入导出有两种方法" class="headerlink" title="Docker 容器导入导出有两种方法"></a>Docker 容器导入导出有两种方法</h3><p>一种是使用 save 和 load 命令<br>使用例子如下：</p><figure class="highlight gauss"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">save</span> ubuntu:<span class="keyword">load</span> &gt; /root/ubuntu.tar</span><br><span class="line">docker <span class="keyword">load</span> &lt; ubuntu.tar</span><br></pre></td></tr></table></figure><p>一种是使用 export 和 import 命令<br>使用例子如下：</p><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">docker</span> <span class="keyword">export</span> <span class="number">98</span>ca36 &gt; ubuntu.tar</span><br><span class="line"><span class="title">cat</span> ubuntu.tar | sudo docker <span class="keyword">import</span> - ubuntu:<span class="keyword">import</span></span><br></pre></td></tr></table></figure><p>需要注意两种方法不可混用。</p><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-save-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-save-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-save-命令&quot;&gt;&lt;a href=&quot;#Docker-save-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker save 命令&quot;&gt;&lt;/a&gt;Docker save 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker save 命令" scheme="http://www.gmlyo.com/tags/Docker-save-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker build 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-build-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-build-命令/</id>
    <published>2018-09-01T09:32:04.000Z</published>
    <updated>2018-09-01T09:32:41.862Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-build-命令"><a href="#Docker-build-命令" class="headerlink" title="Docker build 命令"></a>Docker build 命令</h1><a id="more"></a><p><strong>docker build </strong> 命令用于使用 Dockerfile 创建镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker build [OPTIONS] PATH |<span class="string"> URL </span>|<span class="string"> -</span></span><br></pre></td></tr></table></figure><p>OPTIONS说明：</p><ul><li><strong>–build-arg=[] :</strong> 设置镜像创建时的变量；</li><li><strong>–cpu-shares :</strong> 设置 CPU 使用权重；</li><li><strong>–cpu-period :</strong> 限制 CPU CFS周期；</li><li><strong>–cpu-quota :</strong> 限制 CPU CFS配额；</li><li><strong>–cpuset-cpus :</strong> 指定使用的CPU id；</li><li><strong>–cpuset-mems :</strong> 指定使用的内存 id；</li><li><strong>–disable-content-trust :</strong> 忽略校验，默认开启；</li><li><strong>-f :</strong> 指定要使用的 Dockerfile 路径；</li><li><strong>–force-rm :</strong> 设置镜像过程中删除中间容器；</li><li><strong>–isolation :</strong> 使用容器隔离技术；</li><li><strong>–label=[] :</strong> 设置镜像使用的元数据；</li><li><strong>-m :</strong> 设置内存最大值；</li><li><strong>–memory-swap :</strong> 设置 swap 的最大值为 内存+swap，”-1” 表示不限 swap；</li><li><strong>–no-cache :</strong> 创建镜像的过程不使用缓存；</li><li><strong>–pull :</strong> 尝试去更新镜像的新版本；</li><li><strong>–quiet, -q :</strong> 安静模式，成功后只输出镜像 ID；</li><li><strong>–rm :</strong> 设置镜像成功后删除中间容器；</li><li><strong>–shm-size :</strong> 设置 /dev/shm 的大小，默认值是 64M；</li><li><strong>–ulimit :</strong> Ulimit 配置。</li><li><strong>–tag, -t:</strong> 镜像的名字及标签，通常 name:tag 或者 name 格式；可以在一次构建中为一个镜像设置多个标签。</li><li><strong>–network:</strong> 默认 default。在构建期间设置RUN指令的网络模式</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>使用当前目录的 Dockerfile 创建镜像，标签为 runoob/ubuntu:v1。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>-t runoob/ubuntu:<span class="built_in">v1</span> .</span><br></pre></td></tr></table></figure><p>使用 URL <strong>github.com/creack/docker-firefox</strong> 的 Dockerfile 创建镜像。</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">docker</span> <span class="keyword">build </span>github.com/creack/docker-firefox</span><br></pre></td></tr></table></figure><p>也可以通过 -f Dockerfile 文件的位置：</p><figure class="highlight n1ql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">build</span> -f /<span class="keyword">path</span>/<span class="keyword">to</span>/a/Dockerfile .</span><br></pre></td></tr></table></figure><p>在 Docker 守护进程执行 Dockerfile 中的指令前，首先会对 Dockerfile 进行语法检查，有语法错误时会返回：</p><figure class="highlight subunit"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker build -t test/myapp .</span><br><span class="line">Sending build context to Docker daemon 2.048 kB</span><br><span class="line"><span class="keyword">Error </span>response from daemon: Unknown instruction: RUNCMD</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-build-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-build-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-build-命令&quot;&gt;&lt;a href=&quot;#Docker-build-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker build 命令&quot;&gt;&lt;/a&gt;Docker build 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker build 命令" scheme="http://www.gmlyo.com/tags/Docker-build-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker rmi 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-rmi-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-rmi-命令/</id>
    <published>2018-09-01T09:27:30.000Z</published>
    <updated>2018-09-01T09:28:46.334Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-rmi-命令"><a href="#Docker-rmi-命令" class="headerlink" title="Docker rmi 命令"></a>Docker rmi 命令</h1><a id="more"></a><p><strong>docker rmi :</strong> 删除本地一个或多个镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rmi <span class="string">[OPTIONS]</span> IMAGE <span class="string">[IMAGE...]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-f :</strong> 强制删除；</li><li><strong>–no-prune :</strong> 不移除该镜像的过程镜像，默认移除；</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>强制删除本地镜像 runoob/ubuntu:v4。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> ~] docker rmi -f runoob/<span class="string">ubuntu:</span>v4</span><br><span class="line"><span class="string">Untagged:</span> runoob/<span class="string">ubuntu:</span>v4</span><br><span class="line"><span class="string">Deleted:</span> <span class="string">sha256:</span><span class="number">1</span>c06aa18edee44230f93a90a7d88139235de12cd4c089d41eed8419b503072be</span><br><span class="line"><span class="string">Deleted:</span> <span class="string">sha256:</span><span class="number">85</span>feb446e89a28d58ee7d80ea5ce367eebb7cec70f0ec18aa4faa874cbd97c73</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-rmi-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-rmi-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-rmi-命令&quot;&gt;&lt;a href=&quot;#Docker-rmi-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker rmi 命令&quot;&gt;&lt;/a&gt;Docker rmi 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker rmi 命令" scheme="http://www.gmlyo.com/tags/Docker-rmi-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker cp 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-cp-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-cp-命令/</id>
    <published>2018-09-01T09:19:13.000Z</published>
    <updated>2018-09-01T09:20:01.585Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-cp-命令"><a href="#Docker-cp-命令" class="headerlink" title="Docker cp 命令"></a>Docker cp 命令</h1><a id="more"></a><p><strong>docker cp :</strong> 用于容器与主机之间的数据拷贝。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span>:SRC_PATH DEST_PATH|-</span><br><span class="line">docker cp <span class="comment">[OPTIONS]</span> SRC_PATH|- <span class="keyword">CONTAINER</span>:DEST_PATH</span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-L :</strong> 保持源目标中的链接</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将主机 /www/runoob 目录拷贝到容器 <code>96f7f14e99ab</code> 的 /www 目录下。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="regexp">/www/</span>runoob <span class="number">96</span><span class="string">f7f14e99ab:</span><span class="regexp">/www/</span></span><br></pre></td></tr></table></figure><p>将主机 /www/runoob 目录拷贝到容器 <code>96f7f14e99ab</code> 中，目录重命名为 www。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="regexp">/www/</span>runoob <span class="number">96</span><span class="string">f7f14e99ab:</span>/www</span><br></pre></td></tr></table></figure><p>将容器 <code>96f7f14e99ab</code> 的 /www 目录拷贝到主机的 /tmp 目录中。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker cp <span class="number">96</span><span class="string">f7f14e99ab:</span><span class="regexp">/www /</span>tmp/</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-cp-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-cp-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-cp-命令&quot;&gt;&lt;a href=&quot;#Docker-cp-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker cp 命令&quot;&gt;&lt;/a&gt;Docker cp 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker cp 命令" scheme="http://www.gmlyo.com/tags/Docker-cp-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker commit 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-commit-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-commit-命令/</id>
    <published>2018-09-01T08:55:29.000Z</published>
    <updated>2018-09-01T08:56:15.321Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-commit-命令"><a href="#Docker-commit-命令" class="headerlink" title="Docker commit 命令"></a>Docker commit 命令</h1><a id="more"></a><p><strong>docker commit :</strong> 从容器创建一个新的镜像。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker commit <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[REPOSITORY<span class="comment">[:TAG]</span>]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-a :</strong> 提交的镜像作者；</li><li><strong>-c :</strong> 使用 Dockerfile 指令来创建镜像；</li><li><strong>-m :</strong> 提交时的说明文字；</li><li><strong>-p :</strong> 在 commit 时，将容器暂停。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将容器 <code>a404c6c174a2</code> 保存为新的镜像，并添加提交人信息和说明信息。</p><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="meta">@localhost</span> ~] docker commit -a <span class="string">"runoob.com"</span> -m <span class="string">"my apache"</span> a404c6c174a2 <span class="string">mymysql:</span>v1 </span><br><span class="line"><span class="string">sha256:</span><span class="number">37</span>af1236adef1544e8886be23010b66577647a40bc02c0885a6600b33ee28057</span><br><span class="line">[root<span class="meta">@localhost</span> ~] docker images <span class="string">mymysql:</span>v1</span><br><span class="line">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class="line">mymysql             v1                  <span class="number">37</span>af1236adef        <span class="number">15</span> seconds ago      <span class="number">329</span> MB</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-commit-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-commit-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-commit-命令&quot;&gt;&lt;a href=&quot;#Docker-commit-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker commit 命令&quot;&gt;&lt;/a&gt;Docker commit 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker commit 命令" scheme="http://www.gmlyo.com/tags/Docker-commit-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker port 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-port-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-port-命令/</id>
    <published>2018-09-01T08:52:46.000Z</published>
    <updated>2018-09-01T08:53:20.961Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-port-命令"><a href="#Docker-port-命令" class="headerlink" title="Docker port 命令"></a>Docker port 命令</h1><a id="more"></a><p><strong>docker port :</strong> 列出指定的容器的端口映射，或者查找将 PRIVATE_PORT NAT 到面向公众的端口。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker<span class="built_in"> port </span>[OPTIONS] CONTAINER [PRIVATE_PORT[/PROTO]]</span><br></pre></td></tr></table></figure><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>查看容器 mynginx 的端口映射情况。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[root@localhost ~] docker<span class="built_in"> port </span>mymysql</span><br><span class="line">3306/tcp -&gt; 0.0.0.0:3306</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-port-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-port-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-port-命令&quot;&gt;&lt;a href=&quot;#Docker-port-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker port 命令&quot;&gt;&lt;/a&gt;Docker port 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker port 命令" scheme="http://www.gmlyo.com/tags/Docker-port-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker export 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-export-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-export-命令/</id>
    <published>2018-09-01T08:42:53.000Z</published>
    <updated>2018-09-01T08:45:03.483Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-export-命令"><a href="#Docker-export-命令" class="headerlink" title="Docker export 命令"></a>Docker export 命令</h1><a id="more"></a><p><strong>docker export :</strong> 将文件系统作为一个 tar 归档文件导出到 STDOUT。</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker export <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-o :</strong> 将输入内容写到文件。</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>将 <code>id</code> 为 <code>a404c6c174a2</code> 的容器按日期保存为 tar 文件。</p><figure class="highlight llvm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[root<span class="title">@localhost</span> ~]# docker export -o mysql-`date +<span class="symbol">%Y</span><span class="symbol">%m</span><span class="symbol">%d</span>`.tar a<span class="number">404</span><span class="keyword">c</span><span class="number">6</span><span class="keyword">c</span><span class="number">174</span>a<span class="number">2</span></span><br><span class="line">[root<span class="title">@localhost</span> ~]# ls mysql-`date +<span class="symbol">%Y</span><span class="symbol">%m</span><span class="symbol">%d</span>`.tar</span><br><span class="line">mysql<span class="number">-20160711</span>.tar</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-export-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-export-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-export-命令&quot;&gt;&lt;a href=&quot;#Docker-export-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker export 命令&quot;&gt;&lt;/a&gt;Docker export 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker export 命令" scheme="http://www.gmlyo.com/tags/Docker-export-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker logs 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-logs-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-logs-命令/</id>
    <published>2018-09-01T08:38:24.000Z</published>
    <updated>2018-09-01T08:39:11.352Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-logs-命令"><a href="#Docker-logs-命令" class="headerlink" title="Docker logs 命令"></a>Docker logs 命令</h1><a id="more"></a><p><strong>docker logs :</strong> 获取容器的日志</p><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-f :</strong> 跟踪日志输出</li><li><strong>–since :</strong> 显示某个开始时间的所有日志</li><li><strong>-t :</strong> 显示时间戳</li><li><strong>–tail :</strong>仅列出最新N条容器日志</li></ul><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><p>跟踪查看容器 mynginx 的日志输出。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@localhost ~]</span># docker logs -f mynginx</span><br><span class="line"><span class="number">192.168.239.1</span> - - <span class="string">[10/Jul/2016:16:53:33 +0000]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">200</span> <span class="number">612</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36"</span> <span class="string">"-"</span></span><br><span class="line"><span class="number">2016</span>/<span class="number">07</span>/<span class="number">10</span> <span class="number">16</span>:<span class="number">53</span>:<span class="number">33</span> <span class="string">[error]</span> <span class="number">5</span>#<span class="number">5</span>: *<span class="number">1</span> open() <span class="string">"/usr/share/nginx/html/favicon.ico"</span> failed (<span class="number">2</span>: No such file or directory), client: <span class="number">192.168.239.1</span>, server: localhost, request: <span class="string">"<span class="keyword">GET</span> /favicon.ico HTTP/1.1"</span>, host: <span class="string">"192.168.239.130"</span>, referrer: <span class="string">"http://192.168.239.130/"</span></span><br><span class="line"><span class="number">192.168.239.1</span> - - <span class="string">[10/Jul/2016:16:53:33 +0000]</span> <span class="string">"<span class="keyword">GET</span> /favicon.ico HTTP/1.1"</span> <span class="number">404</span> <span class="number">571</span> <span class="string">"http://192.168.239.130/"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36"</span> <span class="string">"-"</span></span><br><span class="line"><span class="number">192.168.239.1</span> - - <span class="string">[10/Jul/2016:16:53:59 +0000]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">304</span> <span class="number">0</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36"</span> <span class="string">"-"</span></span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>查看容器 mynginx 从 2016年7月1日 后的最新 10条 日志。</p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker logs <span class="attribute">--since</span>=<span class="string">"2016-07-01"</span> <span class="attribute">--tail</span>=10 mynginx</span><br></pre></td></tr></table></figure><h3 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h3><p><a href="http://www.runoob.com/docker/docker-logs-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-logs-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-logs-命令&quot;&gt;&lt;a href=&quot;#Docker-logs-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker logs 命令&quot;&gt;&lt;/a&gt;Docker logs 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker logs 命令" scheme="http://www.gmlyo.com/tags/Docker-logs-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker attach 命令</title>
    <link href="http://www.gmlyo.com/2018/09/01/Docker-attach-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/09/01/Docker-attach-命令/</id>
    <published>2018-09-01T08:03:04.000Z</published>
    <updated>2018-09-01T08:04:05.152Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-attach-命令"><a href="#Docker-attach-命令" class="headerlink" title="Docker attach 命令"></a>Docker attach 命令</h1><a id="more"></a><p><strong>docker attach :</strong> 连接到正在运行中的容器。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker attach <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span></span><br></pre></td></tr></table></figure><p>要 attach 上去的容器必须正在运行，可以同时连接上同一个 container 来共享屏幕（与 screen 命令的 attach 类似）。</p><p>官方文档中说 attach 后可以通过 <code>CTRL-C</code> 来 detach，但实际上经过测试，如果 container 当前在运行 bash，<code>CTRL-C</code> 自然是当前行的输入，没有退出；如果 container 当前正在前台运行进程，如输出 nginx 的 access.log 日志，<code>CTRL-C</code> 不仅会导致退出容器，而且还 stop 了。这不是我们想要的，detach 的意思按理应该是脱离容器终端，但容器依然运行。好在 attach 是可以带上 <code>--sig-proxy=false</code> 来确保 <code>CTRL-D</code> 或 <code>CTRL-C</code> 不会关闭容器。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>容器 mynginx 将访问日志指到标准输出，连接到容器查看访问信息。</p><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">[root@localhost ~]</span># docker attach --sig-proxy=false mynginx</span><br><span class="line"><span class="number">192.168.239.1</span> - - <span class="string">[10/Jul/2016:16:54:26 +0000]</span> <span class="string">"<span class="keyword">GET</span> / HTTP/1.1"</span> <span class="number">304</span> <span class="number">0</span> <span class="string">"-"</span> <span class="string">"Mozilla/5.0 (Windows NT 6.1; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/45.0.2454.93 Safari/537.36"</span> <span class="string">"-"</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-attach-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-attach-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-attach-命令&quot;&gt;&lt;a href=&quot;#Docker-attach-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker attach 命令&quot;&gt;&lt;/a&gt;Docker attach 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker attach 命令" scheme="http://www.gmlyo.com/tags/Docker-attach-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker top 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-top-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-top-命令/</id>
    <published>2018-08-31T10:00:01.000Z</published>
    <updated>2018-09-01T05:29:05.708Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-top-命令"><a href="#Docker-top-命令" class="headerlink" title="Docker top 命令"></a>Docker top 命令</h1><a id="more"></a><p><strong>docker top :</strong> 查看容器中运行的进程信息，支持 ps 命令参数。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker top <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[ps OPTIONS]</span></span><br></pre></td></tr></table></figure><p>容器运行时不一定有 /bin/bash 终端来交互执行 top 命令，而且容器还不一定有 top 命令，可以使用docker top 来实现查看 container 中正在运行的进程。</p><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>查看容器 mymysql 的进程信息。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-attr">[root@localhost mysql]</span># <span class="selector-tag">docker</span> <span class="selector-tag">top</span> <span class="selector-tag">mymysql</span></span><br><span class="line"><span class="selector-tag">UID</span>    <span class="selector-tag">PID</span>    <span class="selector-tag">PPID</span>    <span class="selector-tag">C</span>      <span class="selector-tag">STIME</span>   <span class="selector-tag">TTY</span>  <span class="selector-tag">TIME</span>       <span class="selector-tag">CMD</span></span><br><span class="line">999    40347  40331   18     00<span class="selector-pseudo">:58</span>   ?    00<span class="selector-pseudo">:00</span><span class="selector-pseudo">:02</span>   <span class="selector-tag">mysqld</span></span><br></pre></td></tr></table></figure><p>查看所有运行容器的进程信息。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span>  `docker ps | grep Up | awk <span class="string">'&#123;print $1&#125;'</span>`; <span class="keyword">do</span> <span class="built_in">echo</span> \ &amp;&amp; docker top <span class="variable">$i</span>; <span class="keyword">done</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-top-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-top-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-top-命令&quot;&gt;&lt;a href=&quot;#Docker-top-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker top 命令&quot;&gt;&lt;/a&gt;Docker top 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker top 命令" scheme="http://www.gmlyo.com/tags/Docker-top-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker inspect 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-inspect-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-inspect-命令/</id>
    <published>2018-08-31T09:55:20.000Z</published>
    <updated>2018-08-31T09:55:28.401Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-inspect-命令"><a href="#Docker-inspect-命令" class="headerlink" title="Docker inspect 命令"></a>Docker inspect 命令</h1><a id="more"></a><p><strong>docker inspect :</strong> 获取容器/镜像的元数据。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker inspect <span class="string">[OPTIONS]</span> NAME|ID <span class="string">[NAME|ID...]</span></span><br></pre></td></tr></table></figure><p>OPTIONS说明：</p><ul><li><strong>-f :</strong> 指定返回值的模板文件。</li><li><strong>-s :</strong> 显示总的文件大小。</li><li><strong>–type :</strong> 为指定类型返回JSON。</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>获取镜像 mysql:5.6 的元信息。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line">runoob<span class="variable">@runoob</span><span class="symbol">:~</span><span class="variable">$ </span>docker inspect <span class="symbol">mysql:</span><span class="number">5.6</span></span><br><span class="line">[</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="string">"Id"</span>: <span class="string">"sha256:2c0964ec182ae9a045f866bbc2553087f6e42bfc16074a74fb820af235f070ec"</span>,</span><br><span class="line">        <span class="string">"RepoTags"</span>: [</span><br><span class="line">            <span class="string">"mysql:5.6"</span></span><br><span class="line">        ],</span><br><span class="line">        <span class="string">"RepoDigests"</span>: [],</span><br><span class="line">        <span class="string">"Parent"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Comment"</span>: <span class="string">""</span>,</span><br><span class="line">        <span class="string">"Created"</span>: <span class="string">"2016-05-24T04:01:41.168371815Z"</span>,</span><br><span class="line">        <span class="string">"Container"</span>: <span class="string">"e0924bc460ff97787f34610115e9363e6363b30b8efa406e28eb495ab199ca54"</span>,</span><br><span class="line">        <span class="string">"ContainerConfig"</span>: &#123;</span><br><span class="line">            <span class="string">"Hostname"</span>: <span class="string">"b0cf605c7757"</span>,</span><br><span class="line">            <span class="string">"Domainname"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"User"</span>: <span class="string">""</span>,</span><br><span class="line">            <span class="string">"AttachStdin"</span>: <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">"AttachStdout"</span>: <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">"AttachStderr"</span>: <span class="keyword">false</span>,</span><br><span class="line">            <span class="string">"ExposedPorts"</span>: &#123;</span><br><span class="line">                <span class="string">"3306/tcp"</span>: &#123;&#125;</span><br><span class="line">            &#125;,</span><br><span class="line">...</span><br></pre></td></tr></table></figure><p>获取正在运行的容器 mymysql 的 IP。</p><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">runoob<span class="variable">@runoob</span><span class="symbol">:~</span><span class="variable">$ </span>docker inspect --format=<span class="string">'&#123;&#123;range .NetworkSettings.Networks&#125;&#125;&#123;&#123;.IPAddress&#125;&#125;&#123;&#123;end&#125;&#125;'</span> mymysql</span><br><span class="line"><span class="number">172.17</span>.<span class="number">0</span>.<span class="number">3</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-inspect-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-inspect-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-inspect-命令&quot;&gt;&lt;a href=&quot;#Docker-inspect-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker inspect 命令&quot;&gt;&lt;/a&gt;Docker inspect 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker inspect 命令" scheme="http://www.gmlyo.com/tags/Docker-inspect-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker ps 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-ps-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-ps-命令/</id>
    <published>2018-08-31T09:33:14.000Z</published>
    <updated>2018-09-01T09:29:01.672Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-ps-命令"><a href="#Docker-ps-命令" class="headerlink" title="Docker ps 命令"></a>Docker ps 命令</h1><a id="more"></a><p><strong>docker ps :</strong> 列出容器</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight accesslog"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps <span class="string">[OPTIONS]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-a :</strong> 显示所有的容器，包括未运行的。</li><li><strong>-f :</strong> 根据条件过滤显示的内容。</li><li><strong>–format :</strong> 指定返回值的模板文件。</li><li><strong>-l :</strong> 显示最近创建的容器。</li><li><strong>-n :</strong> 列出最近创建的 n 个容器。</li><li><strong>–no-trunc :</strong> 不截断输出。</li><li><strong>-q :</strong> 静默模式，只显示容器编号。</li><li><strong>-s :</strong> 显示总的文件大小。</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>列出所有在运行的容器信息</p><figure class="highlight clean"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">runoob@runoob:~$ docker ps</span><br><span class="line">CONTAINER ID   IMAGE          COMMAND                ...  PORTS                    NAMES</span><br><span class="line"><span class="number">09</span>b93464c2f7   nginx:latest   <span class="string">"nginx -g 'daemon off"</span> ...  <span class="number">80</span>/tcp, <span class="number">443</span>/tcp          myrunoob</span><br><span class="line"><span class="number">96</span>f7f14e99ab   mysql:<span class="number">5.6</span>      <span class="string">"docker-entrypoint.sh"</span> ...  <span class="number">0.0</span><span class="number">.0</span><span class="number">.0</span>:<span class="number">3306</span>-&gt;<span class="number">3306</span>/tcp   mymysql</span><br></pre></td></tr></table></figure><p>列出最近创建的 5 个容器信息</p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">runoob@runo<span class="symbol">ob:</span>~$ docker ps -<span class="built_in">n</span> <span class="number">5</span></span><br><span class="line">CONTAINER ID        IMAGE               COMMAND                   CREATED           </span><br><span class="line"><span class="number">09</span>b93464c2f7        ngi<span class="symbol">nx:la</span>test        <span class="string">"nginx -g 'daemon off"</span>    <span class="number">2</span> <span class="built_in">days</span> ago   ...     </span><br><span class="line">b8573233d675        ngi<span class="symbol">nx:la</span>test        <span class="string">"/bin/bash"</span>               <span class="number">2</span> <span class="built_in">days</span> ago   ...     </span><br><span class="line">b1a0703e41e7        ngi<span class="symbol">nx:la</span>test        <span class="string">"nginx -g 'daemon off"</span>    <span class="number">2</span> <span class="built_in">days</span> ago   ...    </span><br><span class="line">f46fb1dec520        <span class="number">5</span>c6e1090e771        <span class="string">"/bin/sh -c 'set -x \t"</span>   <span class="number">2</span> <span class="built_in">days</span> ago   ...   </span><br><span class="line">a63b4a5597de        <span class="number">860</span>c279d2fec        <span class="string">"bash"</span>                    <span class="number">2</span> <span class="built_in">days</span> ago   ...</span><br></pre></td></tr></table></figure><p>列出所有创建的容器ID</p><figure class="highlight armasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="symbol">runoob</span><span class="comment">@runoob:~$ docker ps -a -q</span></span><br><span class="line"><span class="number">09</span>b93464c2f7</span><br><span class="line"><span class="keyword">b8573233d675</span></span><br><span class="line"><span class="keyword">b1a0703e41e7</span></span><br><span class="line"><span class="keyword">f46fb1dec520</span></span><br><span class="line"><span class="keyword">a63b4a5597de</span></span><br><span class="line"><span class="keyword">6a4aa42e947b</span></span><br><span class="line"><span class="keyword">de7bb36e7968</span></span><br><span class="line"><span class="keyword">43a432b73776</span></span><br><span class="line"><span class="keyword">664a8ab1a585</span></span><br><span class="line"><span class="keyword">ba52eb632bbd</span></span><br><span class="line"><span class="keyword">...</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-ps-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-ps-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-ps-命令&quot;&gt;&lt;a href=&quot;#Docker-ps-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker ps 命令&quot;&gt;&lt;/a&gt;Docker ps 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker ps 命令" scheme="http://www.gmlyo.com/tags/Docker-ps-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker exec 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-exec-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-exec-命令/</id>
    <published>2018-08-31T09:04:54.000Z</published>
    <updated>2018-08-31T09:25:12.665Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-exec-命令"><a href="#Docker-exec-命令" class="headerlink" title="Docker exec 命令"></a>Docker exec 命令</h1><a id="more"></a><p><strong>docker exec ：</strong> 在运行的容器中执行命令</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">exec</span> [OPTIONS] CONTAINER COMMAND [ARG...]</span><br></pre></td></tr></table></figure><p>OPTIONS说明：</p><ul><li><strong>-d :</strong> 分离模式: 在后台运行</li><li><strong>-i :</strong> 即使没有附加也保持 STDIN 打开</li><li><strong>-t :</strong> 分配一个伪终端</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>在容器 mynginx 中以交互模式执行容器内 /root/runoob.sh 脚本</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">runoob@runoob:~$ docker <span class="built_in">exec</span> -it mynginx /bin/sh /root/runoob.sh</span><br><span class="line">http://www.runoob.com/</span><br></pre></td></tr></table></figure><p>在容器 mynginx 中开启一个交互模式的终端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">runoob@runoob:~$ docker <span class="built_in">exec</span> -i -t  mynginx /bin/bash</span><br><span class="line">root@b1a0703e41e7:/<span class="comment">#</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-exec-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-exec-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-exec-命令&quot;&gt;&lt;a href=&quot;#Docker-exec-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker exec 命令&quot;&gt;&lt;/a&gt;Docker exec 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker exec 命令" scheme="http://www.gmlyo.com/tags/Docker-exec-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker pause/unpause 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-pause-unpause-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-pause-unpause-命令/</id>
    <published>2018-08-31T09:03:29.000Z</published>
    <updated>2018-08-31T09:23:50.718Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-pause-unpause-命令"><a href="#Docker-pause-unpause-命令" class="headerlink" title="Docker pause/unpause 命令"></a>Docker pause/unpause 命令</h1><a id="more"></a><p><strong>docker pause :</strong> 暂停容器中所有的进程。<br><strong>docker unpause :</strong> 恢复容器中所有的进程。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker pause <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[CONTAINER...]</span></span><br><span class="line">docker unpause <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[CONTAINER...]</span></span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>暂停数据库容器 db01 提供服务。</p><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">pause</span> db01</span><br></pre></td></tr></table></figure><p>恢复数据库容器 db01 提供服务。</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> unpause db01</span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-pause-unpause-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-pause-unpause-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-pause-unpause-命令&quot;&gt;&lt;a href=&quot;#Docker-pause-unpause-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker pause/unpause 命令&quot;&gt;&lt;/a&gt;Docker pause/unpause 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker pause/unpause 命令" scheme="http://www.gmlyo.com/tags/Docker-pause-unpause-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker rm 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-rm-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-rm-命令/</id>
    <published>2018-08-31T08:57:24.000Z</published>
    <updated>2018-09-01T09:28:30.124Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-rm-命令"><a href="#Docker-rm-命令" class="headerlink" title="Docker rm 命令"></a>Docker rm 命令</h1><a id="more"></a><p><strong>docker rm ：</strong>删除一个或多个容器</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[CONTAINER...]</span></span><br></pre></td></tr></table></figure><p>OPTIONS 说明：</p><ul><li><strong>-f :</strong> 通过 <code>SIGKILL</code> 信号强制删除一个运行中的容器</li><li><strong>-l :</strong> 移除容器间的网络连接，而非容器本身</li><li><strong>-v :</strong> 删除与容器关联的卷</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>强制删除容器 db01、db02</p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker</span> rm -f db01 db02</span><br></pre></td></tr></table></figure><p>移除容器 nginx01 对容器 db01 的连接，连接名 db</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">rm</span> -<span class="keyword">l</span> <span class="keyword">db</span></span><br></pre></td></tr></table></figure><p>删除容器 nginx01，并删除容器挂载的数据卷</p><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker rm -v <span class="symbol">nginx01</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-rm-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-rm-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-rm-命令&quot;&gt;&lt;a href=&quot;#Docker-rm-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker rm 命令&quot;&gt;&lt;/a&gt;Docker rm 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker rm 命令" scheme="http://www.gmlyo.com/tags/Docker-rm-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker kill 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-kill-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-kill-命令/</id>
    <published>2018-08-31T08:50:31.000Z</published>
    <updated>2018-08-31T09:23:14.643Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-kill-命令"><a href="#Docker-kill-命令" class="headerlink" title="Docker kill 命令"></a>Docker kill 命令</h1><a id="more"></a><p><strong>docker kill :</strong> 杀掉一个运行中的容器。</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker kill <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[CONTAINER...]</span></span><br></pre></td></tr></table></figure><p>OPTIONS说明：</p><ul><li><strong>-s :</strong> 向容器发送一个信号</li></ul><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>杀掉运行中的容器 mynginx<br><figure class="highlight cos"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="keyword">kill</span> -<span class="keyword">s</span> <span class="keyword">KILL</span> mynginx</span><br><span class="line">mynginx</span><br></pre></td></tr></table></figure></p><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-kill-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-kill-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-kill-命令&quot;&gt;&lt;a href=&quot;#Docker-kill-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker kill 命令&quot;&gt;&lt;/a&gt;Docker kill 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker kill 命令" scheme="http://www.gmlyo.com/tags/Docker-kill-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>Docker start/stop/restart 命令</title>
    <link href="http://www.gmlyo.com/2018/08/31/Docker-start-stop-restart-%E5%91%BD%E4%BB%A4/"/>
    <id>http://www.gmlyo.com/2018/08/31/Docker-start-stop-restart-命令/</id>
    <published>2018-08-31T08:46:15.000Z</published>
    <updated>2018-08-31T09:25:57.227Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Docker-start-stop-restart-命令"><a href="#Docker-start-stop-restart-命令" class="headerlink" title="Docker start/stop/restart 命令"></a>Docker start/stop/restart 命令</h1><a id="more"></a><p><strong>docker start: </strong> 启动一个或多少已经被停止的容器<br><strong>docker stop: </strong> 停止一个运行中的容器<br><strong>docker restart: </strong> 重启容器</p><h2 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h2><figure class="highlight inform7"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">docker start <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[CONTAINER...]</span></span><br><span class="line">docker stop <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[CONTAINER...]</span></span><br><span class="line">docker restart <span class="comment">[OPTIONS]</span> <span class="keyword">CONTAINER</span> <span class="comment">[CONTAINER...]</span></span><br></pre></td></tr></table></figure><h2 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h2><p>启动已被停止的容器 myrunoob</p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="literal">start</span> myrunoob</span><br></pre></td></tr></table></figure><p>停止运行中的容器 myrunoob</p><figure class="highlight arduino"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker <span class="built_in">stop</span> myrunoob</span><br></pre></td></tr></table></figure><p>重启容器 myrunoob</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">docker restart myrunoob</span></span><br></pre></td></tr></table></figure><h2 id="参考文档"><a href="#参考文档" class="headerlink" title="参考文档"></a>参考文档</h2><p><a href="http://www.runoob.com/docker/docker-start-stop-restart-command.html" target="_blank" rel="noopener">http://www.runoob.com/docker/docker-start-stop-restart-command.html</a></p>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Docker-start-stop-restart-命令&quot;&gt;&lt;a href=&quot;#Docker-start-stop-restart-命令&quot; class=&quot;headerlink&quot; title=&quot;Docker start/stop/restart 命令&quot;&gt;&lt;/a&gt;Docker start/stop/restart 命令&lt;/h1&gt;
    
    </summary>
    
      <category term="Docker笔记" scheme="http://www.gmlyo.com/categories/Docker%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="Docker start/stop/restart 命令" scheme="http://www.gmlyo.com/tags/Docker-start-stop-restart-%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
</feed>
